From fabc6b48de26db36ea989a6cf5749d3360166250 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Tue, 22 Nov 2016 12:34:24 +0200
Subject: [PATCH 01/89] Step 1: Introduction

---
 manuals/templates/step1.md | 18 ++++++++++++++++++
 manuals/views/step1.md     | 30 ++++++++++++++++++++++++++++++
 2 files changed, 48 insertions(+)
 create mode 100644 manuals/templates/step1.md
 create mode 100644 manuals/views/step1.md

diff --git a/manuals/templates/step1.md b/manuals/templates/step1.md
new file mode 100644
index 0000000..0609747
--- /dev/null
+++ b/manuals/templates/step1.md
@@ -0,0 +1,18 @@
+In this tutorial, we would like to introduce Angular 2 to Blaze developers.
+
+We will start with a brief about Angular 2 and it's architecture and then we could get a better understanding about the similarities and differences between this two platforms.
+
+We will also show how to run Blaze application with Angular 2, and how to migrate step-by-step each component.
+
+## Reasons to migrate
+
+- Blaze no longer maintained and developed (Since [Meteor 1.2](https://forums.meteor.com/t/next-steps-on-blaze-and-the-view-layer/13561)).
+- Angular 2 provides more than UI templating and utils - you also get better architecture of the project.
+- Angular 2 support a lot of features that missing in Blaze and you need to get from external packages (such as routing, i18n).
+- Angular 2 supports [server side rendering](https://universal.angular.io/).
+
+## What you need to know?
+
+In this tutorial, we will migrate from ES2016 to TypeScript which has a better experience when developing Angular 2 application, so we recommend to go through [TypeScript documentation](https://www.typescriptlang.org/docs/tutorial.html).
+
+We also recommend to start this tutorial after a you wen't through the Angular 2 [tutorial and documentation](https://angular.io/docs/ts/latest/).
diff --git a/manuals/views/step1.md b/manuals/views/step1.md
new file mode 100644
index 0000000..8bc212f
--- /dev/null
+++ b/manuals/views/step1.md
@@ -0,0 +1,30 @@
+[{]: <region> (header)
+# Step 1: Introduction
+[}]: #
+[{]: <region> (body)
+In this tutorial, we would like to introduce Angular 2 to Blaze developers.
+
+We will start with a brief about Angular 2 and it's architecture and then we could get a better understanding about the similarities and differences between this two platforms.
+
+We will also show how to run Blaze application with Angular 2, and how to migrate step-by-step each component.
+
+## Reasons to migrate
+
+- Blaze no longer maintained and developed (Since [Meteor 1.2](https://forums.meteor.com/t/next-steps-on-blaze-and-the-view-layer/13561)).
+- Angular 2 provides more than UI templating and utils - you also get better architecture of the project.
+- Angular 2 support a lot of features that missing in Blaze and you need to get from external packages (such as routing, i18n).
+- Angular 2 supports [server side rendering](https://universal.angular.io/).
+
+## What you need to know?
+
+In this tutorial, we will migrate from ES2016 to TypeScript which has a better experience when developing Angular 2 application, so we recommend to go through [TypeScript documentation](https://www.typescriptlang.org/docs/tutorial.html).
+
+We also recommend to start this tutorial after a you wen't through the Angular 2 [tutorial and documentation](https://angular.io/docs/ts/latest/).
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Intro](../../README.md) | [Next Step >](step2.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 2d7b2bc20b0f9aa3dacbea248e495211748dbec4 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Tue, 22 Nov 2016 12:47:50 +0200
Subject: [PATCH 02/89] Step 2: Understanding Angular 2

---
 manuals/templates/step2.md | 106 ++++++++++++++++++++++++++++++++++++++++
 manuals/views/step2.md     | 118 +++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 224 insertions(+)
 create mode 100644 manuals/templates/step2.md
 create mode 100644 manuals/views/step2.md

diff --git a/manuals/templates/step2.md b/manuals/templates/step2.md
new file mode 100644
index 0000000..d4ad608
--- /dev/null
+++ b/manuals/templates/step2.md
@@ -0,0 +1,106 @@
+
+Now let's understand Angular 2 and how it's fundamentals are related to Blaze fundamentals.
+
+## Angular 2 Architecture
+
+We assume that you already familiar to the Blaze architecture and flow of data (as described [here](http://guide.meteor.com/blaze.html#understanding-blaze)).
+
+Angular 2 architecture documentation is available [here](https://angular.io/docs/ts/latest/guide/architecture.html) and we recommend to go through it.
+
+#### TL;DR
+
+1. With Angular 2 we can create modules and libraries for better modularization of the code - while Blaze only provides a Template with code behind.
+
+2. Angular 2 provides Components as class - Blaze calls it Spacebars and Helpers.
+
+3. Angular 2 uses TypeScript and it's Decorators to describe and extend it's metadata for variables, methods and classes - Blaze uses JavaScript ES2016 without metadata feature.
+
+4. Both provides the ability to create view binding and control it's flow and change detection.
+
+5. In Blaze, templates can use another templates - Angular 2 provides Components and Directives that can load another view components.
+
+6. Angular 2 provides a great Dependency Injection.
+
+7. In Angular 2 you can create Pipes which are view transformation utilities - in Blaze it's just another helper for the view.
+
+8. Angular 2 Services provides a great way share data and state between components and directives.
+
+## Spacebars vs Angular 2 Template
+
+Blaze uses Spacebars to describe it's UI and elements, usually as HTML content inside `<template>` tag, and with JavaScript code that extends the template with context and Helpers.
+
+Angular 2 has a similar idea - the templates are inside HTML files, and TypeScript code creates a `class` that uses this template, and provides context (`this`) and properties which the view data.
+
+Let's start with an example from Blaze's for a simple template:
+
+    <template name="Example">
+        { { myVar } }
+    </template>
+
+And the JavaScript code for this template:
+
+    import { Template } from 'meteor/templating';
+
+    Template.Example.helpers({
+      myVar() {
+        return "Hello World!";
+      }
+    });
+
+We can see that we have a template file named "Example" that uses a helper named `myVar`.
+
+This same code, will be a `Component` in Angular 2, that uses a template.
+
+So the template will look like that:
+
+    { { myVar } }
+
+And the Components will look like that:
+
+    import {Component} from '@angular/core';
+
+    @Component({
+        selector: 'example',
+        templateUrl: './example.html'
+    })
+    class Example() {
+        myVar : string;
+
+        constructor() {
+            this.myVar = "Hello World!";
+        }
+    }
+
+Let's start with the similarities between these codes:
+
+##### Language
+
+If you use Meteor 1.3, you probably uses the ES2016 modules loader with the `import` keyword - Angular 2 usually goes with TypeScript, which have the same modules loader.
+
+If you are using Meteor 1.2, you are probably uses variables that defined in the global scope and do not need the imports with Blaze, but note that you must use it when developing with Angular 2.
+
+Blaze code mostly written with ES2016, and Angular 2 uses TypeScript that just provides extra features on top of ES2016.
+
+##### View
+
+The concepts of the view binding is very similar and starts with the very basic double curly braces to load a content variable into the view.
+
+Later, we will go through more types of bindings and connection between the view and the content, and we will understand how to migrate every view binding that we use in our Blaze code.
+
+
+
+*And now to the differences between the examples:*
+
+##### Creation flow
+
+We can see the difference in the creation flow of the component: in Blaze we create a template, and then attach properties to this template.
+
+In Angular 2, each component is created as an instance of the class, and the Component loads the template and provides the properties to the view.
+
+##### Defining view variables
+
+In Blaze in order to connect between context variable and it's view, you need to create Helper for the template, and define a function that returns the view value.
+
+Angular 2 uses the context of the Component class, and the definition of these view helpers is inside a regular variable.
+
+> Every variable you will define in `this` context in Angular 2, will be available to use in your view template.
diff --git a/manuals/views/step2.md b/manuals/views/step2.md
new file mode 100644
index 0000000..90a3ac9
--- /dev/null
+++ b/manuals/views/step2.md
@@ -0,0 +1,118 @@
+[{]: <region> (header)
+# Step 2: Understanding Angular 2
+[}]: #
+[{]: <region> (body)
+
+Now let's understand Angular 2 and how it's fundamentals are related to Blaze fundamentals.
+
+## Angular 2 Architecture
+
+We assume that you already familiar to the Blaze architecture and flow of data (as described [here](http://guide.meteor.com/blaze.html#understanding-blaze)).
+
+Angular 2 architecture documentation is available [here](https://angular.io/docs/ts/latest/guide/architecture.html) and we recommend to go through it.
+
+#### TL;DR
+
+1. With Angular 2 we can create modules and libraries for better modularization of the code - while Blaze only provides a Template with code behind.
+
+2. Angular 2 provides Components as class - Blaze calls it Spacebars and Helpers.
+
+3. Angular 2 uses TypeScript and it's Decorators to describe and extend it's metadata for variables, methods and classes - Blaze uses JavaScript ES2016 without metadata feature.
+
+4. Both provides the ability to create view binding and control it's flow and change detection.
+
+5. In Blaze, templates can use another templates - Angular 2 provides Components and Directives that can load another view components.
+
+6. Angular 2 provides a great Dependency Injection.
+
+7. In Angular 2 you can create Pipes which are view transformation utilities - in Blaze it's just another helper for the view.
+
+8. Angular 2 Services provides a great way share data and state between components and directives.
+
+## Spacebars vs Angular 2 Template
+
+Blaze uses Spacebars to describe it's UI and elements, usually as HTML content inside `<template>` tag, and with JavaScript code that extends the template with context and Helpers.
+
+Angular 2 has a similar idea - the templates are inside HTML files, and TypeScript code creates a `class` that uses this template, and provides context (`this`) and properties which the view data.
+
+Let's start with an example from Blaze's for a simple template:
+
+    <template name="Example">
+        { { myVar } }
+    </template>
+
+And the JavaScript code for this template:
+
+    import { Template } from 'meteor/templating';
+
+    Template.Example.helpers({
+      myVar() {
+        return "Hello World!";
+      }
+    });
+
+We can see that we have a template file named "Example" that uses a helper named `myVar`.
+
+This same code, will be a `Component` in Angular 2, that uses a template.
+
+So the template will look like that:
+
+    { { myVar } }
+
+And the Components will look like that:
+
+    import {Component} from '@angular/core';
+
+    @Component({
+        selector: 'example',
+        templateUrl: './example.html'
+    })
+    class Example() {
+        myVar : string;
+
+        constructor() {
+            this.myVar = "Hello World!";
+        }
+    }
+
+Let's start with the similarities between these codes:
+
+##### Language
+
+If you use Meteor 1.3, you probably uses the ES2016 modules loader with the `import` keyword - Angular 2 usually goes with TypeScript, which have the same modules loader.
+
+If you are using Meteor 1.2, you are probably uses variables that defined in the global scope and do not need the imports with Blaze, but note that you must use it when developing with Angular 2.
+
+Blaze code mostly written with ES2016, and Angular 2 uses TypeScript that just provides extra features on top of ES2016.
+
+##### View
+
+The concepts of the view binding is very similar and starts with the very basic double curly braces to load a content variable into the view.
+
+Later, we will go through more types of bindings and connection between the view and the content, and we will understand how to migrate every view binding that we use in our Blaze code.
+
+
+
+*And now to the differences between the examples:*
+
+##### Creation flow
+
+We can see the difference in the creation flow of the component: in Blaze we create a template, and then attach properties to this template.
+
+In Angular 2, each component is created as an instance of the class, and the Component loads the template and provides the properties to the view.
+
+##### Defining view variables
+
+In Blaze in order to connect between context variable and it's view, you need to create Helper for the template, and define a function that returns the view value.
+
+Angular 2 uses the context of the Component class, and the definition of these view helpers is inside a regular variable.
+
+> Every variable you will define in `this` context in Angular 2, will be available to use in your view template.
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step1.md) | [Next Step >](step3.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From ef3546d01d9dccd2232556ab9bd08360f6a3a6f7 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Tue, 22 Nov 2016 12:54:52 +0200
Subject: [PATCH 03/89] Step 3: First Steps

---
 manuals/templates/step3.md | 55 +++++++++++++++++++++++++++++++++++++
 manuals/views/step3.md     | 67 ++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 122 insertions(+)
 create mode 100644 manuals/templates/step3.md
 create mode 100644 manuals/views/step3.md

diff --git a/manuals/templates/step3.md b/manuals/templates/step3.md
new file mode 100644
index 0000000..d633fa4
--- /dev/null
+++ b/manuals/templates/step3.md
@@ -0,0 +1,55 @@
+So in this migration tutorial, we will migrate the Meteor's To-do example application - it is written in Meteor 1.3, with ES2016 code and Blaze.
+
+Our goal here is to migrate this running app to Meteor 1.3 with TypeScript and Angular 2 - we will do it by adding Angular 2 to the existing Blaze application - run them both and replace a single part each time - until we will have full Angular 2 application.
+
+We will try to cover as much as possible features in Blaze and Angular 2 that relevant for most of Blaze applications - and we might skip some special cases - but we hope that we will give you the basics that you need to migrate your application.
+
+The code of the basic To-do application located [in this repository](https://github.com/meteor/todos), and if you want to keep with the step-by-step tutorial, we recommend to clone this repo, and keep with the steps in the tutorial.
+
+## Prepare for migration
+
+We recommend to map the parts of your code, and try to organize them before you start with the migration.
+
+Try to find the important and the core that you need migrate first, and which parts of your application can be done in the end.
+
+So let's try to go through the To-do app and understand it's basics:
+
+#### Start point
+
+We have a `client` directory with a main file, that loads the real main from the `imports/startup/client`.
+
+The main file uses another file called `routes.js` that defines a route for `/` which is the main page of the application.
+
+So when the router find the `/` URL, it loads the `App_body` Template to the view - which means that this is the start point of the application.
+
+#### Routes
+
+The `routers.js` file creates a main route (`/`) which is a page with list of todo lists.
+
+Also, there is another route for the current selected to-do list.
+
+So we know that we have 2 types of routes in the app: one for the main page, and route for each list.
+
+#### Components
+
+Next, let's try to understand the components that we have in the app.
+
+We have the main HTML file with the list-of-lists in `imports/ui/layouts` which defined a template named `App_body`- it has some event handlers and helpers.
+
+In `imports/ui/components/lists-show.js` we notice that we have `Lists_show` Template that in charge of displaying the selected todo-list and we do some stuff on it's creation and define some events.
+
+In `imports/ui/components/todos-item.js` we have the Template that in charge of displaying a single todo item in a list (`Todos_item`).
+
+So we can understand that we have 3 components (Main page, To-do list, To-do item) which are the most of the app.
+
+We can find some more - but at the moment it is enough and we will take care of the rest later.
+
+#### Users
+
+You might also notice that this app allow the users to sign-up and login, so we know that we need components that handles this actions.
+
+## Summary
+
+So we are ready now for migrating our Blaze app to Angular 2, we managed to find and detect the main components, the routes we have, the user interaction (signup, login) and the start point of the application - so we can start and modifying these files to create our app.
+
+We also understand that the main page components loads the todo-list component, and it loads the todo-item component - so we can understand the hierarchy and the relations of the components.
diff --git a/manuals/views/step3.md b/manuals/views/step3.md
new file mode 100644
index 0000000..991ddf4
--- /dev/null
+++ b/manuals/views/step3.md
@@ -0,0 +1,67 @@
+[{]: <region> (header)
+# Step 3: First Steps
+[}]: #
+[{]: <region> (body)
+So in this migration tutorial, we will migrate the Meteor's To-do example application - it is written in Meteor 1.3, with ES2016 code and Blaze.
+
+Our goal here is to migrate this running app to Meteor 1.3 with TypeScript and Angular 2 - we will do it by adding Angular 2 to the existing Blaze application - run them both and replace a single part each time - until we will have full Angular 2 application.
+
+We will try to cover as much as possible features in Blaze and Angular 2 that relevant for most of Blaze applications - and we might skip some special cases - but we hope that we will give you the basics that you need to migrate your application.
+
+The code of the basic To-do application located [in this repository](https://github.com/meteor/todos), and if you want to keep with the step-by-step tutorial, we recommend to clone this repo, and keep with the steps in the tutorial.
+
+## Prepare for migration
+
+We recommend to map the parts of your code, and try to organize them before you start with the migration.
+
+Try to find the important and the core that you need migrate first, and which parts of your application can be done in the end.
+
+So let's try to go through the To-do app and understand it's basics:
+
+#### Start point
+
+We have a `client` directory with a main file, that loads the real main from the `imports/startup/client`.
+
+The main file uses another file called `routes.js` that defines a route for `/` which is the main page of the application.
+
+So when the router find the `/` URL, it loads the `App_body` Template to the view - which means that this is the start point of the application.
+
+#### Routes
+
+The `routers.js` file creates a main route (`/`) which is a page with list of todo lists.
+
+Also, there is another route for the current selected to-do list.
+
+So we know that we have 2 types of routes in the app: one for the main page, and route for each list.
+
+#### Components
+
+Next, let's try to understand the components that we have in the app.
+
+We have the main HTML file with the list-of-lists in `imports/ui/layouts` which defined a template named `App_body`- it has some event handlers and helpers.
+
+In `imports/ui/components/lists-show.js` we notice that we have `Lists_show` Template that in charge of displaying the selected todo-list and we do some stuff on it's creation and define some events.
+
+In `imports/ui/components/todos-item.js` we have the Template that in charge of displaying a single todo item in a list (`Todos_item`).
+
+So we can understand that we have 3 components (Main page, To-do list, To-do item) which are the most of the app.
+
+We can find some more - but at the moment it is enough and we will take care of the rest later.
+
+#### Users
+
+You might also notice that this app allow the users to sign-up and login, so we know that we need components that handles this actions.
+
+## Summary
+
+So we are ready now for migrating our Blaze app to Angular 2, we managed to find and detect the main components, the routes we have, the user interaction (signup, login) and the start point of the application - so we can start and modifying these files to create our app.
+
+We also understand that the main page components loads the todo-list component, and it loads the todo-item component - so we can understand the hierarchy and the relations of the components.
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step2.md) | [Next Step >](step4.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 7aecc2c61956e0ea0ed77440432a623de0175a5d Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 18:17:07 +0300
Subject: [PATCH 04/89] Step 4.1: Add Angular 2 compilers

---
 .meteor/packages |  1 +
 .meteor/versions | 24 +++++++++++++++---------
 2 files changed, 16 insertions(+), 9 deletions(-)
 mode change 100755 => 100644 .meteor/packages

diff --git a/.meteor/packages b/.meteor/packages
old mode 100755
new mode 100644
index 84de7d0..d46ec8e
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -69,3 +69,4 @@ dispatch:mocha-phantomjs
 practicalmeteor:mocha@2.1.1-rc.1
 hwillson:stub-collections
 johanbrook:publication-collector
+angular2-with-blaze-compilers
diff --git a/.meteor/versions b/.meteor/versions
index 0052dec..356a888 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -7,11 +7,17 @@ aldeed:schema-index@1.1.0
 aldeed:simple-schema@1.5.3
 aldeed:template-extension@4.0.0
 allow-deny@1.0.5
+angular2-css@0.1.0
+angular2-html-templates@0.5.4
+angular2-with-blaze-compilers@0.5.8
 app-prod-security@0.0.0
 arillo:flow-router-helpers@0.5.2
-autoupdate@1.3.12
+autoupdate@1.2.11
 babel-compiler@6.13.0
 babel-runtime@0.1.12
+barbatus:typescript@0.3.4_1
+barbatus:typescript-compiler@0.6.11
+barbatus:typescript-runtime@0.1.2
 base64@1.0.10
 binary-heap@1.0.10
 blaze@2.1.9
@@ -28,14 +34,14 @@ callback-hook@1.0.10
 cfs:http-methods@0.0.32
 check@1.2.4
 chriswessels:hammer@4.0.2
-coffeescript@1.11.1_2
+coffeescript@1.0.17
 crosswalk@1.7.0
 dburles:collection-helpers@1.1.0
 ddp@1.2.5
-ddp-client@1.3.2
+ddp-client@1.2.9
 ddp-common@1.2.7
 ddp-rate-limiter@1.0.6
-ddp-server@1.3.11
+ddp-server@1.2.10
 deps@1.0.12
 diff-sequence@1.0.7
 dispatch:mocha-phantomjs@0.1.7
@@ -52,7 +58,7 @@ geojson-utils@1.0.10
 hot-code-push@1.0.4
 html-tools@1.0.11
 htmljs@1.0.11
-http@1.2.10
+http@1.1.8
 hwillson:stub-collections@1.0.2
 id-map@1.0.9
 johanbrook:publication-collector@1.0.3
@@ -60,7 +66,7 @@ jquery@1.11.10
 juliancwirko:postcss@1.1.1
 kadira:blaze-layout@2.3.0
 kadira:flow-router@2.12.1
-launch-screen@1.1.0
+launch-screen@1.0.12
 less@2.7.6
 livedata@1.0.18
 localstorage@1.0.12
@@ -70,7 +76,7 @@ mdg:validation-error@0.5.1
 meteor@1.6.0
 meteor-base@1.0.4
 meteorspark:util@0.2.0
-minifier-css@1.2.15
+minifier-css@1.1.13
 minifier-js@1.2.15
 minimongo@1.0.18
 mobile-experience@1.0.4
@@ -84,7 +90,7 @@ npm-mongo@2.2.11_2
 observe-sequence@1.0.14
 ordered-dict@1.0.9
 percolate:momentum@0.7.2
-percolate:velocityjs@1.2.1_1
+percolate:velocityjs@1.1.0
 practicalmeteor:chai@2.1.0_1
 practicalmeteor:loglevel@1.2.0_2
 practicalmeteor:mocha@2.4.5_6
@@ -101,7 +107,7 @@ retry@1.0.9
 reywood:publish-composite@1.4.2
 routepolicy@1.0.12
 service-configuration@1.0.11
-session@1.1.7
+session@1.0.5
 sha@1.0.9
 simple:authenticate-user-by-token@1.0.1
 simple:json-routes@2.1.0
-- 
2.10.2


From 3695536db3ea9d96082be918219545a4709edd06 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 18:19:26 +0300
Subject: [PATCH 05/89] Step 4.2: Add angular2 , angular2-meteor and polyfills

---
 package.json | 17 +++++++++++++++--
 1 file changed, 15 insertions(+), 2 deletions(-)
 mode change 100755 => 100644 package.json

diff --git a/package.json b/package.json
old mode 100755
new mode 100644
index 49fa9dd..4c2281c
--- a/package.json
+++ b/package.json
@@ -9,8 +9,21 @@
     "chimp-watch": "chimp --ddp=http://localhost:3000 --watch --mocha --path=tests"
   },
   "dependencies": {
-    "autoprefixer": "^6.3.1",
-    "faker": "^3.0.1"
+    "@angular/common": "2.1.1",
+    "@angular/compiler": "2.1.1",
+    "@angular/core": "2.1.1",
+    "@angular/forms": "2.1.1",
+    "@angular/platform-browser": "2.1.1",
+    "@angular/platform-browser-dynamic": "2.1.1",
+    "@angular/router": "3.1.1",
+    "angular2-meteor": "0.7.0",
+    "meteor-node-stubs": "0.2.3",
+    "meteor-rxjs": "0.4.0",
+    "reflect-metadata": "0.1.8",
+    "rxjs": "5.0.0-beta.12",
+    "zone.js": "0.6.26",
+    "autoprefixer": "6.3.1",
+    "faker": "3.0.1"
   },
   "devDependencies": {
     "eslint": "^2.3.0",
-- 
2.10.2


From 9fb3d7abfbe7ccdcaf9008368be5cc0ab0006418 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 18:29:53 +0300
Subject: [PATCH 06/89] Step 4.3: Removed less dependency

---
 .meteor/packages | 1 -
 .meteor/versions | 1 -
 2 files changed, 2 deletions(-)

diff --git a/.meteor/packages b/.meteor/packages
index d46ec8e..f18f99c 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -14,7 +14,6 @@ tracker
 # standard libraries
 jquery
 underscore
-less
 
 # ui
 blaze-html-templates
diff --git a/.meteor/versions b/.meteor/versions
index 356a888..a426747 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -67,7 +67,6 @@ juliancwirko:postcss@1.1.1
 kadira:blaze-layout@2.3.0
 kadira:flow-router@2.12.1
 launch-screen@1.0.12
-less@2.7.6
 livedata@1.0.18
 localstorage@1.0.12
 logging@1.1.16
-- 
2.10.2


From d60b6bc463c4eb354883cdcff31c92545002ca94 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 18:31:00 +0300
Subject: [PATCH 07/89] Step 4.4: Added angular2-blaze-template package

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index 4c2281c..d0fbf8b 100644
--- a/package.json
+++ b/package.json
@@ -17,6 +17,7 @@
     "@angular/platform-browser-dynamic": "2.1.1",
     "@angular/router": "3.1.1",
     "angular2-meteor": "0.7.0",
+    "angular2-blaze-template": "1.0.0",
     "meteor-node-stubs": "0.2.3",
     "meteor-rxjs": "0.4.0",
     "reflect-metadata": "0.1.8",
-- 
2.10.2


From 4034b4ce7441cf624dcff753ae782610cac2248a Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@Dotans-MacBook-Pro.local>
Date: Tue, 22 Nov 2016 13:32:41 +0200
Subject: [PATCH 08/89] Step 4: Coexistence

---
 manuals/templates/step4.md | 79 ++++++++++++++++++++++++++++++++++++++++
 manuals/views/step4.md     | 91 ++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 170 insertions(+)
 create mode 100644 manuals/templates/step4.md
 create mode 100644 manuals/views/step4.md

diff --git a/manuals/templates/step4.md b/manuals/templates/step4.md
new file mode 100644
index 0000000..0d37812
--- /dev/null
+++ b/manuals/templates/step4.md
@@ -0,0 +1,79 @@
+This chapter will teach you how to add Angular 2 to your Blaze application and how to use both platforms at the same time.
+
+We need coexistence of this two platform because we want to update our components step-by-step.
+
+## What it takes?
+
+To achieve coexistence, we need to understand few things:
+
+1. Both Angular 2 and Blaze have a HTML files compiler - which means that we need to find a way to make a difference between the two HTML file types.
+
+2. Angular 2 application usually written in TypeScript, while Blaze application written in ES2016 - so need need to make sure we can run both at the same time.
+
+## How to start?
+
+First, let's solve the HTML issue.
+
+Your Blaze project already uses `blaze-html-templates` package, and it compiles files with `.html` extensions which means that we can't use that extension for Angular 2 HTML files.
+
+Angular 2 has it's own HTML compiler package for Meteor, which is a part of Angular2-Meteor stack - it called `angular2-compilers`, but we can't use it because it also handles `.html` files - and Meteor allow only one compiler for each extensions.
+
+Our solution is this case is to use `angular2-with-blaze-compilers` package, which is similar to the original package - only uses the `.ng2.html` extension instead.
+
+> The compilers package contains compilers for LESS, TypeScript, HTML and templates files.
+
+So let's add the package to our project:
+
+       meteor add angular2-with-blaze-compilers
+
+> Make sure that use Meteor >= 1.3.1 in your project.
+
+If you already have in your project any other package that handles TypeScript or LESS files, please remove those packages by using `meteor remove` command.
+
+#### How to know if it works?
+
+Create a file named `client/angular-test.ng2.html` and put any content you want inside of it - now go to your browser and try to open the following URL:
+
+http://localhost:3000/client/angular-test.html
+
+> Note that we access the file without the `.ng2` in the browser! the `.ng2` is only there for the compiler to understand that this file is Angular 2 HTML template.
+
+#### Adding Angular 2 and Angular2-Meteor
+
+So now our application is capable to use both Angular 2 and Blaze at the same time - we are only missing the actual Angular 2 package.
+
+We will add Angular2-Meteor and Angular 2 core from NPM:
+
+    meteor npm install --save angular2-meteor babel-runtime @angular/core @angular/compiler @angular/common @angular/router @angular/platform-browser @angular/platform-browser-dynamic @angular/forms meteor-rxjs reflect-metadata rxjs zone.js
+
+> This will install Angular2-Meteor, Angular 2 core, Angular 2 router and polyfills that required to run Angular2-Meteor.
+
+In this example, the To-do app already have a dependency for LESS, so we need to remove it because the `angular2-with-blaze-compilers` already compilers them to match Angular 2 stylesheets.
+
+So let's remove it:
+
+    meteor remove less
+
+> That's it! now our app can run both Angular 2 and Blaze and we can start coding!
+
+## How to start?
+
+So now we need to create Angular 2 application in order to begin with the migration.
+
+The first thing that we need to do is to create main file that creates the application, but still have the ability to run the original Blaze application.
+
+This is little bit tricky and our goal here is to wrap the Blaze application with an Angular 2 application.
+
+The next step of this tutorial will cover step-by-step migration tutorial, and you can find there the instructions for creating Angular 2 app.
+
+## Blaze Template inside Angular 2 Components
+
+Angular2-Meteor team also provides a solution for step-by-step migration, so you can create Angular 2 application around your current Blaze application, and load your already exists and implemented code into Angular 2.
+
+In order to use this feature, let's add `angular2-blaze-template` package to the project:
+
+    meteor npm install --save angular2-blaze-template
+
+The usage is simple, you just need to provide the name of the Template and optional context object.
+
+You will see in the next chapters that we will use this in the first steps of the migration.
diff --git a/manuals/views/step4.md b/manuals/views/step4.md
new file mode 100644
index 0000000..1cc5ab7
--- /dev/null
+++ b/manuals/views/step4.md
@@ -0,0 +1,91 @@
+[{]: <region> (header)
+# Step 4: Coexistence
+[}]: #
+[{]: <region> (body)
+This chapter will teach you how to add Angular 2 to your Blaze application and how to use both platforms at the same time.
+
+We need coexistence of this two platform because we want to update our components step-by-step.
+
+## What it takes?
+
+To achieve coexistence, we need to understand few things:
+
+1. Both Angular 2 and Blaze have a HTML files compiler - which means that we need to find a way to make a difference between the two HTML file types.
+
+2. Angular 2 application usually written in TypeScript, while Blaze application written in ES2016 - so need need to make sure we can run both at the same time.
+
+## How to start?
+
+First, let's solve the HTML issue.
+
+Your Blaze project already uses `blaze-html-templates` package, and it compiles files with `.html` extensions which means that we can't use that extension for Angular 2 HTML files.
+
+Angular 2 has it's own HTML compiler package for Meteor, which is a part of Angular2-Meteor stack - it called `angular2-compilers`, but we can't use it because it also handles `.html` files - and Meteor allow only one compiler for each extensions.
+
+Our solution is this case is to use `angular2-with-blaze-compilers` package, which is similar to the original package - only uses the `.ng2.html` extension instead.
+
+> The compilers package contains compilers for LESS, TypeScript, HTML and templates files.
+
+So let's add the package to our project:
+
+       meteor add angular2-with-blaze-compilers
+
+> Make sure that use Meteor >= 1.3.1 in your project.
+
+If you already have in your project any other package that handles TypeScript or LESS files, please remove those packages by using `meteor remove` command.
+
+#### How to know if it works?
+
+Create a file named `client/angular-test.ng2.html` and put any content you want inside of it - now go to your browser and try to open the following URL:
+
+http://localhost:3000/client/angular-test.html
+
+> Note that we access the file without the `.ng2` in the browser! the `.ng2` is only there for the compiler to understand that this file is Angular 2 HTML template.
+
+#### Adding Angular 2 and Angular2-Meteor
+
+So now our application is capable to use both Angular 2 and Blaze at the same time - we are only missing the actual Angular 2 package.
+
+We will add Angular2-Meteor and Angular 2 core from NPM:
+
+    meteor npm install --save angular2-meteor babel-runtime @angular/core @angular/compiler @angular/common @angular/router @angular/platform-browser @angular/platform-browser-dynamic @angular/forms meteor-rxjs reflect-metadata rxjs zone.js
+
+> This will install Angular2-Meteor, Angular 2 core, Angular 2 router and polyfills that required to run Angular2-Meteor.
+
+In this example, the To-do app already have a dependency for LESS, so we need to remove it because the `angular2-with-blaze-compilers` already compilers them to match Angular 2 stylesheets.
+
+So let's remove it:
+
+    meteor remove less
+
+> That's it! now our app can run both Angular 2 and Blaze and we can start coding!
+
+## How to start?
+
+So now we need to create Angular 2 application in order to begin with the migration.
+
+The first thing that we need to do is to create main file that creates the application, but still have the ability to run the original Blaze application.
+
+This is little bit tricky and our goal here is to wrap the Blaze application with an Angular 2 application.
+
+The next step of this tutorial will cover step-by-step migration tutorial, and you can find there the instructions for creating Angular 2 app.
+
+## Blaze Template inside Angular 2 Components
+
+Angular2-Meteor team also provides a solution for step-by-step migration, so you can create Angular 2 application around your current Blaze application, and load your already exists and implemented code into Angular 2.
+
+In order to use this feature, let's add `angular2-blaze-template` package to the project:
+
+    meteor npm install --save angular2-blaze-template
+
+The usage is simple, you just need to provide the name of the Template and optional context object.
+
+You will see in the next chapters that we will use this in the first steps of the migration.
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step3.md) | [Next Step >](step5.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 46f625879b09b7068b07c248cb6f514c3b189bb1 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 18:33:14 +0300
Subject: [PATCH 09/89] Step 5.1: Change the extension of the main file

---
 client/{main.js => main.component.ts} | 0
 1 file changed, 0 insertions(+), 0 deletions(-)
 rename client/{main.js => main.component.ts} (100%)

diff --git a/client/main.js b/client/main.component.ts
similarity index 100%
rename from client/main.js
rename to client/main.component.ts
-- 
2.10.2


From 571fc8bd84da7da73fd4440a5e4244779f45c954 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@Dotans-MacBook-Pro.local>
Date: Tue, 22 Nov 2016 13:35:44 +0200
Subject: [PATCH 10/89] Step 5: TypeScript

---
 manuals/templates/step5.md | 17 +++++++++++++++++
 manuals/views/step5.md     | 34 ++++++++++++++++++++++++++++++++++
 2 files changed, 51 insertions(+)
 create mode 100644 manuals/templates/step5.md
 create mode 100644 manuals/views/step5.md

diff --git a/manuals/templates/step5.md b/manuals/templates/step5.md
new file mode 100644
index 0000000..2fdaad5
--- /dev/null
+++ b/manuals/templates/step5.md
@@ -0,0 +1,17 @@
+So let's start with the actual code migration.
+
+What do we have so far?
+
+- Blaze application
+- Angular 2 HTML compilers + TypeScript support
+- Ability to load Blaze Template inside Angular 2 Component
+
+So let's start!
+
+TypeScript is the recommended language for writing Angular 2 application.
+
+The TypeScript compiler works for `.ts` files - so let's start by changing the main file (`client/main.js`) into TypeScript file.
+
+{{{diff_step 5.1}}}
+
+> Don't worry! TypeScript is just an extension for ES2016 - so all of your current code should work just fine!
diff --git a/manuals/views/step5.md b/manuals/views/step5.md
new file mode 100644
index 0000000..aacb34b
--- /dev/null
+++ b/manuals/views/step5.md
@@ -0,0 +1,34 @@
+[{]: <region> (header)
+# Step 5: TypeScript
+[}]: #
+[{]: <region> (body)
+So let's start with the actual code migration.
+
+What do we have so far?
+
+- Blaze application
+- Angular 2 HTML compilers + TypeScript support
+- Ability to load Blaze Template inside Angular 2 Component
+
+So let's start!
+
+TypeScript is the recommended language for writing Angular 2 application.
+
+The TypeScript compiler works for `.ts` files - so let's start by changing the main file (`client/main.js`) into TypeScript file.
+
+[{]: <helper> (diff_step 5.1)
+#### Step 5.1: Change the extension of the main file
+
+##### Changed client/main.js
+
+[}]: #
+
+> Don't worry! TypeScript is just an extension for ES2016 - so all of your current code should work just fine!
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step4.md) | [Next Step >](step6.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 6318418831e29813563d7a368b612b67c51e3feb Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 18:41:23 +0300
Subject: [PATCH 11/89] Step 6.1: Create the MainComponent

---
 client/main.component.ts | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/client/main.component.ts b/client/main.component.ts
index 090ed9e..5bb55b2 100755
--- a/client/main.component.ts
+++ b/client/main.component.ts
@@ -1 +1,9 @@
 import '/imports/startup/client';
+import {Component} from "@angular/core";
+
+@Component({
+  selector: 'app',
+  template: ''
+})
+export class MainComponent {
+}
\ No newline at end of file
-- 
2.10.2


From c0b642905b6ec5fc70445563405a7a34d204a796 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 18:42:10 +0300
Subject: [PATCH 12/89] Step 6.2: Changed the name of the main HTML file

---
 client/{head.html => index.ng2.html} | 0
 1 file changed, 0 insertions(+), 0 deletions(-)
 rename client/{head.html => index.ng2.html} (100%)

diff --git a/client/head.html b/client/index.ng2.html
similarity index 100%
rename from client/head.html
rename to client/index.ng2.html
-- 
2.10.2


From 670ccce2055f330ce2994f8f4de2fe51dd9e345b Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 18:42:32 +0300
Subject: [PATCH 13/89] Step 6.3: Added app tag to the main HTML file

---
 client/index.ng2.html | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/client/index.ng2.html b/client/index.ng2.html
index 6bf9f6f..9670ce7 100755
--- a/client/index.ng2.html
+++ b/client/index.ng2.html
@@ -5,4 +5,7 @@
   <meta name="viewport" content="user-scalable=no, initial-scale=1, minimal-ui, maximum-scale=1, minimum-scale=1" />
   <link rel="shortcut icon" type="image/png" href="favicon.png?v1" sizes="16x16 32x32 64x64">
   <link rel="apple-touch-icon" sizes="120x120" href="apple-touch-icon-precomposed.png">
-</head>
\ No newline at end of file
+</head>
+<body>
+    <app></app>
+</body>
\ No newline at end of file
-- 
2.10.2


From b40360f31b74b5c07b6efd81231b141d710626ba Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 11:26:45 +0300
Subject: [PATCH 14/89] Step 6.4: Create the app NgModule

---
 client/app.module.ts | 24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)
 create mode 100644 client/app.module.ts

diff --git a/client/app.module.ts b/client/app.module.ts
new file mode 100644
index 0000000..b6dd392
--- /dev/null
+++ b/client/app.module.ts
@@ -0,0 +1,24 @@
+import {NgModule} from '@angular/core';
+import {BrowserModule} from '@angular/platform-browser';
+import {MainComponent} from "./main.component";
+
+@NgModule({
+    // Components, Pipes, Directive
+    declarations: [
+        MainComponent
+    ],
+    // Entry Components
+    entryComponents: [
+        MainComponent
+    ],
+    // Providers
+    providers: [],
+    // Modules
+    imports: [
+        BrowserModule
+    ],
+    // Main Component
+    bootstrap: [MainComponent]
+})
+export class AppModule {
+}
\ No newline at end of file
-- 
2.10.2


From 37f3ee7ec782f6351f99fb8304b6b50b02c7fdc4 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 11:31:39 +0300
Subject: [PATCH 15/89] Step 6.5: Moved the main component and app module to
 imports folder

---
 client/{ => imports}/app.module.ts     | 0
 client/{ => imports}/main.component.ts | 0
 2 files changed, 0 insertions(+), 0 deletions(-)
 rename client/{ => imports}/app.module.ts (100%)
 rename client/{ => imports}/main.component.ts (100%)

diff --git a/client/app.module.ts b/client/imports/app.module.ts
similarity index 100%
rename from client/app.module.ts
rename to client/imports/app.module.ts
diff --git a/client/main.component.ts b/client/imports/main.component.ts
similarity index 100%
rename from client/main.component.ts
rename to client/imports/main.component.ts
-- 
2.10.2


From 658b55e2013000ef029d5a15326fb0d577bc970f Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 11:32:18 +0300
Subject: [PATCH 16/89] Step 6.6: Created the main bootstrap file for the
 AppModule

---
 client/main.ts | 9 +++++++++
 1 file changed, 9 insertions(+)
 create mode 100644 client/main.ts

diff --git a/client/main.ts b/client/main.ts
new file mode 100644
index 0000000..1b9274e
--- /dev/null
+++ b/client/main.ts
@@ -0,0 +1,9 @@
+import 'reflect-metadata';
+import 'zone.js/dist/zone.js';
+import {platformBrowserDynamic} from '@angular/platform-browser-dynamic';
+import {enableProdMode} from '@angular/core';
+import {AppModule} from "./imports/app.module";
+
+enableProdMode();
+
+platformBrowserDynamic().bootstrapModule(AppModule);
\ No newline at end of file
-- 
2.10.2


From 95731d882d4196d8767bbbb556b0c4cbaa2657be Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@Dotans-MacBook-Pro.local>
Date: Tue, 22 Nov 2016 13:43:53 +0200
Subject: [PATCH 17/89] Step 6: Creating Angular 2 Application

---
 manuals/templates/step6.md |  47 +++++++++++++++
 manuals/views/step6.md     | 142 +++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 189 insertions(+)
 create mode 100644 manuals/templates/step6.md
 create mode 100644 manuals/views/step6.md

diff --git a/manuals/templates/step6.md b/manuals/templates/step6.md
new file mode 100644
index 0000000..07c0e43
--- /dev/null
+++ b/manuals/templates/step6.md
@@ -0,0 +1,47 @@
+First, let's create Angular 2 basic component in the `client/main.component.ts` file:
+
+{{{diff_step 6.1}}}
+
+We we later include this main component inside our main module - but we will start with the Component.
+
+Let's understand what do we have here - `MainComponent` created as component, with the `app` tag selector.
+
+Now we need to use the `<app>` tag in order to load the application.
+
+In order to do so, we first need to change the main HTML file name, and add `.ng2` to the extension, so it will compile as Angular 2 template:
+
+{{{diff_step 6.2}}}
+
+> We also changed the name from "head" to "index" - it's optional.
+
+Now we need to we the `<app>` tag, so let's add `<body>` to the main HTML file and add the tag inside:
+
+{{{diff_step 6.3}}}
+
+Great. now we need to create NgModule which is an Angular 6.module - a wrapper that bundles together Component, Directives, Pipes and Providers. This is the object we will init and create an instance of - and this will be our main entry point.
+
+So let's create it:
+
+{{{diff_step 6.4}}}
+
+We declared some properties in our NgModule:
+
+- declarations - these are our Component, Directives and Pipes, we declare them here and we wont need to import them later.
+- entryComponents - declared the main entry components.
+- providers - these are the Providers, Services of the app.
+- imports - external NgModules we want to include.
+- bootstrap - the main Component to bootstrap.
+
+You can read more about NgModule and it's properties in [Angular 2 NgModule docs](https://angular.io/docs/ts/latest/guide/ngmodule.html).
+
+Our next step is a bit of maintenance - we will move any import we use into `client/imports` because of Meteor's behavior.
+
+Any future components we will create will go into this folder - and our NgModule file too.
+
+Now we need to create a single entry point for the client side, which is the only TypeScripts file that won't go inside the `imports` directory - `client/main.ts`.
+
+The main.ts file will also initialize our NgModule:
+
+{{{diff_step 6.6}}}
+
+That's it - we have a work NgModule with a Component!
diff --git a/manuals/views/step6.md b/manuals/views/step6.md
new file mode 100644
index 0000000..e7fd21c
--- /dev/null
+++ b/manuals/views/step6.md
@@ -0,0 +1,142 @@
+[{]: <region> (header)
+# Step 6: Creating Angular 2 Application
+[}]: #
+[{]: <region> (body)
+First, let's create Angular 2 basic component in the `client/main.component.ts` file:
+
+[{]: <helper> (diff_step 6.1)
+#### Step 6.1: Create the MainComponent
+
+##### Changed client/main.component.ts
+```diff
+@@ -1 +1,9 @@
+ ┊1┊1┊import '/imports/startup/client';
++┊ ┊2┊import {Component} from "@angular/core";
++┊ ┊3┊
++┊ ┊4┊@Component({
++┊ ┊5┊  selector: 'app',
++┊ ┊6┊  template: ''
++┊ ┊7┊})
++┊ ┊8┊export class MainComponent {
++┊ ┊9┊}🚫↵
+```
+[}]: #
+
+We we later include this main component inside our main module - but we will start with the Component.
+
+Let's understand what do we have here - `MainComponent` created as component, with the `app` tag selector.
+
+Now we need to use the `<app>` tag in order to load the application.
+
+In order to do so, we first need to change the main HTML file name, and add `.ng2` to the extension, so it will compile as Angular 2 template:
+
+[{]: <helper> (diff_step 6.2)
+#### Step 6.2: Changed the name of the main HTML file
+
+##### Changed client/head.html
+
+[}]: #
+
+> We also changed the name from "head" to "index" - it's optional.
+
+Now we need to we the `<app>` tag, so let's add `<body>` to the main HTML file and add the tag inside:
+
+[{]: <helper> (diff_step 6.3)
+#### Step 6.3: Added app tag to the main HTML file
+
+##### Changed client/index.ng2.html
+```diff
+@@ -5,4 +5,7 @@
+ ┊ 5┊ 5┊  <meta name="viewport" content="user-scalable=no, initial-scale=1, minimal-ui, maximum-scale=1, minimum-scale=1" />
+ ┊ 6┊ 6┊  <link rel="shortcut icon" type="image/png" href="favicon.png?v1" sizes="16x16 32x32 64x64">
+ ┊ 7┊ 7┊  <link rel="apple-touch-icon" sizes="120x120" href="apple-touch-icon-precomposed.png">
+-┊ 8┊  ┊</head>🚫↵
++┊  ┊ 8┊</head>
++┊  ┊ 9┊<body>
++┊  ┊10┊    <app></app>
++┊  ┊11┊</body>🚫↵
+```
+[}]: #
+
+Great. now we need to create NgModule which is an Angular 6.module - a wrapper that bundles together Component, Directives, Pipes and Providers. This is the object we will init and create an instance of - and this will be our main entry point.
+
+So let's create it:
+
+[{]: <helper> (diff_step 6.4)
+#### Step 6.4: Create the app NgModule
+
+##### Added client/app.module.ts
+```diff
+@@ -0,0 +1,24 @@
++┊  ┊ 1┊import {NgModule} from '@angular/core';
++┊  ┊ 2┊import {BrowserModule} from '@angular/platform-browser';
++┊  ┊ 3┊import {MainComponent} from "./main.component";
++┊  ┊ 4┊
++┊  ┊ 5┊@NgModule({
++┊  ┊ 6┊    // Components, Pipes, Directive
++┊  ┊ 7┊    declarations: [
++┊  ┊ 8┊        MainComponent
++┊  ┊ 9┊    ],
++┊  ┊10┊    // Entry Components
++┊  ┊11┊    entryComponents: [
++┊  ┊12┊        MainComponent
++┊  ┊13┊    ],
++┊  ┊14┊    // Providers
++┊  ┊15┊    providers: [],
++┊  ┊16┊    // Modules
++┊  ┊17┊    imports: [
++┊  ┊18┊        BrowserModule
++┊  ┊19┊    ],
++┊  ┊20┊    // Main Component
++┊  ┊21┊    bootstrap: [MainComponent]
++┊  ┊22┊})
++┊  ┊23┊export class AppModule {
++┊  ┊24┊}🚫↵
+```
+[}]: #
+
+We declared some properties in our NgModule:
+
+- declarations - these are our Component, Directives and Pipes, we declare them here and we wont need to import them later.
+- entryComponents - declared the main entry components.
+- providers - these are the Providers, Services of the app.
+- imports - external NgModules we want to include.
+- bootstrap - the main Component to bootstrap.
+
+You can read more about NgModule and it's properties in [Angular 2 NgModule docs](https://angular.io/docs/ts/latest/guide/ngmodule.html).
+
+Our next step is a bit of maintenance - we will move any import we use into `client/imports` because of Meteor's behavior.
+
+Any future components we will create will go into this folder - and our NgModule file too.
+
+Now we need to create a single entry point for the client side, which is the only TypeScripts file that won't go inside the `imports` directory - `client/main.ts`.
+
+The main.ts file will also initialize our NgModule:
+
+[{]: <helper> (diff_step 6.6)
+#### Step 6.6: Created the main bootstrap file for the AppModule
+
+##### Added client/main.ts
+```diff
+@@ -0,0 +1,9 @@
++┊ ┊1┊import 'reflect-metadata';
++┊ ┊2┊import 'zone.js/dist/zone.js';
++┊ ┊3┊import {platformBrowserDynamic} from '@angular/platform-browser-dynamic';
++┊ ┊4┊import {enableProdMode} from '@angular/core';
++┊ ┊5┊import {AppModule} from "./imports/app.module";
++┊ ┊6┊
++┊ ┊7┊enableProdMode();
++┊ ┊8┊
++┊ ┊9┊platformBrowserDynamic().bootstrapModule(AppModule);🚫↵
+```
+[}]: #
+
+That's it - we have a work NgModule with a Component!
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step5.md) | [Next Step >](step7.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 610be68d3376e60dc055d8fd43e5cd3a30f5a074 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 18:49:52 +0300
Subject: [PATCH 18/89] Step 7.1: Commented all the FlowRouter definitions

---
 imports/startup/client/routes.js | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/imports/startup/client/routes.js b/imports/startup/client/routes.js
index 6c61877..5bebb6e 100755
--- a/imports/startup/client/routes.js
+++ b/imports/startup/client/routes.js
@@ -11,6 +11,7 @@ import '../../ui/pages/app-not-found.js';
 // Import to override accounts templates
 import '../../ui/accounts/accounts-templates.js';
 
+/*
 FlowRouter.route('/lists/:_id', {
   name: 'Lists.show',
   action() {
@@ -48,3 +49,4 @@ AccountsTemplates.configureRoute('resetPwd', {
   name: 'resetPwd',
   path: '/reset-password',
 });
+*/
\ No newline at end of file
-- 
2.10.2


From 94d97dfcfe3c2af0eefa6b242906880f3b28d810 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Fri, 17 Jun 2016 18:51:58 +0300
Subject: [PATCH 19/89] Step 7.2: Added routes definitions using Angular 2
 router

---
 client/imports/app.routes.ts | 8 ++++++++
 1 file changed, 8 insertions(+)
 create mode 100644 client/imports/app.routes.ts

diff --git a/client/imports/app.routes.ts b/client/imports/app.routes.ts
new file mode 100644
index 0000000..57641b8
--- /dev/null
+++ b/client/imports/app.routes.ts
@@ -0,0 +1,8 @@
+import {ModuleWithProviders} from '@angular/core';
+import {Routes, RouterModule} from '@angular/router';
+
+const appRoutes: Routes = [
+    {path: 'lists/:_id', component: ListShowComponent}
+];
+
+export const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);
-- 
2.10.2


From 485800a4a7147a5d0e5b76063a2d70bb1ba1dc1d Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 15:15:33 +0300
Subject: [PATCH 20/89] Step 7.3: Imported the routes files into the module

---
 client/imports/app.module.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app.module.ts b/client/imports/app.module.ts
index b6dd392..ea89911 100644
--- a/client/imports/app.module.ts
+++ b/client/imports/app.module.ts
@@ -1,6 +1,7 @@
 import {NgModule} from '@angular/core';
 import {BrowserModule} from '@angular/platform-browser';
 import {MainComponent} from "./main.component";
+import {routing} from "./app.routes";
 
 @NgModule({
     // Components, Pipes, Directive
@@ -15,7 +16,8 @@ import {MainComponent} from "./main.component";
     providers: [],
     // Modules
     imports: [
-        BrowserModule
+        BrowserModule,
+        routing
     ],
     // Main Component
     bootstrap: [MainComponent]
-- 
2.10.2


From b5d190cdf6c616f38dc81dbdbae56832605dee62 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 15:16:05 +0300
Subject: [PATCH 21/89] Step 7.4: Added base tag

---
 client/index.ng2.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/index.ng2.html b/client/index.ng2.html
index 9670ce7..e80ca6a 100755
--- a/client/index.ng2.html
+++ b/client/index.ng2.html
@@ -5,6 +5,7 @@
   <meta name="viewport" content="user-scalable=no, initial-scale=1, minimal-ui, maximum-scale=1, minimum-scale=1" />
   <link rel="shortcut icon" type="image/png" href="favicon.png?v1" sizes="16x16 32x32 64x64">
   <link rel="apple-touch-icon" sizes="120x120" href="apple-touch-icon-precomposed.png">
+  <base href="/">
 </head>
 <body>
     <app></app>
-- 
2.10.2


From a6128d01affe70f5641e81ae0557054f0c401466 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 15:16:40 +0300
Subject: [PATCH 22/89] Step 7.5: Created a stub for ListShowComponent

---
 client/imports/components/list-show.component.ts | 8 ++++++++
 1 file changed, 8 insertions(+)
 create mode 100644 client/imports/components/list-show.component.ts

diff --git a/client/imports/components/list-show.component.ts b/client/imports/components/list-show.component.ts
new file mode 100644
index 0000000..4140b3b
--- /dev/null
+++ b/client/imports/components/list-show.component.ts
@@ -0,0 +1,8 @@
+import {Component} from "@angular/core";
+
+@Component({
+    template: 'Hello ListShow!'
+})
+export class ListShowComponent {
+
+}
\ No newline at end of file
-- 
2.10.2


From 91586a43c86bf7b50382c3d4e72f8431a4988979 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 15:17:24 +0300
Subject: [PATCH 23/89] Step 7.6: Added router imports

---
 client/imports/app.module.ts | 4 +++-
 client/imports/app.routes.ts | 1 +
 2 files changed, 4 insertions(+), 1 deletion(-)

diff --git a/client/imports/app.module.ts b/client/imports/app.module.ts
index ea89911..4046aae 100644
--- a/client/imports/app.module.ts
+++ b/client/imports/app.module.ts
@@ -2,11 +2,13 @@ import {NgModule} from '@angular/core';
 import {BrowserModule} from '@angular/platform-browser';
 import {MainComponent} from "./main.component";
 import {routing} from "./app.routes";
+import {ListShowComponent} from "./components/list-show.component";
 
 @NgModule({
     // Components, Pipes, Directive
     declarations: [
-        MainComponent
+        MainComponent,
+        ListShowComponent
     ],
     // Entry Components
     entryComponents: [
diff --git a/client/imports/app.routes.ts b/client/imports/app.routes.ts
index 57641b8..93376cd 100644
--- a/client/imports/app.routes.ts
+++ b/client/imports/app.routes.ts
@@ -1,5 +1,6 @@
 import {ModuleWithProviders} from '@angular/core';
 import {Routes, RouterModule} from '@angular/router';
+import {ListShowComponent} from "./components/list-show.component";
 
 const appRoutes: Routes = [
     {path: 'lists/:_id', component: ListShowComponent}
-- 
2.10.2


From c5c96a85534e9f0d159bd417b0a1fbad5bb08044 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 15:24:36 +0300
Subject: [PATCH 24/89] Step 7.7: Added router-outlet directive

---
 client/imports/main.component.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/main.component.ts b/client/imports/main.component.ts
index 5bb55b2..bd9650d 100755
--- a/client/imports/main.component.ts
+++ b/client/imports/main.component.ts
@@ -3,7 +3,7 @@ import {Component} from "@angular/core";
 
 @Component({
   selector: 'app',
-  template: ''
+  template: '<router-outlet></router-outlet>'
 })
 export class MainComponent {
 }
\ No newline at end of file
-- 
2.10.2


From e02c2074e6ed9db3fffd78616faeaca6991d2467 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@Dotans-MacBook-Pro.local>
Date: Tue, 22 Nov 2016 13:47:56 +0200
Subject: [PATCH 25/89] Step 7: Router Migration

---
 manuals/templates/step7.md |  42 ++++++++++
 manuals/views/step7.md     | 192 +++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 234 insertions(+)
 create mode 100644 manuals/templates/step7.md
 create mode 100644 manuals/views/step7.md

diff --git a/manuals/templates/step7.md b/manuals/templates/step7.md
new file mode 100644
index 0000000..bde2a51
--- /dev/null
+++ b/manuals/templates/step7.md
@@ -0,0 +1,42 @@
+First step of migration is to migrate the Router.
+
+Our example To-do application uses *FlowRouter* in order to define it's routes, we can see the definitions in `/imports/startup/client/routes.js`.
+
+Our goal now is to migrate the router into Angular 2 Router - this step is very important and we need to do it first in order to load later Angular 2 Components with Blaze Template inside them.
+
+So let's start by commenting or removing the FlowRouter definitions:
+
+{{{diff_step 7.1}}} 
+
+And now let's define those routes using Angular 2 Router - the definition in a new file that in charge of the routes.
+
+We will start with a single route which in charge of the list view.
+
+Our goal is to create a route to display a specific To-do list, and we will later redirect to this page by default with a random list.
+
+{{{diff_step 7.2}}} 
+
+Angular 2 routes creates a NgModule with our routes defined, so we need to import it into our module under `imports`:
+
+{{{diff_step 7.3}}} 
+
+Also, we need to add `<base>` tag in our `<head>` for the router:
+
+{{{diff_step 7.4}}} 
+
+Noticed that we used a new component in the routes? `ListShowComponent` - let's create a stub component for this component (we will implement it later).
+
+{{{diff_step 7.5}}} 
+
+And now let's import this component in the routes file, and we need to declare that Component in our NgModule `declarations`:
+
+
+{{{diff_step 7.6}} 
+
+Now we need to point Angular 2 routes where to insert the route component, so we need to use `router-outlet` directive in our main component:
+
+{{{diff_step 7.7}}} 
+
+So now our app should be empty, because non of the existing Blaze Templates loaded (they were loaded by the Router according to the current URL).
+
+In the next step we will load the Blaze Template into our route.
diff --git a/manuals/views/step7.md b/manuals/views/step7.md
new file mode 100644
index 0000000..fe34bfd
--- /dev/null
+++ b/manuals/views/step7.md
@@ -0,0 +1,192 @@
+[{]: <region> (header)
+# Step 7: Router Migration
+[}]: #
+[{]: <region> (body)
+First step of migration is to migrate the Router.
+
+Our example To-do application uses *FlowRouter* in order to define it's routes, we can see the definitions in `/imports/startup/client/routes.js`.
+
+Our goal now is to migrate the router into Angular 2 Router - this step is very important and we need to do it first in order to load later Angular 2 Components with Blaze Template inside them.
+
+So let's start by commenting or removing the FlowRouter definitions:
+
+[{]: <helper> (diff_step 7.1)
+#### Step 7.1: Commented all the FlowRouter definitions
+
+##### Changed imports/startup/client/routes.js
+```diff
+@@ -11,6 +11,7 @@
+ ┊11┊11┊// Import to override accounts templates
+ ┊12┊12┊import '../../ui/accounts/accounts-templates.js';
+ ┊13┊13┊
++┊  ┊14┊/*
+ ┊14┊15┊FlowRouter.route('/lists/:_id', {
+ ┊15┊16┊  name: 'Lists.show',
+ ┊16┊17┊  action() {
+```
+```diff
+@@ -48,3 +49,4 @@
+ ┊48┊49┊  name: 'resetPwd',
+ ┊49┊50┊  path: '/reset-password',
+ ┊50┊51┊});
++┊  ┊52┊*/🚫↵
+```
+[}]: # 
+
+And now let's define those routes using Angular 2 Router - the definition in a new file that in charge of the routes.
+
+We will start with a single route which in charge of the list view.
+
+Our goal is to create a route to display a specific To-do list, and we will later redirect to this page by default with a random list.
+
+[{]: <helper> (diff_step 7.2)
+#### Step 7.2: Added routes definitions using Angular 2 router
+
+##### Added client/imports/app.routes.ts
+```diff
+@@ -0,0 +1,8 @@
++┊ ┊1┊import {ModuleWithProviders} from '@angular/core';
++┊ ┊2┊import {Routes, RouterModule} from '@angular/router';
++┊ ┊3┊
++┊ ┊4┊const appRoutes: Routes = [
++┊ ┊5┊    {path: 'lists/:_id', component: ListShowComponent}
++┊ ┊6┊];
++┊ ┊7┊
++┊ ┊8┊export const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);
+```
+[}]: # 
+
+Angular 2 routes creates a NgModule with our routes defined, so we need to import it into our module under `imports`:
+
+[{]: <helper> (diff_step 7.3)
+#### Step 7.3: Imported the routes files into the module
+
+##### Changed client/imports/app.module.ts
+```diff
+@@ -1,6 +1,7 @@
+ ┊1┊1┊import {NgModule} from '@angular/core';
+ ┊2┊2┊import {BrowserModule} from '@angular/platform-browser';
+ ┊3┊3┊import {MainComponent} from "./main.component";
++┊ ┊4┊import {routing} from "./app.routes";
+ ┊4┊5┊
+ ┊5┊6┊@NgModule({
+ ┊6┊7┊    // Components, Pipes, Directive
+```
+```diff
+@@ -15,7 +16,8 @@
+ ┊15┊16┊    providers: [],
+ ┊16┊17┊    // Modules
+ ┊17┊18┊    imports: [
+-┊18┊  ┊        BrowserModule
++┊  ┊19┊        BrowserModule,
++┊  ┊20┊        routing
+ ┊19┊21┊    ],
+ ┊20┊22┊    // Main Component
+ ┊21┊23┊    bootstrap: [MainComponent]
+```
+[}]: # 
+
+Also, we need to add `<base>` tag in our `<head>` for the router:
+
+[{]: <helper> (diff_step 7.4)
+#### Step 7.4: Added base tag
+
+##### Changed client/index.ng2.html
+```diff
+@@ -5,6 +5,7 @@
+ ┊ 5┊ 5┊  <meta name="viewport" content="user-scalable=no, initial-scale=1, minimal-ui, maximum-scale=1, minimum-scale=1" />
+ ┊ 6┊ 6┊  <link rel="shortcut icon" type="image/png" href="favicon.png?v1" sizes="16x16 32x32 64x64">
+ ┊ 7┊ 7┊  <link rel="apple-touch-icon" sizes="120x120" href="apple-touch-icon-precomposed.png">
++┊  ┊ 8┊  <base href="/">
+ ┊ 8┊ 9┊</head>
+ ┊ 9┊10┊<body>
+ ┊10┊11┊    <app></app>
+```
+[}]: # 
+
+Noticed that we used a new component in the routes? `ListShowComponent` - let's create a stub component for this component (we will implement it later).
+
+[{]: <helper> (diff_step 7.5)
+#### Step 7.5: Created a stub for ListShowComponent
+
+##### Added client/imports/components/list-show.component.ts
+```diff
+@@ -0,0 +1,8 @@
++┊ ┊1┊import {Component} from "@angular/core";
++┊ ┊2┊
++┊ ┊3┊@Component({
++┊ ┊4┊    template: 'Hello ListShow!'
++┊ ┊5┊})
++┊ ┊6┊export class ListShowComponent {
++┊ ┊7┊
++┊ ┊8┊}🚫↵
+```
+[}]: # 
+
+And now let's import this component in the routes file, and we need to declare that Component in our NgModule `declarations`:
+
+
+[{]: <helper> (diff_step 7.6)
+#### Step 7.6: Added router imports
+
+##### Changed client/imports/app.module.ts
+```diff
+@@ -2,11 +2,13 @@
+ ┊ 2┊ 2┊import {BrowserModule} from '@angular/platform-browser';
+ ┊ 3┊ 3┊import {MainComponent} from "./main.component";
+ ┊ 4┊ 4┊import {routing} from "./app.routes";
++┊  ┊ 5┊import {ListShowComponent} from "./components/list-show.component";
+ ┊ 5┊ 6┊
+ ┊ 6┊ 7┊@NgModule({
+ ┊ 7┊ 8┊    // Components, Pipes, Directive
+ ┊ 8┊ 9┊    declarations: [
+-┊ 9┊  ┊        MainComponent
++┊  ┊10┊        MainComponent,
++┊  ┊11┊        ListShowComponent
+ ┊10┊12┊    ],
+ ┊11┊13┊    // Entry Components
+ ┊12┊14┊    entryComponents: [
+```
+
+##### Changed client/imports/app.routes.ts
+```diff
+@@ -1,5 +1,6 @@
+ ┊1┊1┊import {ModuleWithProviders} from '@angular/core';
+ ┊2┊2┊import {Routes, RouterModule} from '@angular/router';
++┊ ┊3┊import {ListShowComponent} from "./components/list-show.component";
+ ┊3┊4┊
+ ┊4┊5┊const appRoutes: Routes = [
+ ┊5┊6┊    {path: 'lists/:_id', component: ListShowComponent}
+```
+[}]: # 
+
+Now we need to point Angular 2 routes where to insert the route component, so we need to use `router-outlet` directive in our main component:
+
+[{]: <helper> (diff_step 7.7)
+#### Step 7.7: Added router-outlet directive
+
+##### Changed client/imports/main.component.ts
+```diff
+@@ -3,7 +3,7 @@
+ ┊3┊3┊
+ ┊4┊4┊@Component({
+ ┊5┊5┊  selector: 'app',
+-┊6┊ ┊  template: ''
++┊ ┊6┊  template: '<router-outlet></router-outlet>'
+ ┊7┊7┊})
+ ┊8┊8┊export class MainComponent {
+ ┊9┊9┊}🚫↵
+```
+[}]: # 
+
+So now our app should be empty, because non of the existing Blaze Templates loaded (they were loaded by the Router according to the current URL).
+
+In the next step we will load the Blaze Template into our route.
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step6.md) | [Next Step >](step8.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From e90756d1061104c74bc5d0778c04bfa8af7498d5 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 15:24:54 +0300
Subject: [PATCH 26/89] Step 8.1: Added ListRedirector component

---
 client/imports/components/list-redirector.component.ts | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)
 create mode 100644 client/imports/components/list-redirector.component.ts

diff --git a/client/imports/components/list-redirector.component.ts b/client/imports/components/list-redirector.component.ts
new file mode 100644
index 0000000..bee78ce
--- /dev/null
+++ b/client/imports/components/list-redirector.component.ts
@@ -0,0 +1,17 @@
+import {Component} from "@angular/core";
+import {Router} from "@angular/router";
+import {Meteor} from "meteor/meteor";
+import {Lists} from "../../../imports/api/lists/lists";
+
+@Component({
+    template: 'Loading...'
+})
+export class ListRedirectorComponent {
+    constructor(private router: Router) {
+        Meteor.autorun(() => {
+            if (Lists.findOne()) {
+                router.navigate(['/lists', Lists.findOne()._id]);
+            }
+        });
+    }
+}
\ No newline at end of file
-- 
2.10.2


From d414600f95fe5acfe946e5fcbd0fdb88ec4bbe45 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 15:25:12 +0300
Subject: [PATCH 27/89] Step 8.2: Added list redirector for the module

---
 client/imports/app.module.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app.module.ts b/client/imports/app.module.ts
index 4046aae..df24a7d 100644
--- a/client/imports/app.module.ts
+++ b/client/imports/app.module.ts
@@ -3,12 +3,14 @@ import {BrowserModule} from '@angular/platform-browser';
 import {MainComponent} from "./main.component";
 import {routing} from "./app.routes";
 import {ListShowComponent} from "./components/list-show.component";
+import {ListRedirectorComponent} from "./components/list-redirector.component";
 
 @NgModule({
     // Components, Pipes, Directive
     declarations: [
         MainComponent,
-        ListShowComponent
+        ListShowComponent,
+        ListRedirectorComponent
     ],
     // Entry Components
     entryComponents: [
-- 
2.10.2


From 1aad80b606ef61c4ea5f880946b8341956ac9fb6 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 15:25:54 +0300
Subject: [PATCH 28/89] Step 8.3: Added list redirector route as default route

---
 client/imports/app.routes.ts | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/client/imports/app.routes.ts b/client/imports/app.routes.ts
index 93376cd..52bbd28 100644
--- a/client/imports/app.routes.ts
+++ b/client/imports/app.routes.ts
@@ -1,8 +1,10 @@
 import {ModuleWithProviders} from '@angular/core';
 import {Routes, RouterModule} from '@angular/router';
 import {ListShowComponent} from "./components/list-show.component";
+import {ListRedirectorComponent} from "./components/list-redirector.component";
 
 const appRoutes: Routes = [
+    {path: '', component: ListRedirectorComponent},
     {path: 'lists/:_id', component: ListShowComponent}
 ];
 
-- 
2.10.2


From 6a47793fe9aa9368754f5af64769623648fb9d9f Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 15:28:47 +0300
Subject: [PATCH 29/89] Step 8.4: Added data subscription on the main component

---
 client/imports/main.component.ts | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/client/imports/main.component.ts b/client/imports/main.component.ts
index bd9650d..f188e3d 100755
--- a/client/imports/main.component.ts
+++ b/client/imports/main.component.ts
@@ -1,9 +1,18 @@
 import '/imports/startup/client';
-import {Component} from "@angular/core";
+import {Component, OnInit} from "@angular/core";
+import {MeteorObservable} from "meteor-rxjs";
 
 @Component({
   selector: 'app',
   template: '<router-outlet></router-outlet>'
 })
-export class MainComponent {
+export class MainComponent implements OnInit {
+  constructor() {
+
+  }
+
+  ngOnInit() {
+    MeteorObservable.subscribe("lists.public").subscribe();
+    MeteorObservable.subscribe("lists.private").subscribe();
+  }
 }
\ No newline at end of file
-- 
2.10.2


From 709c8abe636dc02b6ea7eff8a4d91d212f6cbd4d Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@Dotans-MacBook-Pro.local>
Date: Tue, 22 Nov 2016 13:53:39 +0200
Subject: [PATCH 30/89] Step 8: Migrate the main Blaze Template

---
 manuals/templates/step8.md |  29 ++++++++++
 manuals/views/step8.md     | 130 +++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 159 insertions(+)
 create mode 100644 manuals/templates/step8.md
 create mode 100644 manuals/views/step8.md

diff --git a/manuals/templates/step8.md b/manuals/templates/step8.md
new file mode 100644
index 0000000..eacb392
--- /dev/null
+++ b/manuals/templates/step8.md
@@ -0,0 +1,29 @@
+So let's create a new Component, named `ListRedirectorComponent` - this Component will find a default list, and redirect to it - we will use it as a default route (`/`) later.
+
+{{{diff_step 8.1}}} 
+
+> We are looking for a one record of a todo list, and when we have it - we will redirect to the `/lists` route when we have it.
+
+> In this point, we still does not have a Meteor subscription and our Lists collection will be empty - don't worry - we will fix it soon.
+
+> We also used `Tracker.autorun` to run that code when we get the actual data from the collection.
+
+And let's add the new Component into the NgModule:
+
+{{{diff_step 8.2}}} 
+
+And now let's add it as default route to our routes file:
+
+{{{diff_step 8.3}}} 
+
+Now, in order to get data in the collection, let's add a Meteor Subscription to the data:
+
+{{{diff_step 8.4}}} 
+
+We used `MeteorObservable` which is an implementation of Meteor that uses RxJS, so we subscribe the data from Meteor subscription, and the return value of it is an RxJS Observable object.
+
+Then we use `subscribe()` again in order to run the actual logic and register to the data subscription.
+
+> The RxJS Observable in this case, called when the Meteor Subscription is in "ready" state!
+
+So now our default Component redirects to one of the lists page when it's loaded - let's continue!
diff --git a/manuals/views/step8.md b/manuals/views/step8.md
new file mode 100644
index 0000000..8b9ecef
--- /dev/null
+++ b/manuals/views/step8.md
@@ -0,0 +1,130 @@
+[{]: <region> (header)
+# Step 8: Migrate the main Blaze Template
+[}]: #
+[{]: <region> (body)
+So let's create a new Component, named `ListRedirectorComponent` - this Component will find a default list, and redirect to it - we will use it as a default route (`/`) later.
+
+[{]: <helper> (diff_step 8.1)
+#### Step 8.1: Added ListRedirector component
+
+##### Added client/imports/components/list-redirector.component.ts
+```diff
+@@ -0,0 +1,17 @@
++┊  ┊ 1┊import {Component} from "@angular/core";
++┊  ┊ 2┊import {Router} from "@angular/router";
++┊  ┊ 3┊import {Meteor} from "meteor/meteor";
++┊  ┊ 4┊import {Lists} from "../../../imports/api/lists/lists";
++┊  ┊ 5┊
++┊  ┊ 6┊@Component({
++┊  ┊ 7┊    template: 'Loading...'
++┊  ┊ 8┊})
++┊  ┊ 9┊export class ListRedirectorComponent {
++┊  ┊10┊    constructor(private router: Router) {
++┊  ┊11┊        Meteor.autorun(() => {
++┊  ┊12┊            if (Lists.findOne()) {
++┊  ┊13┊                router.navigate(['/lists', Lists.findOne()._id]);
++┊  ┊14┊            }
++┊  ┊15┊        });
++┊  ┊16┊    }
++┊  ┊17┊}🚫↵
+```
+[}]: # 
+
+> We are looking for a one record of a todo list, and when we have it - we will redirect to the `/lists` route when we have it.
+
+> In this point, we still does not have a Meteor subscription and our Lists collection will be empty - don't worry - we will fix it soon.
+
+> We also used `Tracker.autorun` to run that code when we get the actual data from the collection.
+
+And let's add the new Component into the NgModule:
+
+[{]: <helper> (diff_step 8.2)
+#### Step 8.2: Added list redirector for the module
+
+##### Changed client/imports/app.module.ts
+```diff
+@@ -3,12 +3,14 @@
+ ┊ 3┊ 3┊import {MainComponent} from "./main.component";
+ ┊ 4┊ 4┊import {routing} from "./app.routes";
+ ┊ 5┊ 5┊import {ListShowComponent} from "./components/list-show.component";
++┊  ┊ 6┊import {ListRedirectorComponent} from "./components/list-redirector.component";
+ ┊ 6┊ 7┊
+ ┊ 7┊ 8┊@NgModule({
+ ┊ 8┊ 9┊    // Components, Pipes, Directive
+ ┊ 9┊10┊    declarations: [
+ ┊10┊11┊        MainComponent,
+-┊11┊  ┊        ListShowComponent
++┊  ┊12┊        ListShowComponent,
++┊  ┊13┊        ListRedirectorComponent
+ ┊12┊14┊    ],
+ ┊13┊15┊    // Entry Components
+ ┊14┊16┊    entryComponents: [
+```
+[}]: # 
+
+And now let's add it as default route to our routes file:
+
+[{]: <helper> (diff_step 8.3)
+#### Step 8.3: Added list redirector route as default route
+
+##### Changed client/imports/app.routes.ts
+```diff
+@@ -1,8 +1,10 @@
+ ┊1┊1┊import {ModuleWithProviders} from '@angular/core';
+ ┊2┊2┊import {Routes, RouterModule} from '@angular/router';
+ ┊3┊3┊import {ListShowComponent} from "./components/list-show.component";
++┊ ┊4┊import {ListRedirectorComponent} from "./components/list-redirector.component";
+ ┊4┊5┊
+ ┊5┊6┊const appRoutes: Routes = [
++┊ ┊7┊    {path: '', component: ListRedirectorComponent},
+ ┊6┊8┊    {path: 'lists/:_id', component: ListShowComponent}
+ ┊7┊9┊];
+```
+[}]: # 
+
+Now, in order to get data in the collection, let's add a Meteor Subscription to the data:
+
+[{]: <helper> (diff_step 8.4)
+#### Step 8.4: Added data subscription on the main component
+
+##### Changed client/imports/main.component.ts
+```diff
+@@ -1,9 +1,18 @@
+ ┊ 1┊ 1┊import '/imports/startup/client';
+-┊ 2┊  ┊import {Component} from "@angular/core";
++┊  ┊ 2┊import {Component, OnInit} from "@angular/core";
++┊  ┊ 3┊import {MeteorObservable} from "meteor-rxjs";
+ ┊ 3┊ 4┊
+ ┊ 4┊ 5┊@Component({
+ ┊ 5┊ 6┊  selector: 'app',
+ ┊ 6┊ 7┊  template: '<router-outlet></router-outlet>'
+ ┊ 7┊ 8┊})
+-┊ 8┊  ┊export class MainComponent {
++┊  ┊ 9┊export class MainComponent implements OnInit {
++┊  ┊10┊  constructor() {
++┊  ┊11┊
++┊  ┊12┊  }
++┊  ┊13┊
++┊  ┊14┊  ngOnInit() {
++┊  ┊15┊    MeteorObservable.subscribe("lists.public").subscribe();
++┊  ┊16┊    MeteorObservable.subscribe("lists.private").subscribe();
++┊  ┊17┊  }
+ ┊ 9┊18┊}🚫↵
+```
+[}]: # 
+
+We used `MeteorObservable` which is an implementation of Meteor that uses RxJS, so we subscribe the data from Meteor subscription, and the return value of it is an RxJS Observable object.
+
+Then we use `subscribe()` again in order to run the actual logic and register to the data subscription.
+
+> The RxJS Observable in this case, called when the Meteor Subscription is in "ready" state!
+
+So now our default Component redirects to one of the lists page when it's loaded - let's continue!
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step7.md) | [Next Step >](step9.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 2f427c965dfdf6465b2dd309b1011ec4a27f20d7 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 15:30:58 +0300
Subject: [PATCH 31/89] Step 9.1: Get the ID of the list from the router

---
 client/imports/components/list-show.component.ts | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/client/imports/components/list-show.component.ts b/client/imports/components/list-show.component.ts
index 4140b3b..0ae6780 100644
--- a/client/imports/components/list-show.component.ts
+++ b/client/imports/components/list-show.component.ts
@@ -1,8 +1,17 @@
-import {Component} from "@angular/core";
+import {Component, OnInit} from "@angular/core";
+import {ActivatedRoute, Params} from "@angular/router";
 
 @Component({
     template: 'Hello ListShow!'
 })
-export class ListShowComponent {
+export class ListShowComponent implements OnInit {
+    constructor(private currentRoute: ActivatedRoute) {
 
+    }
+
+    ngOnInit() {
+        this.currentRoute.params.subscribe((params: Params) => {
+            const listId = params['_id'];
+        })
+    }
 }
\ No newline at end of file
-- 
2.10.2


From f51b1c354cb3457fc702bf9e4a72383aec92beb3 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 15:31:44 +0300
Subject: [PATCH 32/89] Step 9.2: Added blaze-template with it's context

---
 client/imports/components/list-show.component.ts | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/client/imports/components/list-show.component.ts b/client/imports/components/list-show.component.ts
index 0ae6780..88b26c1 100644
--- a/client/imports/components/list-show.component.ts
+++ b/client/imports/components/list-show.component.ts
@@ -2,9 +2,11 @@ import {Component, OnInit} from "@angular/core";
 import {ActivatedRoute, Params} from "@angular/router";
 
 @Component({
-    template: 'Hello ListShow!'
+    template: '<blaze-template *ngIf="templateContext" name="App_body" [context]="templateContext"></blaze-template>'
 })
 export class ListShowComponent implements OnInit {
+    private templateContext: any;
+
     constructor(private currentRoute: ActivatedRoute) {
 
     }
@@ -12,6 +14,11 @@ export class ListShowComponent implements OnInit {
     ngOnInit() {
         this.currentRoute.params.subscribe((params: Params) => {
             const listId = params['_id'];
-        })
+
+            this.templateContext = {
+                main: "Lists_show_page",
+                _id: listId
+            };
+        });
     }
 }
\ No newline at end of file
-- 
2.10.2


From 4abae92c4f1ecb5a761d0f9e3573938a20252843 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 15:32:05 +0300
Subject: [PATCH 33/89] Step 9.3: Changed the way of getting the list ID

---
 imports/ui/pages/lists-show-page.js | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/imports/ui/pages/lists-show-page.js b/imports/ui/pages/lists-show-page.js
index 4287674..a174e96 100755
--- a/imports/ui/pages/lists-show-page.js
+++ b/imports/ui/pages/lists-show-page.js
@@ -11,7 +11,7 @@ import './app-not-found.js';
 import '../components/lists-show.js';
 
 Template.Lists_show_page.onCreated(function listsShowPageOnCreated() {
-  this.getListId = () => FlowRouter.getParam('_id');
+  this.getListId = () => this.data._id;
 
   this.autorun(() => {
     this.subscribe('todos.inList', this.getListId());
-- 
2.10.2


From cd524ebcffe63cca998018a23bb077bd26b0c514 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 15:32:29 +0300
Subject: [PATCH 34/89] Step 9.4: Imported the Blaze template component module
 into the app

---
 client/imports/app.module.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app.module.ts b/client/imports/app.module.ts
index df24a7d..1f52e87 100644
--- a/client/imports/app.module.ts
+++ b/client/imports/app.module.ts
@@ -4,6 +4,7 @@ import {MainComponent} from "./main.component";
 import {routing} from "./app.routes";
 import {ListShowComponent} from "./components/list-show.component";
 import {ListRedirectorComponent} from "./components/list-redirector.component";
+import {Angular2BlazeTemplateModule} from "angular2-blaze-template";
 
 @NgModule({
     // Components, Pipes, Directive
@@ -21,7 +22,8 @@ import {ListRedirectorComponent} from "./components/list-redirector.component";
     // Modules
     imports: [
         BrowserModule,
-        routing
+        routing,
+        Angular2BlazeTemplateModule
     ],
     // Main Component
     bootstrap: [MainComponent]
-- 
2.10.2


From f778da4a29a0e9f92ff22f6e931ed492f00467f0 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@Dotans-MacBook-Pro.local>
Date: Tue, 22 Nov 2016 13:55:53 +0200
Subject: [PATCH 35/89] Step 9: Load Blaze Template

---
 manuals/templates/step9.md |  29 +++++++++
 manuals/views/step9.md     | 142 +++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 171 insertions(+)
 create mode 100644 manuals/templates/step9.md
 create mode 100644 manuals/views/step9.md

diff --git a/manuals/templates/step9.md b/manuals/templates/step9.md
new file mode 100644
index 0000000..6853c38
--- /dev/null
+++ b/manuals/templates/step9.md
@@ -0,0 +1,29 @@
+So now we get to the list page, but it's empty! we need to load the existing Blaze Template into our Component.
+
+First, we need to use the Router parameter (in the URL) in order to get the ID of the list.
+
+Let's do it:
+
+{{{diff_step 9.1}}} 
+
+And now we need to load the existing Blaze Template called `App_body` and with context.
+
+{{{diff_step 9.2}}} 
+
+> We use `App_body` because the architecture of the To-do is to load this template and dynamically load a child template that comes from the `main` property of the Template context.
+
+The context of the Template is it's `this.data` that Blaze developers already familiar with, and we use it to pass the child Blaze Template we want to load (`Lists_show_page`) and the `_id` of the choosen list.
+
+Great, now we are missing only one step to make it work.
+
+The `Lists_show_page` Template (`imports/ui/pages/lists-show-page.js`) loads the ID of the list from the `FlowRouter`, and now it can load it from the `this.data` object, so let's change it:
+
+{{{diff_step 9.3}}} 
+
+We used an external Component, so we need to imports it's NgModule:
+
+{{{diff_step 9.4}}} 
+
+In this point - we have a fully working Angular 2 application that wraps the Blaze application!
+
+In the next steps, we will start to migrate and rewrite our Blaze Templates.
diff --git a/manuals/views/step9.md b/manuals/views/step9.md
new file mode 100644
index 0000000..60ef430
--- /dev/null
+++ b/manuals/views/step9.md
@@ -0,0 +1,142 @@
+[{]: <region> (header)
+# Step 9: Load Blaze Template
+[}]: #
+[{]: <region> (body)
+So now we get to the list page, but it's empty! we need to load the existing Blaze Template into our Component.
+
+First, we need to use the Router parameter (in the URL) in order to get the ID of the list.
+
+Let's do it:
+
+[{]: <helper> (diff_step 9.1)
+#### Step 9.1: Get the ID of the list from the router
+
+##### Changed client/imports/components/list-show.component.ts
+```diff
+@@ -1,8 +1,17 @@
+-┊ 1┊  ┊import {Component} from "@angular/core";
++┊  ┊ 1┊import {Component, OnInit} from "@angular/core";
++┊  ┊ 2┊import {ActivatedRoute, Params} from "@angular/router";
+ ┊ 2┊ 3┊
+ ┊ 3┊ 4┊@Component({
+ ┊ 4┊ 5┊    template: 'Hello ListShow!'
+ ┊ 5┊ 6┊})
+-┊ 6┊  ┊export class ListShowComponent {
++┊  ┊ 7┊export class ListShowComponent implements OnInit {
++┊  ┊ 8┊    constructor(private currentRoute: ActivatedRoute) {
+ ┊ 7┊ 9┊
++┊  ┊10┊    }
++┊  ┊11┊
++┊  ┊12┊    ngOnInit() {
++┊  ┊13┊        this.currentRoute.params.subscribe((params: Params) => {
++┊  ┊14┊            const listId = params['_id'];
++┊  ┊15┊        })
++┊  ┊16┊    }
+ ┊ 8┊17┊}🚫↵
+```
+[}]: # 
+
+And now we need to load the existing Blaze Template called `App_body` and with context.
+
+[{]: <helper> (diff_step 9.2)
+#### Step 9.2: Added blaze-template with it's context
+
+##### Changed client/imports/components/list-show.component.ts
+```diff
+@@ -2,9 +2,11 @@
+ ┊ 2┊ 2┊import {ActivatedRoute, Params} from "@angular/router";
+ ┊ 3┊ 3┊
+ ┊ 4┊ 4┊@Component({
+-┊ 5┊  ┊    template: 'Hello ListShow!'
++┊  ┊ 5┊    template: '<blaze-template *ngIf="templateContext" name="App_body" [context]="templateContext"></blaze-template>'
+ ┊ 6┊ 6┊})
+ ┊ 7┊ 7┊export class ListShowComponent implements OnInit {
++┊  ┊ 8┊    private templateContext: any;
++┊  ┊ 9┊
+ ┊ 8┊10┊    constructor(private currentRoute: ActivatedRoute) {
+ ┊ 9┊11┊
+ ┊10┊12┊    }
+```
+```diff
+@@ -12,6 +14,11 @@
+ ┊12┊14┊    ngOnInit() {
+ ┊13┊15┊        this.currentRoute.params.subscribe((params: Params) => {
+ ┊14┊16┊            const listId = params['_id'];
+-┊15┊  ┊        })
++┊  ┊17┊
++┊  ┊18┊            this.templateContext = {
++┊  ┊19┊                main: "Lists_show_page",
++┊  ┊20┊                _id: listId
++┊  ┊21┊            };
++┊  ┊22┊        });
+ ┊16┊23┊    }
+ ┊17┊24┊}🚫↵
+```
+[}]: # 
+
+> We use `App_body` because the architecture of the To-do is to load this template and dynamically load a child template that comes from the `main` property of the Template context.
+
+The context of the Template is it's `this.data` that Blaze developers already familiar with, and we use it to pass the child Blaze Template we want to load (`Lists_show_page`) and the `_id` of the choosen list.
+
+Great, now we are missing only one step to make it work.
+
+The `Lists_show_page` Template (`imports/ui/pages/lists-show-page.js`) loads the ID of the list from the `FlowRouter`, and now it can load it from the `this.data` object, so let's change it:
+
+[{]: <helper> (diff_step 9.3)
+#### Step 9.3: Changed the way of getting the list ID
+
+##### Changed imports/ui/pages/lists-show-page.js
+```diff
+@@ -11,7 +11,7 @@
+ ┊11┊11┊import '../components/lists-show.js';
+ ┊12┊12┊
+ ┊13┊13┊Template.Lists_show_page.onCreated(function listsShowPageOnCreated() {
+-┊14┊  ┊  this.getListId = () => FlowRouter.getParam('_id');
++┊  ┊14┊  this.getListId = () => this.data._id;
+ ┊15┊15┊
+ ┊16┊16┊  this.autorun(() => {
+ ┊17┊17┊    this.subscribe('todos.inList', this.getListId());
+```
+[}]: # 
+
+We used an external Component, so we need to imports it's NgModule:
+
+[{]: <helper> (diff_step 9.4)
+#### Step 9.4: Imported the Blaze template component module into the app
+
+##### Changed client/imports/app.module.ts
+```diff
+@@ -4,6 +4,7 @@
+ ┊ 4┊ 4┊import {routing} from "./app.routes";
+ ┊ 5┊ 5┊import {ListShowComponent} from "./components/list-show.component";
+ ┊ 6┊ 6┊import {ListRedirectorComponent} from "./components/list-redirector.component";
++┊  ┊ 7┊import {Angular2BlazeTemplateModule} from "angular2-blaze-template";
+ ┊ 7┊ 8┊
+ ┊ 8┊ 9┊@NgModule({
+ ┊ 9┊10┊    // Components, Pipes, Directive
+```
+```diff
+@@ -21,7 +22,8 @@
+ ┊21┊22┊    // Modules
+ ┊22┊23┊    imports: [
+ ┊23┊24┊        BrowserModule,
+-┊24┊  ┊        routing
++┊  ┊25┊        routing,
++┊  ┊26┊        Angular2BlazeTemplateModule
+ ┊25┊27┊    ],
+ ┊26┊28┊    // Main Component
+ ┊27┊29┊    bootstrap: [MainComponent]
+```
+[}]: # 
+
+In this point - we have a fully working Angular 2 application that wraps the Blaze application!
+
+In the next steps, we will start to migrate and rewrite our Blaze Templates.
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step8.md) | [Next Step >](step10.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From b99a29c605c8357d7dae57f485be152b6c7f4b12 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 15:34:04 +0300
Subject: [PATCH 36/89] Step 10.1: Migrate the App_body template

---
 client/imports/main-component.ng2.html | 47 ++++++++++++++++++++++++++++++++++
 1 file changed, 47 insertions(+)
 create mode 100644 client/imports/main-component.ng2.html

diff --git a/client/imports/main-component.ng2.html b/client/imports/main-component.ng2.html
new file mode 100644
index 0000000..bc964d2
--- /dev/null
+++ b/client/imports/main-component.ng2.html
@@ -0,0 +1,47 @@
+<div id="container" [ngClass]="{'menu-open': menuOpen, 'cordova': isCordova}">
+    <section id="menu">
+        <div *ngIf="currentUser" class="btns-group-vertical">
+            <a href="#" class="js-user-menu btn-secondary">
+                <span *ngIf="userMenuOpen" class="icon-arrow-up"></span>
+                <span *ngIf="!userMenuOpen" class="icon-arrow-down"></span>
+
+                {{ userEmail }}
+            </a>
+            <a *ngIf="userMenuOpen" class="js-logout btn-secondary">Logout</a>
+        </div>
+        <div *ngIf="!currentUser" class="btns-group">
+            <a href="SIGNIN_LINK" class="btn-secondary">Sign In</a>
+            <a href="JOIN_LINK" class="btn-secondary">Join</a>
+        </div>
+
+        <div class="list-todos">
+            <a class="js-new-list link-list-new">
+                <span class="icon-plus"></span>
+                New List
+            </a>
+
+            <a *ngFor="let list of lists | async" href="LIST_LINK" [title]="list.name" class="list-todo">
+                <span *ngIf="list.userId" class="icon-lock"></span>
+                <span *ngIf="list.incompleteCount" class="count-list">{{list.incompleteCount}}</span>
+
+                {{list.name}}
+            </a>
+        </div>
+    </section>
+
+    <div *ngIf="!isConnected()" class="notifications">
+        <div class="notification">
+            <span class="icon-sync"></span>
+            <div class="meta">
+                <div class="title-notification">Trying to connect</div>
+                <div class="description">There seems to be a connection issue</div>
+            </div>
+        </div>
+    </div>
+
+    <div class="content-overlay"></div>
+
+    <div id="content-container">
+        <router-outlet></router-outlet>
+    </div>
+</div>
\ No newline at end of file
-- 
2.10.2


From 5e0f2dcc96a8177f9fe2d21bacf2f225c54266b0 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 15:34:52 +0300
Subject: [PATCH 37/89] Step 10.2: Use the new template and added stub methods

---
 client/imports/main.component.ts | 17 +++++++++++++++--
 1 file changed, 15 insertions(+), 2 deletions(-)

diff --git a/client/imports/main.component.ts b/client/imports/main.component.ts
index f188e3d..39a33bb 100755
--- a/client/imports/main.component.ts
+++ b/client/imports/main.component.ts
@@ -1,18 +1,31 @@
 import '/imports/startup/client';
 import {Component, OnInit} from "@angular/core";
 import {MeteorObservable} from "meteor-rxjs";
+import {Meteor} from "meteor/meteor";
 
 @Component({
   selector: 'app',
-  template: '<router-outlet></router-outlet>'
+  templateUrl: '/client/imports/main-component.html'
 })
 export class MainComponent implements OnInit {
-  constructor() {
+  private isCordova : boolean;
+  private menuOpen : boolean = false;
+  private userMenuOpen : boolean = false;
 
+  constructor() {
+    this.isCordova = Meteor.isCordova;
   }
 
   ngOnInit() {
     MeteorObservable.subscribe("lists.public").subscribe();
     MeteorObservable.subscribe("lists.private").subscribe();
   }
+
+  isConnected() {
+    return true;
+  }
+
+  get userEmail() {
+    return "";
+  }
 }
\ No newline at end of file
-- 
2.10.2


From 320bf87717d6d38d8cd16ebb64766c87f92b66fd Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 15:48:24 +0300
Subject: [PATCH 38/89] Step 10.3: Change the blaze template type that loaded

---
 client/imports/components/list-show.component.ts | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/client/imports/components/list-show.component.ts b/client/imports/components/list-show.component.ts
index 88b26c1..8aed6d9 100644
--- a/client/imports/components/list-show.component.ts
+++ b/client/imports/components/list-show.component.ts
@@ -2,7 +2,7 @@ import {Component, OnInit} from "@angular/core";
 import {ActivatedRoute, Params} from "@angular/router";
 
 @Component({
-    template: '<blaze-template *ngIf="templateContext" name="App_body" [context]="templateContext"></blaze-template>'
+    template: '<blaze-template *ngIf="templateContext" name="Lists_show_page" [context]="templateContext"></blaze-template>'
 })
 export class ListShowComponent implements OnInit {
     private templateContext: any;
@@ -16,7 +16,6 @@ export class ListShowComponent implements OnInit {
             const listId = params['_id'];
 
             this.templateContext = {
-                main: "Lists_show_page",
                 _id: listId
             };
         });
-- 
2.10.2


From 0805dd7cb20a9728d011f7ee70246b23530dcbaa Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 17:11:12 +0300
Subject: [PATCH 39/89] Step 10.4: Added the list using MeteorObservable

---
 client/imports/main.component.ts | 14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

diff --git a/client/imports/main.component.ts b/client/imports/main.component.ts
index 39a33bb..9df1c6b 100755
--- a/client/imports/main.component.ts
+++ b/client/imports/main.component.ts
@@ -1,7 +1,9 @@
 import '/imports/startup/client';
 import {Component, OnInit} from "@angular/core";
-import {MeteorObservable} from "meteor-rxjs";
 import {Meteor} from "meteor/meteor";
+import {MeteorObservable} from "meteor-rxjs";
+import {Observable} from "rxjs";
+import {Lists} from "../../imports/api/lists/lists";
 
 @Component({
   selector: 'app',
@@ -11,6 +13,7 @@ export class MainComponent implements OnInit {
   private isCordova : boolean;
   private menuOpen : boolean = false;
   private userMenuOpen : boolean = false;
+  private lists: Observable<any>;
 
   constructor() {
     this.isCordova = Meteor.isCordova;
@@ -19,6 +22,15 @@ export class MainComponent implements OnInit {
   ngOnInit() {
     MeteorObservable.subscribe("lists.public").subscribe();
     MeteorObservable.subscribe("lists.private").subscribe();
+
+    MeteorObservable.autorun().zone().subscribe(() => {
+      this.lists = Lists.find({
+        $or: [
+          {userId: {$exists: false}},
+          {userId: Meteor.userId()},
+        ]
+      }).zone();
+    });
   }
 
   isConnected() {
-- 
2.10.2


From df1b7931111f243f9513ea4da5638ebaa95e6b3a Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 17:11:50 +0300
Subject: [PATCH 40/89] Step 10.5: Changes in the lists collection definition
 to expose RxJS API

---
 imports/api/lists/lists.js | 18 ++++++++----------
 1 file changed, 8 insertions(+), 10 deletions(-)

diff --git a/imports/api/lists/lists.js b/imports/api/lists/lists.js
index b3995bc..abda367 100755
--- a/imports/api/lists/lists.js
+++ b/imports/api/lists/lists.js
@@ -1,7 +1,6 @@
-import { Mongo } from 'meteor/mongo';
 import { SimpleSchema } from 'meteor/aldeed:simple-schema';
-import { Factory } from 'meteor/factory';
 import { Todos } from '../todos/todos.js';
+import {MongoObservable} from "meteor-rxjs";
 
 class ListsCollection extends Mongo.Collection {
   insert(list, callback) {
@@ -25,35 +24,33 @@ class ListsCollection extends Mongo.Collection {
   }
 }
 
-export const Lists = new ListsCollection('Lists');
+export const Lists = new MongoObservable.fromExisting(new ListsCollection("Lists"));
 
 // Deny all client-side updates since we will be using methods to manage this collection
-Lists.deny({
+Lists.collection.deny({
   insert() { return true; },
   update() { return true; },
   remove() { return true; },
 });
 
-Lists.schema = new SimpleSchema({
+let schema = new SimpleSchema({
   name: { type: String },
   incompleteCount: { type: Number, defaultValue: 0 },
   userId: { type: String, regEx: SimpleSchema.RegEx.Id, optional: true },
 });
 
-Lists.attachSchema(Lists.schema);
+Lists.collection.attachSchema(schema);
 
 // This represents the keys from Lists objects that should be published
 // to the client. If we add secret properties to List objects, don't list
 // them here to keep them private to the server.
-Lists.publicFields = {
+Lists.collection.publicFields = {
   name: 1,
   incompleteCount: 1,
   userId: 1,
 };
 
-Factory.define('list', Lists, {});
-
-Lists.helpers({
+Lists.collection.helpers({
   // A list is considered to be private if it has a userId set
   isPrivate() {
     return !!this.userId;
@@ -73,3 +70,4 @@ Lists.helpers({
     return Todos.find({ listId: this._id }, { sort: { createdAt: -1 } });
   },
 });
+
-- 
2.10.2


From 3cbfb311a132babfc2e577a70795fe9978979c6a Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 17:12:49 +0300
Subject: [PATCH 41/89] Step 10.6: Implemented isConnected

---
 client/imports/main.component.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/main.component.ts b/client/imports/main.component.ts
index 9df1c6b..d4a40e9 100755
--- a/client/imports/main.component.ts
+++ b/client/imports/main.component.ts
@@ -34,7 +34,7 @@ export class MainComponent implements OnInit {
   }
 
   isConnected() {
-    return true;
+    return Meteor.status().connected;
   }
 
   get userEmail() {
-- 
2.10.2


From 73df13815c95382aa85f67c4c3d63d97a2cce789 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 17:13:18 +0300
Subject: [PATCH 42/89] Step 10.7: Implemented emailLocalPart

---
 client/imports/main.component.ts | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/client/imports/main.component.ts b/client/imports/main.component.ts
index d4a40e9..f2e8eb9 100755
--- a/client/imports/main.component.ts
+++ b/client/imports/main.component.ts
@@ -38,6 +38,13 @@ export class MainComponent implements OnInit {
   }
 
   get userEmail() {
-    return "";
+    if (Meteor.user()) {
+      const email = Meteor.user().emails[0].address;
+
+      return email.substring(0, email.indexOf('@'));
+    }
+    else {
+      return "";
+    }
   }
 }
\ No newline at end of file
-- 
2.10.2


From 8b94cb4f7eed127bf930e9a6e8e95ec020b81659 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 17:30:09 +0300
Subject: [PATCH 43/89] Step 10.8: Added router links and the active lists
 indication

---
 client/imports/main-component.ng2.html | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/client/imports/main-component.ng2.html b/client/imports/main-component.ng2.html
index bc964d2..a59d263 100644
--- a/client/imports/main-component.ng2.html
+++ b/client/imports/main-component.ng2.html
@@ -10,8 +10,8 @@
             <a *ngIf="userMenuOpen" class="js-logout btn-secondary">Logout</a>
         </div>
         <div *ngIf="!currentUser" class="btns-group">
-            <a href="SIGNIN_LINK" class="btn-secondary">Sign In</a>
-            <a href="JOIN_LINK" class="btn-secondary">Join</a>
+            <a routerLink="/signin" class="btn-secondary">Sign In</a>
+            <a routerLink="/join" class="btn-secondary">Join</a>
         </div>
 
         <div class="list-todos">
@@ -20,7 +20,7 @@
                 New List
             </a>
 
-            <a *ngFor="let list of lists | async" href="LIST_LINK" [title]="list.name" class="list-todo">
+            <a *ngFor="let list of lists | async" [routerLink]="['lists', list._id]" routerLinkActive="active" [title]="list.name" class="list-todo">
                 <span *ngIf="list.userId" class="icon-lock"></span>
                 <span *ngIf="list.incompleteCount" class="count-list">{{list.incompleteCount}}</span>
 
-- 
2.10.2


From d04d710bf6b9e80d324c1e5f99e2132832ed9352 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 17:32:31 +0300
Subject: [PATCH 44/89] Step 10.9: Added stubs for signin/join components

---
 client/imports/components/join.component.ts   | 7 +++++++
 client/imports/components/signin.component.ts | 7 +++++++
 2 files changed, 14 insertions(+)
 create mode 100644 client/imports/components/join.component.ts
 create mode 100644 client/imports/components/signin.component.ts

diff --git a/client/imports/components/join.component.ts b/client/imports/components/join.component.ts
new file mode 100644
index 0000000..e8e18f6
--- /dev/null
+++ b/client/imports/components/join.component.ts
@@ -0,0 +1,7 @@
+import {Component} from "@angular/core";
+
+@Component({
+  template: 'Join!'
+})
+export class JoinComponent {
+}
\ No newline at end of file
diff --git a/client/imports/components/signin.component.ts b/client/imports/components/signin.component.ts
new file mode 100644
index 0000000..09d1ee4
--- /dev/null
+++ b/client/imports/components/signin.component.ts
@@ -0,0 +1,7 @@
+import {Component} from "@angular/core";
+
+@Component({
+  template: 'Signin!'
+})
+export class SigninComponent {
+}
\ No newline at end of file
-- 
2.10.2


From a18714cbc1d3f3f5041f34beddaa6397a32d396a Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 17:33:12 +0300
Subject: [PATCH 45/89] Step 10.10: Added join/signin component to the module
 declaration

---
 client/imports/app.module.ts | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/client/imports/app.module.ts b/client/imports/app.module.ts
index 1f52e87..efb26e8 100644
--- a/client/imports/app.module.ts
+++ b/client/imports/app.module.ts
@@ -5,13 +5,17 @@ import {routing} from "./app.routes";
 import {ListShowComponent} from "./components/list-show.component";
 import {ListRedirectorComponent} from "./components/list-redirector.component";
 import {Angular2BlazeTemplateModule} from "angular2-blaze-template";
+import {JoinComponent} from "./components/join.component";
+import {SigninComponent} from "./components/signin.component";
 
 @NgModule({
     // Components, Pipes, Directive
     declarations: [
         MainComponent,
         ListShowComponent,
-        ListRedirectorComponent
+        ListRedirectorComponent,
+        JoinComponent,
+        SigninComponent
     ],
     // Entry Components
     entryComponents: [
-- 
2.10.2


From 4bcd6cf7b8a5d3459a8b89e3adca6407faadb3d0 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 17:33:42 +0300
Subject: [PATCH 46/89] Step 10.11: Added join/signin component to the router

---
 client/imports/app.routes.ts | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/client/imports/app.routes.ts b/client/imports/app.routes.ts
index 52bbd28..bb255ca 100644
--- a/client/imports/app.routes.ts
+++ b/client/imports/app.routes.ts
@@ -2,10 +2,14 @@ import {ModuleWithProviders} from '@angular/core';
 import {Routes, RouterModule} from '@angular/router';
 import {ListShowComponent} from "./components/list-show.component";
 import {ListRedirectorComponent} from "./components/list-redirector.component";
+import {JoinComponent} from "./components/join.component";
+import {SigninComponent} from "./components/signin.component";
 
 const appRoutes: Routes = [
     {path: '', component: ListRedirectorComponent},
-    {path: 'lists/:_id', component: ListShowComponent}
+    {path: 'lists/:_id', component: ListShowComponent},
+    {path: 'join', component: JoinComponent},
+    {path: 'signin', component: SigninComponent}
 ];
 
 export const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);
-- 
2.10.2


From 0451a885be90e96cefeb0b5d1cb3fcba168271a3 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 17:55:23 +0300
Subject: [PATCH 47/89] Step 10.12: Added addNewList method

---
 client/imports/main.component.ts | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

diff --git a/client/imports/main.component.ts b/client/imports/main.component.ts
index f2e8eb9..fd56de6 100755
--- a/client/imports/main.component.ts
+++ b/client/imports/main.component.ts
@@ -4,6 +4,8 @@ import {Meteor} from "meteor/meteor";
 import {MeteorObservable} from "meteor-rxjs";
 import {Observable} from "rxjs";
 import {Lists} from "../../imports/api/lists/lists";
+import {insert} from "../../imports/api/lists/methods";
+import {Router} from "@angular/router";
 
 @Component({
   selector: 'app',
@@ -15,7 +17,7 @@ export class MainComponent implements OnInit {
   private userMenuOpen : boolean = false;
   private lists: Observable<any>;
 
-  constructor() {
+  constructor(private router: Router) {
     this.isCordova = Meteor.isCordova;
   }
 
@@ -47,4 +49,15 @@ export class MainComponent implements OnInit {
       return "";
     }
   }
+
+  addNewList() {
+    const listId = insert.call((err) => {
+      if (err) {
+        this.router.navigate(['/']);
+        alert('Could not create list.');
+      }
+    });
+
+    this.router.navigate(['/lists', listId]);
+  }
 }
\ No newline at end of file
-- 
2.10.2


From 2749b8712d541740912d5b6fc9c93d3db0d15239 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 17:55:38 +0300
Subject: [PATCH 48/89] Step 10.13: Added click action to add new list

---
 client/imports/main-component.ng2.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/main-component.ng2.html b/client/imports/main-component.ng2.html
index a59d263..59df7cf 100644
--- a/client/imports/main-component.ng2.html
+++ b/client/imports/main-component.ng2.html
@@ -15,7 +15,7 @@
         </div>
 
         <div class="list-todos">
-            <a class="js-new-list link-list-new">
+            <a class="js-new-list link-list-new" (click)="addNewList()">
                 <span class="icon-plus"></span>
                 New List
             </a>
-- 
2.10.2


From f3ef3b8cab96c46f9d6c311025d0e2208a434472 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 17:55:54 +0300
Subject: [PATCH 49/89] Step 10.14: Changes in the method implementation

---
 imports/api/lists/methods.js | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

diff --git a/imports/api/lists/methods.js b/imports/api/lists/methods.js
index 0a1347f..3758c36 100755
--- a/imports/api/lists/methods.js
+++ b/imports/api/lists/methods.js
@@ -14,7 +14,7 @@ export const insert = new ValidatedMethod({
   name: 'lists.insert',
   validate: new SimpleSchema({}).validator(),
   run() {
-    return Lists.insert({});
+    return Lists.collection.insert({});
   },
 });
 
@@ -27,14 +27,14 @@ export const makePrivate = new ValidatedMethod({
         'Must be logged in to make private lists.');
     }
 
-    const list = Lists.findOne(listId);
+    const list = Lists.collection.findOne(listId);
 
     if (list.isLastPublicList()) {
       throw new Meteor.Error('lists.makePrivate.lastPublicList',
         'Cannot make the last public list private.');
     }
 
-    Lists.update(listId, {
+    Lists.collection.update(listId, {
       $set: { userId: this.userId },
     });
   },
@@ -49,7 +49,7 @@ export const makePublic = new ValidatedMethod({
         'Must be logged in.');
     }
 
-    const list = Lists.findOne(listId);
+    const list = Lists.collection.findOne(listId);
 
     if (!list.editableBy(this.userId)) {
       throw new Meteor.Error('lists.makePublic.accessDenied',
@@ -58,7 +58,7 @@ export const makePublic = new ValidatedMethod({
 
     // XXX the security check above is not atomic, so in theory a race condition could
     // result in exposing private data
-    Lists.update(listId, {
+    Lists.collection.update(listId, {
       $unset: { userId: true },
     });
   },
@@ -71,7 +71,7 @@ export const updateName = new ValidatedMethod({
     newName: { type: String },
   }).validator(),
   run({ listId, newName }) {
-    const list = Lists.findOne(listId);
+    const list = Lists.collection.findOne(listId);
 
     if (!list.editableBy(this.userId)) {
       throw new Meteor.Error('lists.updateName.accessDenied',
@@ -81,7 +81,7 @@ export const updateName = new ValidatedMethod({
     // XXX the security check above is not atomic, so in theory a race condition could
     // result in exposing private data
 
-    Lists.update(listId, {
+    Lists.collection.update(listId, {
       $set: { name: newName },
     });
   },
@@ -91,7 +91,7 @@ export const remove = new ValidatedMethod({
   name: 'lists.remove',
   validate: LIST_ID_ONLY,
   run({ listId }) {
-    const list = Lists.findOne(listId);
+    const list = Lists.collection.findOne(listId);
 
     if (!list.editableBy(this.userId)) {
       throw new Meteor.Error('lists.remove.accessDenied',
@@ -106,7 +106,7 @@ export const remove = new ValidatedMethod({
         'Cannot delete the last public list.');
     }
 
-    Lists.remove(listId);
+    Lists.collection.remove(listId);
   },
 });
 
-- 
2.10.2


From 91f8b0b9e617fb9a90b8c115b390fbcdfbfe8956 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 18:25:40 +0300
Subject: [PATCH 50/89] Step 10.15: Added logout logic

---
 client/imports/main.component.ts | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/client/imports/main.component.ts b/client/imports/main.component.ts
index fd56de6..982d8e8 100755
--- a/client/imports/main.component.ts
+++ b/client/imports/main.component.ts
@@ -60,4 +60,9 @@ export class MainComponent implements OnInit {
 
     this.router.navigate(['/lists', listId]);
   }
+
+  logout() {
+    Meteor.logout();
+    this.router.navigate(['/']);
+  }
 }
\ No newline at end of file
-- 
2.10.2


From 380c960e283ded351e823f01ecbf5c67f4dc8a5e Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 18:25:51 +0300
Subject: [PATCH 51/89] Step 10.16: Added logout event

---
 client/imports/main-component.ng2.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/main-component.ng2.html b/client/imports/main-component.ng2.html
index 59df7cf..ae90256 100644
--- a/client/imports/main-component.ng2.html
+++ b/client/imports/main-component.ng2.html
@@ -7,7 +7,7 @@
 
                 {{ userEmail }}
             </a>
-            <a *ngIf="userMenuOpen" class="js-logout btn-secondary">Logout</a>
+            <a *ngIf="userMenuOpen" class="js-logout btn-secondary" (click)="logout()">Logout</a>
         </div>
         <div *ngIf="!currentUser" class="btns-group">
             <a routerLink="/signin" class="btn-secondary">Sign In</a>
-- 
2.10.2


From 46dfd7a90e7f071482d41d4e56415bed382d42e7 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 18:26:58 +0300
Subject: [PATCH 52/89] Step 10.17: Removed App_body and root_director
 templates

---
 imports/startup/client/routes.js      |   2 -
 imports/ui/layouts/app-body.html      |  75 -------------------
 imports/ui/layouts/app-body.js        | 136 ----------------------------------
 imports/ui/pages/root-redirector.html |   2 -
 imports/ui/pages/root-redirector.js   |  14 ----
 5 files changed, 229 deletions(-)
 delete mode 100755 imports/ui/layouts/app-body.html
 delete mode 100755 imports/ui/layouts/app-body.js
 delete mode 100755 imports/ui/pages/root-redirector.html
 delete mode 100755 imports/ui/pages/root-redirector.js

diff --git a/imports/startup/client/routes.js b/imports/startup/client/routes.js
index 5bebb6e..4213bc4 100755
--- a/imports/startup/client/routes.js
+++ b/imports/startup/client/routes.js
@@ -3,8 +3,6 @@ import { BlazeLayout } from 'meteor/kadira:blaze-layout';
 import { AccountsTemplates } from 'meteor/useraccounts:core';
 
 // Import to load these templates
-import '../../ui/layouts/app-body.js';
-import '../../ui/pages/root-redirector.js';
 import '../../ui/pages/lists-show-page.js';
 import '../../ui/pages/app-not-found.js';
 
diff --git a/imports/ui/layouts/app-body.html b/imports/ui/layouts/app-body.html
deleted file mode 100755
index 96756fe..0000000
--- a/imports/ui/layouts/app-body.html
+++ /dev/null
@@ -1,75 +0,0 @@
-<template name="App_body">
-  {{#HammerTouchArea gestureMap=templateGestures}}
-    <div id="container" class="{{menuOpen}} {{cordova}}">
-      <section id="menu">
-        {{#if currentUser}}
-          <div class="btns-group-vertical">
-            <a href="#" class="js-user-menu btn-secondary">
-              {{#if userMenuOpen}}
-                <span class="icon-arrow-up"></span>
-                {{else}}
-                <span class="icon-arrow-down"></span>
-              {{/if}}
-
-              {{emailLocalPart}}
-            </a>
-            {{#if userMenuOpen}}
-              <a class="js-logout btn-secondary">{{_ 'Logout'}}</a>
-            {{/if}}
-          </div>
-        {{else}}
-          <div class="btns-group">
-            <a href="{{pathFor 'signin'}}" class="btn-secondary">{{_ 'Sign In'}}</a>
-            <a href="{{pathFor 'join'}}" class="btn-secondary">{{_ 'Join'}}</a>
-          </div>
-        {{/if}}
-
-        <div class="list-todos">
-          <a class="js-new-list link-list-new">
-            <span class="icon-plus"></span>
-            {{_ "New List"}}
-          </a>
-
-          {{#each list in lists}}
-            <a href="{{pathFor 'Lists.show' _id=list._id}}" title="{{list.name}}"
-                class="list-todo {{activeListClass list}}">
-              {{#if list.userId}}
-                <span class="icon-lock"></span>
-              {{/if}}
-
-              {{#if list.incompleteCount}}
-                <span class="count-list">{{list.incompleteCount}}</span>
-              {{/if}}
-
-              {{list.name}}
-            </a>
-          {{/each}}
-        </div>
-      </section>
-
-      {{#unless connected}}
-        <div class="notifications">
-          <div class="notification">
-            <span class="icon-sync"></span>
-            <div class="meta">
-              <div class="title-notification">Trying to connect</div>
-              <div class="description">There seems to be a connection issue</div>
-            </div>
-          </div>
-        </div>
-      {{/unless}}
-
-      <div class="content-overlay"></div>
-
-      <div id="content-container">
-        {{#momentum plugin="fade"}}
-          {{#if Template.subscriptionsReady}}
-            {{> Template.dynamic template=main}}
-          {{else}}
-            {{> App_loading}}
-          {{/if}}
-        {{/momentum}}
-      </div>
-    </div>
-  {{/HammerTouchArea}}
-</template>
diff --git a/imports/ui/layouts/app-body.js b/imports/ui/layouts/app-body.js
deleted file mode 100755
index f90a3a3..0000000
--- a/imports/ui/layouts/app-body.js
+++ /dev/null
@@ -1,136 +0,0 @@
-import './app-body.html';
-
-import { Meteor } from 'meteor/meteor';
-import { ReactiveVar } from 'meteor/reactive-var';
-import { ReactiveDict } from 'meteor/reactive-dict';
-import { Lists } from '../../api/lists/lists.js';
-import { Template } from 'meteor/templating';
-import { ActiveRoute } from 'meteor/zimme:active-route';
-import { FlowRouter } from 'meteor/kadira:flow-router';
-import { TAPi18n } from 'meteor/tap:i18n';
-
-import { insert } from '../../api/lists/methods.js';
-
-import '../components/loading.js';
-
-const CONNECTION_ISSUE_TIMEOUT = 5000;
-
-// A store which is local to this file?
-const showConnectionIssue = new ReactiveVar(false);
-
-Meteor.startup(() => {
-  // Only show the connection error box if it has been 5 seconds since
-  // the app started
-  setTimeout(() => {
-    // FIXME:
-    // Launch screen handle created in lib/router.js
-    // dataReadyHold.release();
-
-    // Show the connection error box
-    showConnectionIssue.set(true);
-  }, CONNECTION_ISSUE_TIMEOUT);
-});
-
-Template.App_body.onCreated(function appBodyOnCreated() {
-  this.subscribe('lists.public');
-  this.subscribe('lists.private');
-
-  this.state = new ReactiveDict();
-  this.state.setDefault({
-    menuOpen: false,
-    userMenuOpen: false,
-  });
-});
-
-Template.App_body.helpers({
-  menuOpen() {
-    const instance = Template.instance();
-    return instance.state.get('menuOpen') && 'menu-open';
-  },
-  cordova() {
-    return Meteor.isCordova && 'cordova';
-  },
-  emailLocalPart() {
-    const email = Meteor.user().emails[0].address;
-    return email.substring(0, email.indexOf('@'));
-  },
-  userMenuOpen() {
-    const instance = Template.instance();
-    return instance.state.get('userMenuOpen');
-  },
-  lists() {
-    return Lists.find({ $or: [
-      { userId: { $exists: false } },
-      { userId: Meteor.userId() },
-    ] });
-  },
-  activeListClass(list) {
-    const active = ActiveRoute.name('Lists.show')
-      && FlowRouter.getParam('_id') === list._id;
-
-    return active && 'active';
-  },
-  connected() {
-    if (showConnectionIssue.get()) {
-      return Meteor.status().connected;
-    }
-
-    return true;
-  },
-  templateGestures: {
-    'swipeleft .cordova'(event, instance) {
-      instance.state.set('menuOpen', false);
-    },
-    'swiperight .cordova'(event, instance) {
-      instance.state.set('menuOpen', true);
-    },
-  },
-});
-
-Template.App_body.events({
-  'click .js-menu'(event, instance) {
-    instance.state.set('menuOpen', !instance.state.get('menuOpen'));
-  },
-
-  'click .content-overlay'(event, instance) {
-    instance.state.set('menuOpen', false);
-    event.preventDefault();
-  },
-
-  'click .js-user-menu'(event, instance) {
-    instance.state.set('userMenuOpen', !instance.state.get('userMenuOpen'));
-    // stop the menu from closing
-    event.stopImmediatePropagation();
-  },
-
-  'click #menu a'(event, instance) {
-    instance.state.set('menuOpen', false);
-  },
-
-  'click .js-logout'() {
-    Meteor.logout();
-
-    // if we are on a private list, we'll need to go to a public one
-    if (ActiveRoute.name('Lists.show')) {
-      // TODO -- test this code path
-      const list = Lists.findOne(FlowRouter.getParam('_id'));
-      if (list.userId) {
-        FlowRouter.go('Lists.show', Lists.findOne({ userId: { $exists: false } }));
-      }
-    }
-  },
-
-  'click .js-new-list'() {
-    const listId = insert.call((err) => {
-      if (err) {
-        // At this point, we have already redirected to the new list page, but
-        // for some reason the list didn't get created. This should almost never
-        // happen, but it's good to handle it anyway.
-        FlowRouter.go('App.home');
-        alert(TAPi18n.__('Could not create list.')); // eslint-disable-line no-alert
-      }
-    });
-
-    FlowRouter.go('Lists.show', { _id: listId });
-  },
-});
diff --git a/imports/ui/pages/root-redirector.html b/imports/ui/pages/root-redirector.html
deleted file mode 100755
index f4911b9..0000000
--- a/imports/ui/pages/root-redirector.html
+++ /dev/null
@@ -1,2 +0,0 @@
-<template name="app_rootRedirector">
-</template>
\ No newline at end of file
diff --git a/imports/ui/pages/root-redirector.js b/imports/ui/pages/root-redirector.js
deleted file mode 100755
index 5cb98d9..0000000
--- a/imports/ui/pages/root-redirector.js
+++ /dev/null
@@ -1,14 +0,0 @@
-import { Meteor } from 'meteor/meteor';
-import { Template } from 'meteor/templating';
-import { FlowRouter } from 'meteor/kadira:flow-router';
-import { Lists } from '../../api/lists/lists.js';
-
-import './root-redirector.html';
-
-Template.app_rootRedirector.onCreated(() => {
-  // We need to set a timeout here so that we don't redirect from inside a redirection
-  //   which is a no-no in FR.
-  Meteor.defer(() => {
-    FlowRouter.go('Lists.show', Lists.findOne());
-  });
-});
-- 
2.10.2


From 1995ebea9cf44cc1f083bf8420790e50c161d69b Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@Dotans-MacBook-Pro.local>
Date: Tue, 22 Nov 2016 14:01:15 +0200
Subject: [PATCH 53/89] Step 10: Migrate Template into Component

---
 manuals/templates/step10.md | 114 ++++++++
 manuals/views/step10.md     | 681 ++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 795 insertions(+)
 create mode 100644 manuals/templates/step10.md
 create mode 100644 manuals/views/step10.md

diff --git a/manuals/templates/step10.md b/manuals/templates/step10.md
new file mode 100644
index 0000000..d882143
--- /dev/null
+++ b/manuals/templates/step10.md
@@ -0,0 +1,114 @@
+So far we have Angular 2 application with Angular 2 Router, that wraps existing Blaze application and load it's Templates.
+
+Our next step is about converting Blaze existing Template into Angular 2 Component.
+
+In order to to so, we need to work top-down - because we can load Blaze existing Template from Angular 2 code.
+
+So at the moment, the top most Blaze Template that loaded is the `App_Body` which contains the following:
+
+- Full layout
+- Dynamic load of child Blaze Templates
+- List of To-do lists
+- Other UI features such as login, sign-up and more
+
+So let's start with the migration - our goal now is to migrate the `App_Body` so we can remove the Blaze files in the end of this step.
+
+The replacement of this component as the main component will be our `MainComponent`.
+
+Let's start with the HTML template - we will create a new file named `client/imports/components/main-component.ng2.html` and copy the contents of the `App_Body` template from the file (`imports/ui/layouts/app-body.html`).
+
+Now let's start to make some modifications to make that file a valid Angular 2 template - we need to remove all the Blaze UI bindings, if, each and such.
+
+We will replace them as follow:
+
+- Blaze if/else - will become `ngIf`.
+- Blaze each - will become `ngFor`.
+- Blaze classes bindings will become `ngClass`.
+- Dynamic load of Blaze Template will become `router-outlet`.
+
+> We will also remove all the router dynamic links, and put a placeholder for them at the moment - we will take care of them later.
+
+{{{diff_step 10.1}}} 
+
+> Note that unlike Blaze, in Angular 2 we define events such click in the HTML - we will handle that later.
+
+So now we have the HTML template - we need to add some code to the Angular 2 Component:
+
+- We need to use the new template.
+- We need to add stubs for the methods we use in the template (`isConnected`, getter for `userEmail`)
+
+So let's do it:
+
+{{{diff_step 10.2}}} 
+
+> We also commented the code that in charge of redirection to a list page, we will handle that later.
+
+Now, because we are implementing a replacement for App_body, we need to load the inner Template instead of the App_Body, so let's change it:
+
+{{{diff_step 10.3}}} 
+
+Now, we need to provide the `lists` object to the view - this will be that lists of Todo lists.
+
+We will use MeteorObservable again, and create the `lists` as an Observable of the data in the Cursor (we will change the implementation of the Collection soon to support RxJS).
+
+> Because our MongoDB selector is depend on the use connection, and we want to update it when the user log in/out, we need to wrap our query with `Tracker.autorun`.
+
+{{{diff_step 10.4}}} 
+
+> We used the `zone()` method in order to bind the async data fetch to the Angular 2 Zone of the current Component - so when the data changes - the Zone will trigger an update - and the view will update.
+
+Now we need to change the `Mongo.Collection` creation in order to have a Collection with RxJS API - there are multiple ways of doing it - in this case, we just wrap the existing Collection:
+
+{{{diff_step 10.5}}} 
+
+> You can use the `collection` property of the instance in order to get the actual `Mongo.Collection` that wrapped.
+
+Now let's implement the stub methods we created earlier, starting with `isConnected`:
+
+{{{diff_step 10.6}}} 
+
+And the getter `userEmail`:
+
+{{{diff_step 10.7}}} 
+
+Now let's keep implementing the missing logic in our `MainComponent` - starting with the router links and the active route indication:
+
+{{{diff_step 10.8}}} 
+
+We used a new Routes that not yet implemented - signin and join - so let's create stubs for them:
+
+{{{diff_step 10.9}}} 
+
+And let's add them to the NgModule declaration:
+
+{{{diff_step 10.10}}} 
+
+And let's add the routes to the Router definition:
+
+{{{diff_step 10.11}}} 
+
+Let's implement `addNewList` action in our Component, which uses the existing logic from the old Blaze code:
+
+{{{diff_step 10.12}}} 
+
+And let's bind the action in the view:
+
+{{{diff_step 10.13}}} 
+
+We need to make some changes in the implementation of the `methods.js` file, because we wrapped the collection with RxJS collection, so let's change the usage to use the actual Mongo.Collection object:
+
+{{{diff_step 10.14}}} 
+
+Let's implement `logout` method:
+
+{{{diff_step 10.15}}} 
+
+And bind the click event to the method:
+
+{{{diff_step 10.16}}} 
+
+> The only missing thing at the moment is the `currentUser` field in this Component - we will add it in the next step.
+
+Now we can remove the old Blaze Templates from the project (commit #6.17).
+
+So at the moment, we have fully migrated Blaze Template and all the application features works as before!
diff --git a/manuals/views/step10.md b/manuals/views/step10.md
new file mode 100644
index 0000000..5720182
--- /dev/null
+++ b/manuals/views/step10.md
@@ -0,0 +1,681 @@
+[{]: <region> (header)
+# Step 10: Migrate Template into Component
+[}]: #
+[{]: <region> (body)
+So far we have Angular 2 application with Angular 2 Router, that wraps existing Blaze application and load it's Templates.
+
+Our next step is about converting Blaze existing Template into Angular 2 Component.
+
+In order to to so, we need to work top-down - because we can load Blaze existing Template from Angular 2 code.
+
+So at the moment, the top most Blaze Template that loaded is the `App_Body` which contains the following:
+
+- Full layout
+- Dynamic load of child Blaze Templates
+- List of To-do lists
+- Other UI features such as login, sign-up and more
+
+So let's start with the migration - our goal now is to migrate the `App_Body` so we can remove the Blaze files in the end of this step.
+
+The replacement of this component as the main component will be our `MainComponent`.
+
+Let's start with the HTML template - we will create a new file named `client/imports/components/main-component.ng2.html` and copy the contents of the `App_Body` template from the file (`imports/ui/layouts/app-body.html`).
+
+Now let's start to make some modifications to make that file a valid Angular 2 template - we need to remove all the Blaze UI bindings, if, each and such.
+
+We will replace them as follow:
+
+- Blaze if/else - will become `ngIf`.
+- Blaze each - will become `ngFor`.
+- Blaze classes bindings will become `ngClass`.
+- Dynamic load of Blaze Template will become `router-outlet`.
+
+> We will also remove all the router dynamic links, and put a placeholder for them at the moment - we will take care of them later.
+
+[{]: <helper> (diff_step 10.1)
+#### Step 10.1: Migrate the App_body template
+
+##### Added client/imports/main-component.ng2.html
+```diff
+@@ -0,0 +1,47 @@
++┊  ┊ 1┊<div id="container" [ngClass]="{'menu-open': menuOpen, 'cordova': isCordova}">
++┊  ┊ 2┊    <section id="menu">
++┊  ┊ 3┊        <div *ngIf="currentUser" class="btns-group-vertical">
++┊  ┊ 4┊            <a href="#" class="js-user-menu btn-secondary">
++┊  ┊ 5┊                <span *ngIf="userMenuOpen" class="icon-arrow-up"></span>
++┊  ┊ 6┊                <span *ngIf="!userMenuOpen" class="icon-arrow-down"></span>
++┊  ┊ 7┊
++┊  ┊ 8┊                {{ userEmail }}
++┊  ┊ 9┊            </a>
++┊  ┊10┊            <a *ngIf="userMenuOpen" class="js-logout btn-secondary">Logout</a>
++┊  ┊11┊        </div>
++┊  ┊12┊        <div *ngIf="!currentUser" class="btns-group">
++┊  ┊13┊            <a href="SIGNIN_LINK" class="btn-secondary">Sign In</a>
++┊  ┊14┊            <a href="JOIN_LINK" class="btn-secondary">Join</a>
++┊  ┊15┊        </div>
++┊  ┊16┊
++┊  ┊17┊        <div class="list-todos">
++┊  ┊18┊            <a class="js-new-list link-list-new">
++┊  ┊19┊                <span class="icon-plus"></span>
++┊  ┊20┊                New List
++┊  ┊21┊            </a>
++┊  ┊22┊
++┊  ┊23┊            <a *ngFor="let list of lists | async" href="LIST_LINK" [title]="list.name" class="list-todo">
++┊  ┊24┊                <span *ngIf="list.userId" class="icon-lock"></span>
++┊  ┊25┊                <span *ngIf="list.incompleteCount" class="count-list">{{list.incompleteCount}}</span>
++┊  ┊26┊
++┊  ┊27┊                {{list.name}}
++┊  ┊28┊            </a>
++┊  ┊29┊        </div>
++┊  ┊30┊    </section>
++┊  ┊31┊
++┊  ┊32┊    <div *ngIf="!isConnected()" class="notifications">
++┊  ┊33┊        <div class="notification">
++┊  ┊34┊            <span class="icon-sync"></span>
++┊  ┊35┊            <div class="meta">
++┊  ┊36┊                <div class="title-notification">Trying to connect</div>
++┊  ┊37┊                <div class="description">There seems to be a connection issue</div>
++┊  ┊38┊            </div>
++┊  ┊39┊        </div>
++┊  ┊40┊    </div>
++┊  ┊41┊
++┊  ┊42┊    <div class="content-overlay"></div>
++┊  ┊43┊
++┊  ┊44┊    <div id="content-container">
++┊  ┊45┊        <router-outlet></router-outlet>
++┊  ┊46┊    </div>
++┊  ┊47┊</div>🚫↵
+```
+[}]: # 
+
+> Note that unlike Blaze, in Angular 2 we define events such click in the HTML - we will handle that later.
+
+So now we have the HTML template - we need to add some code to the Angular 2 Component:
+
+- We need to use the new template.
+- We need to add stubs for the methods we use in the template (`isConnected`, getter for `userEmail`)
+
+So let's do it:
+
+[{]: <helper> (diff_step 10.2)
+#### Step 10.2: Use the new template and added stub methods
+
+##### Changed client/imports/main.component.ts
+```diff
+@@ -1,18 +1,31 @@
+ ┊ 1┊ 1┊import '/imports/startup/client';
+ ┊ 2┊ 2┊import {Component, OnInit} from "@angular/core";
+ ┊ 3┊ 3┊import {MeteorObservable} from "meteor-rxjs";
++┊  ┊ 4┊import {Meteor} from "meteor/meteor";
+ ┊ 4┊ 5┊
+ ┊ 5┊ 6┊@Component({
+ ┊ 6┊ 7┊  selector: 'app',
+-┊ 7┊  ┊  template: '<router-outlet></router-outlet>'
++┊  ┊ 8┊  templateUrl: '/client/imports/main-component.html'
+ ┊ 8┊ 9┊})
+ ┊ 9┊10┊export class MainComponent implements OnInit {
+-┊10┊  ┊  constructor() {
++┊  ┊11┊  private isCordova : boolean;
++┊  ┊12┊  private menuOpen : boolean = false;
++┊  ┊13┊  private userMenuOpen : boolean = false;
+ ┊11┊14┊
++┊  ┊15┊  constructor() {
++┊  ┊16┊    this.isCordova = Meteor.isCordova;
+ ┊12┊17┊  }
+ ┊13┊18┊
+ ┊14┊19┊  ngOnInit() {
+ ┊15┊20┊    MeteorObservable.subscribe("lists.public").subscribe();
+ ┊16┊21┊    MeteorObservable.subscribe("lists.private").subscribe();
+ ┊17┊22┊  }
++┊  ┊23┊
++┊  ┊24┊  isConnected() {
++┊  ┊25┊    return true;
++┊  ┊26┊  }
++┊  ┊27┊
++┊  ┊28┊  get userEmail() {
++┊  ┊29┊    return "";
++┊  ┊30┊  }
+ ┊18┊31┊}🚫↵
+```
+[}]: # 
+
+> We also commented the code that in charge of redirection to a list page, we will handle that later.
+
+Now, because we are implementing a replacement for App_body, we need to load the inner Template instead of the App_Body, so let's change it:
+
+[{]: <helper> (diff_step 10.3)
+#### Step 10.3: Change the blaze template type that loaded
+
+##### Changed client/imports/components/list-show.component.ts
+```diff
+@@ -2,7 +2,7 @@
+ ┊2┊2┊import {ActivatedRoute, Params} from "@angular/router";
+ ┊3┊3┊
+ ┊4┊4┊@Component({
+-┊5┊ ┊    template: '<blaze-template *ngIf="templateContext" name="App_body" [context]="templateContext"></blaze-template>'
++┊ ┊5┊    template: '<blaze-template *ngIf="templateContext" name="Lists_show_page" [context]="templateContext"></blaze-template>'
+ ┊6┊6┊})
+ ┊7┊7┊export class ListShowComponent implements OnInit {
+ ┊8┊8┊    private templateContext: any;
+```
+```diff
+@@ -16,7 +16,6 @@
+ ┊16┊16┊            const listId = params['_id'];
+ ┊17┊17┊
+ ┊18┊18┊            this.templateContext = {
+-┊19┊  ┊                main: "Lists_show_page",
+ ┊20┊19┊                _id: listId
+ ┊21┊20┊            };
+ ┊22┊21┊        });
+```
+[}]: # 
+
+Now, we need to provide the `lists` object to the view - this will be that lists of Todo lists.
+
+We will use MeteorObservable again, and create the `lists` as an Observable of the data in the Cursor (we will change the implementation of the Collection soon to support RxJS).
+
+> Because our MongoDB selector is depend on the use connection, and we want to update it when the user log in/out, we need to wrap our query with `Tracker.autorun`.
+
+[{]: <helper> (diff_step 10.4)
+#### Step 10.4: Added the list using MeteorObservable
+
+##### Changed client/imports/main.component.ts
+```diff
+@@ -1,7 +1,9 @@
+ ┊1┊1┊import '/imports/startup/client';
+ ┊2┊2┊import {Component, OnInit} from "@angular/core";
+-┊3┊ ┊import {MeteorObservable} from "meteor-rxjs";
+ ┊4┊3┊import {Meteor} from "meteor/meteor";
++┊ ┊4┊import {MeteorObservable} from "meteor-rxjs";
++┊ ┊5┊import {Observable} from "rxjs";
++┊ ┊6┊import {Lists} from "../../imports/api/lists/lists";
+ ┊5┊7┊
+ ┊6┊8┊@Component({
+ ┊7┊9┊  selector: 'app',
+```
+```diff
+@@ -11,6 +13,7 @@
+ ┊11┊13┊  private isCordova : boolean;
+ ┊12┊14┊  private menuOpen : boolean = false;
+ ┊13┊15┊  private userMenuOpen : boolean = false;
++┊  ┊16┊  private lists: Observable<any>;
+ ┊14┊17┊
+ ┊15┊18┊  constructor() {
+ ┊16┊19┊    this.isCordova = Meteor.isCordova;
+```
+```diff
+@@ -19,6 +22,15 @@
+ ┊19┊22┊  ngOnInit() {
+ ┊20┊23┊    MeteorObservable.subscribe("lists.public").subscribe();
+ ┊21┊24┊    MeteorObservable.subscribe("lists.private").subscribe();
++┊  ┊25┊
++┊  ┊26┊    MeteorObservable.autorun().zone().subscribe(() => {
++┊  ┊27┊      this.lists = Lists.find({
++┊  ┊28┊        $or: [
++┊  ┊29┊          {userId: {$exists: false}},
++┊  ┊30┊          {userId: Meteor.userId()},
++┊  ┊31┊        ]
++┊  ┊32┊      }).zone();
++┊  ┊33┊    });
+ ┊22┊34┊  }
+ ┊23┊35┊
+ ┊24┊36┊  isConnected() {
+```
+[}]: # 
+
+> We used the `zone()` method in order to bind the async data fetch to the Angular 2 Zone of the current Component - so when the data changes - the Zone will trigger an update - and the view will update.
+
+Now we need to change the `Mongo.Collection` creation in order to have a Collection with RxJS API - there are multiple ways of doing it - in this case, we just wrap the existing Collection:
+
+[{]: <helper> (diff_step 10.5)
+#### Step 10.5: Changes in the lists collection definition to expose RxJS API
+
+##### Changed imports/api/lists/lists.js
+```diff
+@@ -1,7 +1,6 @@
+-┊1┊ ┊import { Mongo } from 'meteor/mongo';
+ ┊2┊1┊import { SimpleSchema } from 'meteor/aldeed:simple-schema';
+-┊3┊ ┊import { Factory } from 'meteor/factory';
+ ┊4┊2┊import { Todos } from '../todos/todos.js';
++┊ ┊3┊import {MongoObservable} from "meteor-rxjs";
+ ┊5┊4┊
+ ┊6┊5┊class ListsCollection extends Mongo.Collection {
+ ┊7┊6┊  insert(list, callback) {
+```
+```diff
+@@ -25,35 +24,33 @@
+ ┊25┊24┊  }
+ ┊26┊25┊}
+ ┊27┊26┊
+-┊28┊  ┊export const Lists = new ListsCollection('Lists');
++┊  ┊27┊export const Lists = new MongoObservable.fromExisting(new ListsCollection("Lists"));
+ ┊29┊28┊
+ ┊30┊29┊// Deny all client-side updates since we will be using methods to manage this collection
+-┊31┊  ┊Lists.deny({
++┊  ┊30┊Lists.collection.deny({
+ ┊32┊31┊  insert() { return true; },
+ ┊33┊32┊  update() { return true; },
+ ┊34┊33┊  remove() { return true; },
+ ┊35┊34┊});
+ ┊36┊35┊
+-┊37┊  ┊Lists.schema = new SimpleSchema({
++┊  ┊36┊let schema = new SimpleSchema({
+ ┊38┊37┊  name: { type: String },
+ ┊39┊38┊  incompleteCount: { type: Number, defaultValue: 0 },
+ ┊40┊39┊  userId: { type: String, regEx: SimpleSchema.RegEx.Id, optional: true },
+ ┊41┊40┊});
+ ┊42┊41┊
+-┊43┊  ┊Lists.attachSchema(Lists.schema);
++┊  ┊42┊Lists.collection.attachSchema(schema);
+ ┊44┊43┊
+ ┊45┊44┊// This represents the keys from Lists objects that should be published
+ ┊46┊45┊// to the client. If we add secret properties to List objects, don't list
+ ┊47┊46┊// them here to keep them private to the server.
+-┊48┊  ┊Lists.publicFields = {
++┊  ┊47┊Lists.collection.publicFields = {
+ ┊49┊48┊  name: 1,
+ ┊50┊49┊  incompleteCount: 1,
+ ┊51┊50┊  userId: 1,
+ ┊52┊51┊};
+ ┊53┊52┊
+-┊54┊  ┊Factory.define('list', Lists, {});
+-┊55┊  ┊
+-┊56┊  ┊Lists.helpers({
++┊  ┊53┊Lists.collection.helpers({
+ ┊57┊54┊  // A list is considered to be private if it has a userId set
+ ┊58┊55┊  isPrivate() {
+ ┊59┊56┊    return !!this.userId;
+```
+```diff
+@@ -73,3 +70,4 @@
+ ┊73┊70┊    return Todos.find({ listId: this._id }, { sort: { createdAt: -1 } });
+ ┊74┊71┊  },
+ ┊75┊72┊});
++┊  ┊73┊
+```
+[}]: # 
+
+> You can use the `collection` property of the instance in order to get the actual `Mongo.Collection` that wrapped.
+
+Now let's implement the stub methods we created earlier, starting with `isConnected`:
+
+[{]: <helper> (diff_step 10.6)
+#### Step 10.6: Implemented isConnected
+
+##### Changed client/imports/main.component.ts
+```diff
+@@ -34,7 +34,7 @@
+ ┊34┊34┊  }
+ ┊35┊35┊
+ ┊36┊36┊  isConnected() {
+-┊37┊  ┊    return true;
++┊  ┊37┊    return Meteor.status().connected;
+ ┊38┊38┊  }
+ ┊39┊39┊
+ ┊40┊40┊  get userEmail() {
+```
+[}]: # 
+
+And the getter `userEmail`:
+
+[{]: <helper> (diff_step 10.7)
+#### Step 10.7: Implemented emailLocalPart
+
+##### Changed client/imports/main.component.ts
+```diff
+@@ -38,6 +38,13 @@
+ ┊38┊38┊  }
+ ┊39┊39┊
+ ┊40┊40┊  get userEmail() {
+-┊41┊  ┊    return "";
++┊  ┊41┊    if (Meteor.user()) {
++┊  ┊42┊      const email = Meteor.user().emails[0].address;
++┊  ┊43┊
++┊  ┊44┊      return email.substring(0, email.indexOf('@'));
++┊  ┊45┊    }
++┊  ┊46┊    else {
++┊  ┊47┊      return "";
++┊  ┊48┊    }
+ ┊42┊49┊  }
+ ┊43┊50┊}🚫↵
+```
+[}]: # 
+
+Now let's keep implementing the missing logic in our `MainComponent` - starting with the router links and the active route indication:
+
+[{]: <helper> (diff_step 10.8)
+#### Step 10.8: Added router links and the active lists indication
+
+##### Changed client/imports/main-component.ng2.html
+```diff
+@@ -10,8 +10,8 @@
+ ┊10┊10┊            <a *ngIf="userMenuOpen" class="js-logout btn-secondary">Logout</a>
+ ┊11┊11┊        </div>
+ ┊12┊12┊        <div *ngIf="!currentUser" class="btns-group">
+-┊13┊  ┊            <a href="SIGNIN_LINK" class="btn-secondary">Sign In</a>
+-┊14┊  ┊            <a href="JOIN_LINK" class="btn-secondary">Join</a>
++┊  ┊13┊            <a routerLink="/signin" class="btn-secondary">Sign In</a>
++┊  ┊14┊            <a routerLink="/join" class="btn-secondary">Join</a>
+ ┊15┊15┊        </div>
+ ┊16┊16┊
+ ┊17┊17┊        <div class="list-todos">
+```
+```diff
+@@ -20,7 +20,7 @@
+ ┊20┊20┊                New List
+ ┊21┊21┊            </a>
+ ┊22┊22┊
+-┊23┊  ┊            <a *ngFor="let list of lists | async" href="LIST_LINK" [title]="list.name" class="list-todo">
++┊  ┊23┊            <a *ngFor="let list of lists | async" [routerLink]="['lists', list._id]" routerLinkActive="active" [title]="list.name" class="list-todo">
+ ┊24┊24┊                <span *ngIf="list.userId" class="icon-lock"></span>
+ ┊25┊25┊                <span *ngIf="list.incompleteCount" class="count-list">{{list.incompleteCount}}</span>
+```
+[}]: # 
+
+We used a new Routes that not yet implemented - signin and join - so let's create stubs for them:
+
+[{]: <helper> (diff_step 10.9)
+#### Step 10.9: Added stubs for signin/join components
+
+##### Added client/imports/components/join.component.ts
+```diff
+@@ -0,0 +1,7 @@
++┊ ┊1┊import {Component} from "@angular/core";
++┊ ┊2┊
++┊ ┊3┊@Component({
++┊ ┊4┊  template: 'Join!'
++┊ ┊5┊})
++┊ ┊6┊export class JoinComponent {
++┊ ┊7┊}🚫↵
+```
+
+##### Added client/imports/components/signin.component.ts
+```diff
+@@ -0,0 +1,7 @@
++┊ ┊1┊import {Component} from "@angular/core";
++┊ ┊2┊
++┊ ┊3┊@Component({
++┊ ┊4┊  template: 'Signin!'
++┊ ┊5┊})
++┊ ┊6┊export class SigninComponent {
++┊ ┊7┊}🚫↵
+```
+[}]: # 
+
+And let's add them to the NgModule declaration:
+
+[{]: <helper> (diff_step 10.10)
+#### Step 10.10: Added join/signin component to the module declaration
+
+##### Changed client/imports/app.module.ts
+```diff
+@@ -5,13 +5,17 @@
+ ┊ 5┊ 5┊import {ListShowComponent} from "./components/list-show.component";
+ ┊ 6┊ 6┊import {ListRedirectorComponent} from "./components/list-redirector.component";
+ ┊ 7┊ 7┊import {Angular2BlazeTemplateModule} from "angular2-blaze-template";
++┊  ┊ 8┊import {JoinComponent} from "./components/join.component";
++┊  ┊ 9┊import {SigninComponent} from "./components/signin.component";
+ ┊ 8┊10┊
+ ┊ 9┊11┊@NgModule({
+ ┊10┊12┊    // Components, Pipes, Directive
+ ┊11┊13┊    declarations: [
+ ┊12┊14┊        MainComponent,
+ ┊13┊15┊        ListShowComponent,
+-┊14┊  ┊        ListRedirectorComponent
++┊  ┊16┊        ListRedirectorComponent,
++┊  ┊17┊        JoinComponent,
++┊  ┊18┊        SigninComponent
+ ┊15┊19┊    ],
+ ┊16┊20┊    // Entry Components
+ ┊17┊21┊    entryComponents: [
+```
+[}]: # 
+
+And let's add the routes to the Router definition:
+
+[{]: <helper> (diff_step 10.11)
+#### Step 10.11: Added join/signin component to the router
+
+##### Changed client/imports/app.routes.ts
+```diff
+@@ -2,10 +2,14 @@
+ ┊ 2┊ 2┊import {Routes, RouterModule} from '@angular/router';
+ ┊ 3┊ 3┊import {ListShowComponent} from "./components/list-show.component";
+ ┊ 4┊ 4┊import {ListRedirectorComponent} from "./components/list-redirector.component";
++┊  ┊ 5┊import {JoinComponent} from "./components/join.component";
++┊  ┊ 6┊import {SigninComponent} from "./components/signin.component";
+ ┊ 5┊ 7┊
+ ┊ 6┊ 8┊const appRoutes: Routes = [
+ ┊ 7┊ 9┊    {path: '', component: ListRedirectorComponent},
+-┊ 8┊  ┊    {path: 'lists/:_id', component: ListShowComponent}
++┊  ┊10┊    {path: 'lists/:_id', component: ListShowComponent},
++┊  ┊11┊    {path: 'join', component: JoinComponent},
++┊  ┊12┊    {path: 'signin', component: SigninComponent}
+ ┊ 9┊13┊];
+ ┊10┊14┊
+ ┊11┊15┊export const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);
+```
+[}]: # 
+
+Let's implement `addNewList` action in our Component, which uses the existing logic from the old Blaze code:
+
+[{]: <helper> (diff_step 10.12)
+#### Step 10.12: Added addNewList method
+
+##### Changed client/imports/main.component.ts
+```diff
+@@ -4,6 +4,8 @@
+ ┊ 4┊ 4┊import {MeteorObservable} from "meteor-rxjs";
+ ┊ 5┊ 5┊import {Observable} from "rxjs";
+ ┊ 6┊ 6┊import {Lists} from "../../imports/api/lists/lists";
++┊  ┊ 7┊import {insert} from "../../imports/api/lists/methods";
++┊  ┊ 8┊import {Router} from "@angular/router";
+ ┊ 7┊ 9┊
+ ┊ 8┊10┊@Component({
+ ┊ 9┊11┊  selector: 'app',
+```
+```diff
+@@ -15,7 +17,7 @@
+ ┊15┊17┊  private userMenuOpen : boolean = false;
+ ┊16┊18┊  private lists: Observable<any>;
+ ┊17┊19┊
+-┊18┊  ┊  constructor() {
++┊  ┊20┊  constructor(private router: Router) {
+ ┊19┊21┊    this.isCordova = Meteor.isCordova;
+ ┊20┊22┊  }
+ ┊21┊23┊
+```
+```diff
+@@ -47,4 +49,15 @@
+ ┊47┊49┊      return "";
+ ┊48┊50┊    }
+ ┊49┊51┊  }
++┊  ┊52┊
++┊  ┊53┊  addNewList() {
++┊  ┊54┊    const listId = insert.call((err) => {
++┊  ┊55┊      if (err) {
++┊  ┊56┊        this.router.navigate(['/']);
++┊  ┊57┊        alert('Could not create list.');
++┊  ┊58┊      }
++┊  ┊59┊    });
++┊  ┊60┊
++┊  ┊61┊    this.router.navigate(['/lists', listId]);
++┊  ┊62┊  }
+ ┊50┊63┊}🚫↵
+```
+[}]: # 
+
+And let's bind the action in the view:
+
+[{]: <helper> (diff_step 10.13)
+#### Step 10.13: Added click action to add new list
+
+##### Changed client/imports/main-component.ng2.html
+```diff
+@@ -15,7 +15,7 @@
+ ┊15┊15┊        </div>
+ ┊16┊16┊
+ ┊17┊17┊        <div class="list-todos">
+-┊18┊  ┊            <a class="js-new-list link-list-new">
++┊  ┊18┊            <a class="js-new-list link-list-new" (click)="addNewList()">
+ ┊19┊19┊                <span class="icon-plus"></span>
+ ┊20┊20┊                New List
+ ┊21┊21┊            </a>
+```
+[}]: # 
+
+We need to make some changes in the implementation of the `methods.js` file, because we wrapped the collection with RxJS collection, so let's change the usage to use the actual Mongo.Collection object:
+
+[{]: <helper> (diff_step 10.14)
+#### Step 10.14: Changes in the method implementation
+
+##### Changed imports/api/lists/methods.js
+```diff
+@@ -14,7 +14,7 @@
+ ┊14┊14┊  name: 'lists.insert',
+ ┊15┊15┊  validate: new SimpleSchema({}).validator(),
+ ┊16┊16┊  run() {
+-┊17┊  ┊    return Lists.insert({});
++┊  ┊17┊    return Lists.collection.insert({});
+ ┊18┊18┊  },
+ ┊19┊19┊});
+ ┊20┊20┊
+```
+```diff
+@@ -27,14 +27,14 @@
+ ┊27┊27┊        'Must be logged in to make private lists.');
+ ┊28┊28┊    }
+ ┊29┊29┊
+-┊30┊  ┊    const list = Lists.findOne(listId);
++┊  ┊30┊    const list = Lists.collection.findOne(listId);
+ ┊31┊31┊
+ ┊32┊32┊    if (list.isLastPublicList()) {
+ ┊33┊33┊      throw new Meteor.Error('lists.makePrivate.lastPublicList',
+ ┊34┊34┊        'Cannot make the last public list private.');
+ ┊35┊35┊    }
+ ┊36┊36┊
+-┊37┊  ┊    Lists.update(listId, {
++┊  ┊37┊    Lists.collection.update(listId, {
+ ┊38┊38┊      $set: { userId: this.userId },
+ ┊39┊39┊    });
+ ┊40┊40┊  },
+```
+```diff
+@@ -49,7 +49,7 @@
+ ┊49┊49┊        'Must be logged in.');
+ ┊50┊50┊    }
+ ┊51┊51┊
+-┊52┊  ┊    const list = Lists.findOne(listId);
++┊  ┊52┊    const list = Lists.collection.findOne(listId);
+ ┊53┊53┊
+ ┊54┊54┊    if (!list.editableBy(this.userId)) {
+ ┊55┊55┊      throw new Meteor.Error('lists.makePublic.accessDenied',
+```
+```diff
+@@ -58,7 +58,7 @@
+ ┊58┊58┊
+ ┊59┊59┊    // XXX the security check above is not atomic, so in theory a race condition could
+ ┊60┊60┊    // result in exposing private data
+-┊61┊  ┊    Lists.update(listId, {
++┊  ┊61┊    Lists.collection.update(listId, {
+ ┊62┊62┊      $unset: { userId: true },
+ ┊63┊63┊    });
+ ┊64┊64┊  },
+```
+```diff
+@@ -71,7 +71,7 @@
+ ┊71┊71┊    newName: { type: String },
+ ┊72┊72┊  }).validator(),
+ ┊73┊73┊  run({ listId, newName }) {
+-┊74┊  ┊    const list = Lists.findOne(listId);
++┊  ┊74┊    const list = Lists.collection.findOne(listId);
+ ┊75┊75┊
+ ┊76┊76┊    if (!list.editableBy(this.userId)) {
+ ┊77┊77┊      throw new Meteor.Error('lists.updateName.accessDenied',
+```
+```diff
+@@ -81,7 +81,7 @@
+ ┊81┊81┊    // XXX the security check above is not atomic, so in theory a race condition could
+ ┊82┊82┊    // result in exposing private data
+ ┊83┊83┊
+-┊84┊  ┊    Lists.update(listId, {
++┊  ┊84┊    Lists.collection.update(listId, {
+ ┊85┊85┊      $set: { name: newName },
+ ┊86┊86┊    });
+ ┊87┊87┊  },
+```
+```diff
+@@ -91,7 +91,7 @@
+ ┊91┊91┊  name: 'lists.remove',
+ ┊92┊92┊  validate: LIST_ID_ONLY,
+ ┊93┊93┊  run({ listId }) {
+-┊94┊  ┊    const list = Lists.findOne(listId);
++┊  ┊94┊    const list = Lists.collection.findOne(listId);
+ ┊95┊95┊
+ ┊96┊96┊    if (!list.editableBy(this.userId)) {
+ ┊97┊97┊      throw new Meteor.Error('lists.remove.accessDenied',
+```
+```diff
+@@ -106,7 +106,7 @@
+ ┊106┊106┊        'Cannot delete the last public list.');
+ ┊107┊107┊    }
+ ┊108┊108┊
+-┊109┊   ┊    Lists.remove(listId);
++┊   ┊109┊    Lists.collection.remove(listId);
+ ┊110┊110┊  },
+ ┊111┊111┊});
+```
+[}]: # 
+
+Let's implement `logout` method:
+
+[{]: <helper> (diff_step 10.15)
+#### Step 10.15: Added logout logic
+
+##### Changed client/imports/main.component.ts
+```diff
+@@ -60,4 +60,9 @@
+ ┊60┊60┊
+ ┊61┊61┊    this.router.navigate(['/lists', listId]);
+ ┊62┊62┊  }
++┊  ┊63┊
++┊  ┊64┊  logout() {
++┊  ┊65┊    Meteor.logout();
++┊  ┊66┊    this.router.navigate(['/']);
++┊  ┊67┊  }
+ ┊63┊68┊}🚫↵
+```
+[}]: # 
+
+And bind the click event to the method:
+
+[{]: <helper> (diff_step 10.16)
+#### Step 10.16: Added logout event
+
+##### Changed client/imports/main-component.ng2.html
+```diff
+@@ -7,7 +7,7 @@
+ ┊ 7┊ 7┊
+ ┊ 8┊ 8┊                {{ userEmail }}
+ ┊ 9┊ 9┊            </a>
+-┊10┊  ┊            <a *ngIf="userMenuOpen" class="js-logout btn-secondary">Logout</a>
++┊  ┊10┊            <a *ngIf="userMenuOpen" class="js-logout btn-secondary" (click)="logout()">Logout</a>
+ ┊11┊11┊        </div>
+ ┊12┊12┊        <div *ngIf="!currentUser" class="btns-group">
+ ┊13┊13┊            <a routerLink="/signin" class="btn-secondary">Sign In</a>
+```
+[}]: # 
+
+> The only missing thing at the moment is the `currentUser` field in this Component - we will add it in the next step.
+
+Now we can remove the old Blaze Templates from the project (commit #6.17).
+
+So at the moment, we have fully migrated Blaze Template and all the application features works as before!
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step9.md) | [Next Step >](step11.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 5273a75bdda463cac0f2ea05c3f2e0ce5b65669d Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 18:28:20 +0300
Subject: [PATCH 54/89] Step 11.1: Take the layout of the join form

---
 client/imports/components/join.ng2.html | 24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)
 create mode 100644 client/imports/components/join.ng2.html

diff --git a/client/imports/components/join.ng2.html b/client/imports/components/join.ng2.html
new file mode 100644
index 0000000..fbbd088
--- /dev/null
+++ b/client/imports/components/join.ng2.html
@@ -0,0 +1,24 @@
+<div class="page auth">
+    <nav>
+        <div class="nav-group">
+            <a href="#" class="js-menu nav-item">
+                <span class="icon-list-unordered"></span>
+            </a>
+        </div>
+    </nav>
+
+    <div class="content-scrollable">
+        <div class="wrapper-auth">
+            <div class="at-form">
+                <h1 class="title-auth">Join</h1>
+                <p class="subtitle-auth">Signing in allows you to have private lists</p>
+                <div class="at-pwd-form">
+                    <form role="form" id="at-pwd-form">
+
+                    </form>
+                </div>
+            </div>
+
+        </div>
+    </div>
+</div>
\ No newline at end of file
-- 
2.10.2


From 7cce9de79e77c80f4f1e9afec86dc41a45aa08b1 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 18:28:45 +0300
Subject: [PATCH 55/89] Step 11.2: Use the new template

---
 client/imports/components/join.component.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/components/join.component.ts b/client/imports/components/join.component.ts
index e8e18f6..69abf53 100644
--- a/client/imports/components/join.component.ts
+++ b/client/imports/components/join.component.ts
@@ -1,7 +1,7 @@
 import {Component} from "@angular/core";
 
 @Component({
-  template: 'Join!'
+  templateUrl: '/client/imports/components/join.html'
 })
 export class JoinComponent {
 }
\ No newline at end of file
-- 
2.10.2


From 7819fc1e44dbeb55cd36aca81c1d891812c05d60 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 18:38:42 +0300
Subject: [PATCH 56/89] Step 11.3: Added the join form HTML

---
 client/imports/components/join.ng2.html | 20 ++++++++++++++++----
 1 file changed, 16 insertions(+), 4 deletions(-)

diff --git a/client/imports/components/join.ng2.html b/client/imports/components/join.ng2.html
index fbbd088..e9c7160 100644
--- a/client/imports/components/join.ng2.html
+++ b/client/imports/components/join.ng2.html
@@ -6,19 +6,31 @@
             </a>
         </div>
     </nav>
-
     <div class="content-scrollable">
         <div class="wrapper-auth">
             <div class="at-form">
                 <h1 class="title-auth">Join</h1>
                 <p class="subtitle-auth">Signing in allows you to have private lists</p>
+                <div class="list-errors">
+                    <div *ngFor="let errorText of errors" class="list-item">{{errorText}}</div>
+                </div>
                 <div class="at-pwd-form">
-                    <form role="form" id="at-pwd-form">
-
+                    <form id="at-pwd-form" (ngSubmit)="join()" #joinForm="ngForm">
+                        <div class="input">
+                            <input [(ngModel)]="model.email" required type="text" id="email" name="email" placeholder="Email" class="form-control" autocapitalize="none" autocorrect="off">
+                        </div>
+                        <div class="input">
+                            <input [(ngModel)]="model.password" required type="password" id="password" name="password" class="form-control" placeholder="Password" autocapitalize="none" autocorrect="off">
+                        </div>
+                        <div class="input">
+                            <input [(ngModel)]="model.passwordVerify" required type="password" id="password_verify" class="form-control" name="password_verify" placeholder="Password (Again)" autocapitalize="none" autocorrect="off">
+                        </div>
+                        <button type="submit" class="btn-primary" [disabled]="!joinForm.form.valid">
+                            REGISTER
+                        </button>
                     </form>
                 </div>
             </div>
-
         </div>
     </div>
 </div>
\ No newline at end of file
-- 
2.10.2


From 68960f2ec17a97387610f62d961f14ef30c7e300 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 18:38:51 +0300
Subject: [PATCH 57/89] Step 11.4: Added the join form logic

---
 client/imports/components/join.component.ts | 44 ++++++++++++++++++++++++++++-
 1 file changed, 43 insertions(+), 1 deletion(-)

diff --git a/client/imports/components/join.component.ts b/client/imports/components/join.component.ts
index 69abf53..3595671 100644
--- a/client/imports/components/join.component.ts
+++ b/client/imports/components/join.component.ts
@@ -1,7 +1,49 @@
-import {Component} from "@angular/core";
+import {Component, NgZone} from "@angular/core";
+import {Router} from "@angular/router";
+
+class JoinModel {
+  constructor(public email : string, public password : string, public passwordVerify : string) {
+
+  }
+}
 
 @Component({
   templateUrl: '/client/imports/components/join.html'
 })
 export class JoinComponent {
+  private model : JoinModel;
+  private errors : Array<string> = [];
+
+  constructor(private router : Router, private zone: NgZone) {
+    this.model = new JoinModel('', '', '');
+  }
+
+  resetErrors() {
+    this.errors = [];
+  }
+
+  join() {
+    this.resetErrors();
+
+    if (this.model.password !== this.model.passwordVerify) {
+      this.errors.push("Passwords does not match!");
+
+      return;
+    }
+
+    Accounts.createUser({
+      email: this.model.email,
+      password: this.model.password
+    }, (err) => {
+      if (err) {
+        this.zone.run(() => {
+          this.errors.push(err.reason);
+        });
+
+        return;
+      }
+
+      this.router.navigate(['/']);
+    });
+  }
 }
\ No newline at end of file
-- 
2.10.2


From 648316e6d36304ed58f85528b4db600fc8d87b46 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 18:39:08 +0300
Subject: [PATCH 58/89] Step 11.5: Add import to angular forms module

---
 client/imports/app.module.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app.module.ts b/client/imports/app.module.ts
index efb26e8..c0c30d5 100644
--- a/client/imports/app.module.ts
+++ b/client/imports/app.module.ts
@@ -7,6 +7,7 @@ import {ListRedirectorComponent} from "./components/list-redirector.component";
 import {Angular2BlazeTemplateModule} from "angular2-blaze-template";
 import {JoinComponent} from "./components/join.component";
 import {SigninComponent} from "./components/signin.component";
+import {FormsModule} from "@angular/forms";
 
 @NgModule({
     // Components, Pipes, Directive
@@ -27,7 +28,8 @@ import {SigninComponent} from "./components/signin.component";
     imports: [
         BrowserModule,
         routing,
-        Angular2BlazeTemplateModule
+        Angular2BlazeTemplateModule,
+        FormsModule
     ],
     // Main Component
     bootstrap: [MainComponent]
-- 
2.10.2


From 35df3bac9a59d3d7a2688fa63e0f930cc329e4f1 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 18:45:18 +0300
Subject: [PATCH 59/89] Step 11.6: Removed Blaze accounts packages

---
 .meteor/packages                                   |  3 --
 .meteor/versions                                   |  4 --
 imports/startup/client/index.js                    |  1 -
 imports/startup/client/routes.js                   | 44 ----------------------
 .../startup/client/useraccounts-configuration.js   | 20 ----------
 5 files changed, 72 deletions(-)
 delete mode 100755 imports/startup/client/useraccounts-configuration.js

diff --git a/.meteor/packages b/.meteor/packages
index f18f99c..ce34cd3 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -42,9 +42,6 @@ tap:i18n
 
 # accounts
 accounts-password
-useraccounts:unstyled
-useraccounts:flow-routing
-softwarerero:accounts-t9n
 
 # mobile
 crosswalk
diff --git a/.meteor/versions b/.meteor/versions
index a426747..e114c88 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -114,7 +114,6 @@ simple:rest@1.1.1
 simple:rest-accounts-password@1.1.2
 simple:rest-bearer-token-parser@1.0.1
 simple:rest-json-error-handler@1.0.1
-softwarerero:accounts-t9n@1.3.5
 spacebars@1.0.13
 spacebars-compiler@1.0.13
 srp@1.0.10
@@ -129,9 +128,6 @@ tracker@1.1.1
 ui@1.0.12
 underscore@1.0.10
 url@1.0.11
-useraccounts:core@1.14.2
-useraccounts:flow-routing@1.14.2
-useraccounts:unstyled@1.14.2
 webapp@1.3.12
 webapp-hashing@1.0.9
 xolvio:cleaner@0.3.1
diff --git a/imports/startup/client/index.js b/imports/startup/client/index.js
index a36a1b1..b0b0f47 100755
--- a/imports/startup/client/index.js
+++ b/imports/startup/client/index.js
@@ -1,2 +1 @@
-import './useraccounts-configuration.js';
 import './routes.js';
diff --git a/imports/startup/client/routes.js b/imports/startup/client/routes.js
index 4213bc4..e1fd311 100755
--- a/imports/startup/client/routes.js
+++ b/imports/startup/client/routes.js
@@ -1,50 +1,6 @@
 import { FlowRouter } from 'meteor/kadira:flow-router';
 import { BlazeLayout } from 'meteor/kadira:blaze-layout';
-import { AccountsTemplates } from 'meteor/useraccounts:core';
 
 // Import to load these templates
 import '../../ui/pages/lists-show-page.js';
 import '../../ui/pages/app-not-found.js';
-
-// Import to override accounts templates
-import '../../ui/accounts/accounts-templates.js';
-
-/*
-FlowRouter.route('/lists/:_id', {
-  name: 'Lists.show',
-  action() {
-    BlazeLayout.render('App_body', { main: 'Lists_show_page' });
-  },
-});
-
-FlowRouter.route('/', {
-  name: 'App.home',
-  action() {
-    BlazeLayout.render('App_body', { main: 'app_rootRedirector' });
-  },
-});
-
-// the App_notFound template is used for unknown routes and missing lists
-FlowRouter.notFound = {
-  action() {
-    BlazeLayout.render('App_body', { main: 'App_notFound' });
-  },
-};
-
-AccountsTemplates.configureRoute('signIn', {
-  name: 'signin',
-  path: '/signin',
-});
-
-AccountsTemplates.configureRoute('signUp', {
-  name: 'join',
-  path: '/join',
-});
-
-AccountsTemplates.configureRoute('forgotPwd');
-
-AccountsTemplates.configureRoute('resetPwd', {
-  name: 'resetPwd',
-  path: '/reset-password',
-});
-*/
\ No newline at end of file
diff --git a/imports/startup/client/useraccounts-configuration.js b/imports/startup/client/useraccounts-configuration.js
deleted file mode 100755
index a24d28c..0000000
--- a/imports/startup/client/useraccounts-configuration.js
+++ /dev/null
@@ -1,20 +0,0 @@
-import { AccountsTemplates } from 'meteor/useraccounts:core';
-import { TAPi18n } from 'meteor/tap:i18n';
-
-AccountsTemplates.configure({
-  showForgotPasswordLink: true,
-  texts: {
-    errors: {
-      loginForbidden: TAPi18n.__('Incorrect username or password'),
-      pwdMismatch: TAPi18n.__('Passwords don\'t match'),
-    },
-    title: {
-      signIn: TAPi18n.__('Sign In'),
-      signUp: TAPi18n.__('Join'),
-    },
-  },
-  defaultTemplate: 'Auth_page',
-  defaultLayout: 'App_body',
-  defaultContentRegion: 'main',
-  defaultLayoutRegions: {},
-});
-- 
2.10.2


From 3654cb52fa13a05eeefe6b894f72fd4d3a645e29 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 18:50:02 +0300
Subject: [PATCH 60/89] Step 11.7: Added current user to the main page

---
 client/imports/main.component.ts | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/client/imports/main.component.ts b/client/imports/main.component.ts
index 982d8e8..a2c4b27 100755
--- a/client/imports/main.component.ts
+++ b/client/imports/main.component.ts
@@ -16,6 +16,7 @@ export class MainComponent implements OnInit {
   private menuOpen : boolean = false;
   private userMenuOpen : boolean = false;
   private lists: Observable<any>;
+  private currentUser : Meteor.User;
 
   constructor(private router: Router) {
     this.isCordova = Meteor.isCordova;
@@ -32,6 +33,8 @@ export class MainComponent implements OnInit {
           {userId: Meteor.userId()},
         ]
       }).zone();
+
+      this.currentUser = Meteor.user();
     });
   }
 
-- 
2.10.2


From 8290e6b1bc19b2ac6cd18e8457e9b1287558ddcc Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 18:50:40 +0300
Subject: [PATCH 61/89] Step 11.8: Fix the user menu toggle

---
 client/imports/main-component.ng2.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/main-component.ng2.html b/client/imports/main-component.ng2.html
index ae90256..58fbde4 100644
--- a/client/imports/main-component.ng2.html
+++ b/client/imports/main-component.ng2.html
@@ -1,7 +1,7 @@
 <div id="container" [ngClass]="{'menu-open': menuOpen, 'cordova': isCordova}">
     <section id="menu">
         <div *ngIf="currentUser" class="btns-group-vertical">
-            <a href="#" class="js-user-menu btn-secondary">
+            <a class="js-user-menu btn-secondary" (click)="userMenuOpen = !userMenuOpen">
                 <span *ngIf="userMenuOpen" class="icon-arrow-up"></span>
                 <span *ngIf="!userMenuOpen" class="icon-arrow-down"></span>
 
-- 
2.10.2


From 2d5d4bb3c2708317c59655bd39ad88516c363105 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 19:37:59 +0300
Subject: [PATCH 62/89] Step 11.9: Added the signin view

---
 client/imports/components/signin.ng2.html | 33 +++++++++++++++++++++++++++++++
 1 file changed, 33 insertions(+)
 create mode 100644 client/imports/components/signin.ng2.html

diff --git a/client/imports/components/signin.ng2.html b/client/imports/components/signin.ng2.html
new file mode 100644
index 0000000..12950f7
--- /dev/null
+++ b/client/imports/components/signin.ng2.html
@@ -0,0 +1,33 @@
+<div class="page auth">
+    <nav>
+        <div class="nav-group">
+            <a href="#" class="js-menu nav-item">
+                <span class="icon-list-unordered"></span>
+            </a>
+        </div>
+    </nav>
+    <div class="content-scrollable">
+        <div class="wrapper-auth">
+            <div class="at-form">
+                <h1 class="title-auth">Signin</h1>
+                <p class="subtitle-auth">Signing in allows you to have private lists</p>
+                <div class="list-errors">
+                    <div *ngFor="let errorText of errors" class="list-item">{{errorText}}</div>
+                </div>
+                <div class="at-pwd-form">
+                    <form id="at-pwd-form" (ngSubmit)="join()" #joinForm="ngForm">
+                        <div class="input">
+                            <input [(ngModel)]="model.email" required type="text" id="email" name="email" placeholder="Email" class="form-control" autocapitalize="none" autocorrect="off">
+                        </div>
+                        <div class="input">
+                            <input [(ngModel)]="model.password" required type="password" id="password" name="password" class="form-control" placeholder="Password" autocapitalize="none" autocorrect="off">
+                        </div>
+                        <button type="submit" class="btn-primary" [disabled]="!joinForm.form.valid">
+                            SIGN IN
+                        </button>
+                    </form>
+                </div>
+            </div>
+        </div>
+    </div>
+</div>
\ No newline at end of file
-- 
2.10.2


From 8801c94714e5890996cb06a81849eafec98c0492 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 19:38:11 +0300
Subject: [PATCH 63/89] Step 11.10: Implemented the signin logic

---
 client/imports/components/signin.component.ts | 38 +++++++++++++++++++++++++--
 1 file changed, 36 insertions(+), 2 deletions(-)

diff --git a/client/imports/components/signin.component.ts b/client/imports/components/signin.component.ts
index 09d1ee4..d006dc4 100644
--- a/client/imports/components/signin.component.ts
+++ b/client/imports/components/signin.component.ts
@@ -1,7 +1,41 @@
-import {Component} from "@angular/core";
+import {Component, NgZone} from "@angular/core";
+import {Router} from "@angular/router";
+
+class SigninModel {
+  constructor(public email : string, public password : string) {
+
+  }
+}
 
 @Component({
-  template: 'Signin!'
+  templateUrl: '/client/imports/components/signin.html'
 })
 export class SigninComponent {
+  private model : SigninModel;
+  private errors : Array<string> = [];
+
+  constructor(private router: Router, private ngZone: NgZone) {
+    this.model = new SigninModel('', '');
+  }
+
+
+  resetErrors() {
+    this.errors = [];
+  }
+
+  join() {
+    this.resetErrors();
+
+    Meteor.loginWithPassword(this.model.email, this.model.password, (err) => {
+      if (err) {
+        this.ngZone.run(() => {
+          this.errors.push(err.reason);
+        });
+
+        return;
+      }
+
+      this.router.navigate(['/']);
+    });
+  }
 }
\ No newline at end of file
-- 
2.10.2


From 5583b2267cf4eebef1d9fc698e591a1893732ca0 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@Dotans-MacBook-Pro.local>
Date: Tue, 22 Nov 2016 14:05:17 +0200
Subject: [PATCH 64/89] Step 11: Migrating Authentication Templates

---
 manuals/templates/step11.md |  67 ++++++++
 manuals/views/step11.md     | 378 ++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 445 insertions(+)
 create mode 100644 manuals/templates/step11.md
 create mode 100644 manuals/views/step11.md

diff --git a/manuals/templates/step11.md b/manuals/templates/step11.md
new file mode 100644
index 0000000..e815a3c
--- /dev/null
+++ b/manuals/templates/step11.md
@@ -0,0 +1,67 @@
+So now we will take care of the authentication Blaze Templates, such as Join and Signup.
+
+We already created a stub Angular 2 Components for them - we just need to implement them now.
+
+This Todos project uses AccountTemplates package, which has a default style templates for signin and join pages - we do not want to use those and we want to implement it with Angular 2.
+
+The style and template defined in `imports/ui/accounts/accounts-templates.html` and we will copy the thing we need and create a new Angular 2 template file that looks the same.
+
+{{{diff_step 11.1}}} 
+
+So this is the basic layout without the actual form fields, let's use it:
+
+{{{diff_step 11.2}}} 
+
+Now let's add the actual form:
+
+{{{diff_step 11.3}}} 
+
+Let's understand what do we have here:
+
+- A form, that registers an event `ngSubmit` to the Component method `join`, and we give it a name `joinForm` using variable reference ([more info here](https://angular.io/docs/ts/latest/guide/template-syntax.html))
+- 3 inputs for email, password and verify password, that declared as `ngControl` which indicate that this input related to the form and effect it's validation.
+- We also use two-way binding using `ngModel` for the inputs.
+- Button of type `submit` that disabled when the form is not valid.
+
+Great, now we need to add some code to the form:
+
+- Handle errors using `errors` array.
+- Implement `join()` method and create the actual user when join.
+- Create a model object with our fields (email, password, verifyPassword) - note that this is optional and you can just use regular object.
+- Use router to navigate the user to the main page after joining.
+
+So let's do it:
+
+{{{diff_step 11.4}}} 
+
+And we also need to add an import for Angular 2 Forms Module, so let's do it:
+
+{{{diff_step 11.5}}} 
+
+This Todo base project uses packages that intent to help developing Blaze Template with Meteor Accounts, and we no longer need it, and it is also "takes control" of sign-up, so we need to remove it.
+
+So let's remove those packages, by running:
+
+    meteor remove useraccounts:unstyled useraccounts:flow-routing softwarerero:accounts-t9n
+
+And we also perform some cleanup and remove some files that uses this packages - you can see those modifications in commit #7.6 (or [here](https://github.com/dotansimha/angular2-blaze-migration-tutorial/commit/6c1bab196ba03c8f5d2e933644411733acd62272))
+
+Great! now we need to make sure that there is an indication for the user that he's logged in, so let's go back to `MainContainerComponent` and and add `currentUser` field:
+
+{{{diff_step 11.7}}} 
+
+> We put that code inside `autorun` because we want it to update when the user login or logout.
+
+Now we should be able to see the user's name if the main page - the only missing thing is to fix and add toggle for the user menu:
+
+{{{diff_step 11.8}}} 
+
+Now, let's do the same for the `SigninComponent` - it's very similar:
+
+{{{diff_step 11.9}}} 
+
+And the Component:
+
+{{{diff_step 11.10}}} 
+
+That's it! we implemented the join/signin forms with Angular 2 !
diff --git a/manuals/views/step11.md b/manuals/views/step11.md
new file mode 100644
index 0000000..e031089
--- /dev/null
+++ b/manuals/views/step11.md
@@ -0,0 +1,378 @@
+[{]: <region> (header)
+# Step 11: Migrating Authentication Templates
+[}]: #
+[{]: <region> (body)
+So now we will take care of the authentication Blaze Templates, such as Join and Signup.
+
+We already created a stub Angular 2 Components for them - we just need to implement them now.
+
+This Todos project uses AccountTemplates package, which has a default style templates for signin and join pages - we do not want to use those and we want to implement it with Angular 2.
+
+The style and template defined in `imports/ui/accounts/accounts-templates.html` and we will copy the thing we need and create a new Angular 2 template file that looks the same.
+
+[{]: <helper> (diff_step 11.1)
+#### Step 11.1: Take the layout of the join form
+
+##### Added client/imports/components/join.ng2.html
+```diff
+@@ -0,0 +1,24 @@
++┊  ┊ 1┊<div class="page auth">
++┊  ┊ 2┊    <nav>
++┊  ┊ 3┊        <div class="nav-group">
++┊  ┊ 4┊            <a href="#" class="js-menu nav-item">
++┊  ┊ 5┊                <span class="icon-list-unordered"></span>
++┊  ┊ 6┊            </a>
++┊  ┊ 7┊        </div>
++┊  ┊ 8┊    </nav>
++┊  ┊ 9┊
++┊  ┊10┊    <div class="content-scrollable">
++┊  ┊11┊        <div class="wrapper-auth">
++┊  ┊12┊            <div class="at-form">
++┊  ┊13┊                <h1 class="title-auth">Join</h1>
++┊  ┊14┊                <p class="subtitle-auth">Signing in allows you to have private lists</p>
++┊  ┊15┊                <div class="at-pwd-form">
++┊  ┊16┊                    <form role="form" id="at-pwd-form">
++┊  ┊17┊
++┊  ┊18┊                    </form>
++┊  ┊19┊                </div>
++┊  ┊20┊            </div>
++┊  ┊21┊
++┊  ┊22┊        </div>
++┊  ┊23┊    </div>
++┊  ┊24┊</div>🚫↵
+```
+[}]: # 
+
+So this is the basic layout without the actual form fields, let's use it:
+
+[{]: <helper> (diff_step 11.2)
+#### Step 11.2: Use the new template
+
+##### Changed client/imports/components/join.component.ts
+```diff
+@@ -1,7 +1,7 @@
+ ┊1┊1┊import {Component} from "@angular/core";
+ ┊2┊2┊
+ ┊3┊3┊@Component({
+-┊4┊ ┊  template: 'Join!'
++┊ ┊4┊  templateUrl: '/client/imports/components/join.html'
+ ┊5┊5┊})
+ ┊6┊6┊export class JoinComponent {
+ ┊7┊7┊}🚫↵
+```
+[}]: # 
+
+Now let's add the actual form:
+
+[{]: <helper> (diff_step 11.3)
+#### Step 11.3: Added the join form HTML
+
+##### Changed client/imports/components/join.ng2.html
+```diff
+@@ -6,19 +6,31 @@
+ ┊ 6┊ 6┊            </a>
+ ┊ 7┊ 7┊        </div>
+ ┊ 8┊ 8┊    </nav>
+-┊ 9┊  ┊
+ ┊10┊ 9┊    <div class="content-scrollable">
+ ┊11┊10┊        <div class="wrapper-auth">
+ ┊12┊11┊            <div class="at-form">
+ ┊13┊12┊                <h1 class="title-auth">Join</h1>
+ ┊14┊13┊                <p class="subtitle-auth">Signing in allows you to have private lists</p>
++┊  ┊14┊                <div class="list-errors">
++┊  ┊15┊                    <div *ngFor="let errorText of errors" class="list-item">{{errorText}}</div>
++┊  ┊16┊                </div>
+ ┊15┊17┊                <div class="at-pwd-form">
+-┊16┊  ┊                    <form role="form" id="at-pwd-form">
+-┊17┊  ┊
++┊  ┊18┊                    <form id="at-pwd-form" (ngSubmit)="join()" #joinForm="ngForm">
++┊  ┊19┊                        <div class="input">
++┊  ┊20┊                            <input [(ngModel)]="model.email" required type="text" id="email" name="email" placeholder="Email" class="form-control" autocapitalize="none" autocorrect="off">
++┊  ┊21┊                        </div>
++┊  ┊22┊                        <div class="input">
++┊  ┊23┊                            <input [(ngModel)]="model.password" required type="password" id="password" name="password" class="form-control" placeholder="Password" autocapitalize="none" autocorrect="off">
++┊  ┊24┊                        </div>
++┊  ┊25┊                        <div class="input">
++┊  ┊26┊                            <input [(ngModel)]="model.passwordVerify" required type="password" id="password_verify" class="form-control" name="password_verify" placeholder="Password (Again)" autocapitalize="none" autocorrect="off">
++┊  ┊27┊                        </div>
++┊  ┊28┊                        <button type="submit" class="btn-primary" [disabled]="!joinForm.form.valid">
++┊  ┊29┊                            REGISTER
++┊  ┊30┊                        </button>
+ ┊18┊31┊                    </form>
+ ┊19┊32┊                </div>
+ ┊20┊33┊            </div>
+-┊21┊  ┊
+ ┊22┊34┊        </div>
+ ┊23┊35┊    </div>
+ ┊24┊36┊</div>🚫↵
+```
+[}]: # 
+
+Let's understand what do we have here:
+
+- A form, that registers an event `ngSubmit` to the Component method `join`, and we give it a name `joinForm` using variable reference ([more info here](https://angular.io/docs/ts/latest/guide/template-syntax.html))
+- 3 inputs for email, password and verify password, that declared as `ngControl` which indicate that this input related to the form and effect it's validation.
+- We also use two-way binding using `ngModel` for the inputs.
+- Button of type `submit` that disabled when the form is not valid.
+
+Great, now we need to add some code to the form:
+
+- Handle errors using `errors` array.
+- Implement `join()` method and create the actual user when join.
+- Create a model object with our fields (email, password, verifyPassword) - note that this is optional and you can just use regular object.
+- Use router to navigate the user to the main page after joining.
+
+So let's do it:
+
+[{]: <helper> (diff_step 11.4)
+#### Step 11.4: Added the join form logic
+
+##### Changed client/imports/components/join.component.ts
+```diff
+@@ -1,7 +1,49 @@
+-┊ 1┊  ┊import {Component} from "@angular/core";
++┊  ┊ 1┊import {Component, NgZone} from "@angular/core";
++┊  ┊ 2┊import {Router} from "@angular/router";
++┊  ┊ 3┊
++┊  ┊ 4┊class JoinModel {
++┊  ┊ 5┊  constructor(public email : string, public password : string, public passwordVerify : string) {
++┊  ┊ 6┊
++┊  ┊ 7┊  }
++┊  ┊ 8┊}
+ ┊ 2┊ 9┊
+ ┊ 3┊10┊@Component({
+ ┊ 4┊11┊  templateUrl: '/client/imports/components/join.html'
+ ┊ 5┊12┊})
+ ┊ 6┊13┊export class JoinComponent {
++┊  ┊14┊  private model : JoinModel;
++┊  ┊15┊  private errors : Array<string> = [];
++┊  ┊16┊
++┊  ┊17┊  constructor(private router : Router, private zone: NgZone) {
++┊  ┊18┊    this.model = new JoinModel('', '', '');
++┊  ┊19┊  }
++┊  ┊20┊
++┊  ┊21┊  resetErrors() {
++┊  ┊22┊    this.errors = [];
++┊  ┊23┊  }
++┊  ┊24┊
++┊  ┊25┊  join() {
++┊  ┊26┊    this.resetErrors();
++┊  ┊27┊
++┊  ┊28┊    if (this.model.password !== this.model.passwordVerify) {
++┊  ┊29┊      this.errors.push("Passwords does not match!");
++┊  ┊30┊
++┊  ┊31┊      return;
++┊  ┊32┊    }
++┊  ┊33┊
++┊  ┊34┊    Accounts.createUser({
++┊  ┊35┊      email: this.model.email,
++┊  ┊36┊      password: this.model.password
++┊  ┊37┊    }, (err) => {
++┊  ┊38┊      if (err) {
++┊  ┊39┊        this.zone.run(() => {
++┊  ┊40┊          this.errors.push(err.reason);
++┊  ┊41┊        });
++┊  ┊42┊
++┊  ┊43┊        return;
++┊  ┊44┊      }
++┊  ┊45┊
++┊  ┊46┊      this.router.navigate(['/']);
++┊  ┊47┊    });
++┊  ┊48┊  }
+ ┊ 7┊49┊}🚫↵
+```
+[}]: # 
+
+And we also need to add an import for Angular 2 Forms Module, so let's do it:
+
+[{]: <helper> (diff_step 11.5)
+#### Step 11.5: Add import to angular forms module
+
+##### Changed client/imports/app.module.ts
+```diff
+@@ -7,6 +7,7 @@
+ ┊ 7┊ 7┊import {Angular2BlazeTemplateModule} from "angular2-blaze-template";
+ ┊ 8┊ 8┊import {JoinComponent} from "./components/join.component";
+ ┊ 9┊ 9┊import {SigninComponent} from "./components/signin.component";
++┊  ┊10┊import {FormsModule} from "@angular/forms";
+ ┊10┊11┊
+ ┊11┊12┊@NgModule({
+ ┊12┊13┊    // Components, Pipes, Directive
+```
+```diff
+@@ -27,7 +28,8 @@
+ ┊27┊28┊    imports: [
+ ┊28┊29┊        BrowserModule,
+ ┊29┊30┊        routing,
+-┊30┊  ┊        Angular2BlazeTemplateModule
++┊  ┊31┊        Angular2BlazeTemplateModule,
++┊  ┊32┊        FormsModule
+ ┊31┊33┊    ],
+ ┊32┊34┊    // Main Component
+ ┊33┊35┊    bootstrap: [MainComponent]
+```
+[}]: # 
+
+This Todo base project uses packages that intent to help developing Blaze Template with Meteor Accounts, and we no longer need it, and it is also "takes control" of sign-up, so we need to remove it.
+
+So let's remove those packages, by running:
+
+    meteor remove useraccounts:unstyled useraccounts:flow-routing softwarerero:accounts-t9n
+
+And we also perform some cleanup and remove some files that uses this packages - you can see those modifications in commit #7.6 (or [here](https://github.com/dotansimha/angular2-blaze-migration-tutorial/commit/6c1bab196ba03c8f5d2e933644411733acd62272))
+
+Great! now we need to make sure that there is an indication for the user that he's logged in, so let's go back to `MainContainerComponent` and and add `currentUser` field:
+
+[{]: <helper> (diff_step 11.7)
+#### Step 11.7: Added current user to the main page
+
+##### Changed client/imports/main.component.ts
+```diff
+@@ -16,6 +16,7 @@
+ ┊16┊16┊  private menuOpen : boolean = false;
+ ┊17┊17┊  private userMenuOpen : boolean = false;
+ ┊18┊18┊  private lists: Observable<any>;
++┊  ┊19┊  private currentUser : Meteor.User;
+ ┊19┊20┊
+ ┊20┊21┊  constructor(private router: Router) {
+ ┊21┊22┊    this.isCordova = Meteor.isCordova;
+```
+```diff
+@@ -32,6 +33,8 @@
+ ┊32┊33┊          {userId: Meteor.userId()},
+ ┊33┊34┊        ]
+ ┊34┊35┊      }).zone();
++┊  ┊36┊
++┊  ┊37┊      this.currentUser = Meteor.user();
+ ┊35┊38┊    });
+ ┊36┊39┊  }
+```
+[}]: # 
+
+> We put that code inside `autorun` because we want it to update when the user login or logout.
+
+Now we should be able to see the user's name if the main page - the only missing thing is to fix and add toggle for the user menu:
+
+[{]: <helper> (diff_step 11.8)
+#### Step 11.8: Fix the user menu toggle
+
+##### Changed client/imports/main-component.ng2.html
+```diff
+@@ -1,7 +1,7 @@
+ ┊1┊1┊<div id="container" [ngClass]="{'menu-open': menuOpen, 'cordova': isCordova}">
+ ┊2┊2┊    <section id="menu">
+ ┊3┊3┊        <div *ngIf="currentUser" class="btns-group-vertical">
+-┊4┊ ┊            <a href="#" class="js-user-menu btn-secondary">
++┊ ┊4┊            <a class="js-user-menu btn-secondary" (click)="userMenuOpen = !userMenuOpen">
+ ┊5┊5┊                <span *ngIf="userMenuOpen" class="icon-arrow-up"></span>
+ ┊6┊6┊                <span *ngIf="!userMenuOpen" class="icon-arrow-down"></span>
+```
+[}]: # 
+
+Now, let's do the same for the `SigninComponent` - it's very similar:
+
+[{]: <helper> (diff_step 11.9)
+#### Step 11.9: Added the signin view
+
+##### Added client/imports/components/signin.ng2.html
+```diff
+@@ -0,0 +1,33 @@
++┊  ┊ 1┊<div class="page auth">
++┊  ┊ 2┊    <nav>
++┊  ┊ 3┊        <div class="nav-group">
++┊  ┊ 4┊            <a href="#" class="js-menu nav-item">
++┊  ┊ 5┊                <span class="icon-list-unordered"></span>
++┊  ┊ 6┊            </a>
++┊  ┊ 7┊        </div>
++┊  ┊ 8┊    </nav>
++┊  ┊ 9┊    <div class="content-scrollable">
++┊  ┊10┊        <div class="wrapper-auth">
++┊  ┊11┊            <div class="at-form">
++┊  ┊12┊                <h1 class="title-auth">Signin</h1>
++┊  ┊13┊                <p class="subtitle-auth">Signing in allows you to have private lists</p>
++┊  ┊14┊                <div class="list-errors">
++┊  ┊15┊                    <div *ngFor="let errorText of errors" class="list-item">{{errorText}}</div>
++┊  ┊16┊                </div>
++┊  ┊17┊                <div class="at-pwd-form">
++┊  ┊18┊                    <form id="at-pwd-form" (ngSubmit)="join()" #joinForm="ngForm">
++┊  ┊19┊                        <div class="input">
++┊  ┊20┊                            <input [(ngModel)]="model.email" required type="text" id="email" name="email" placeholder="Email" class="form-control" autocapitalize="none" autocorrect="off">
++┊  ┊21┊                        </div>
++┊  ┊22┊                        <div class="input">
++┊  ┊23┊                            <input [(ngModel)]="model.password" required type="password" id="password" name="password" class="form-control" placeholder="Password" autocapitalize="none" autocorrect="off">
++┊  ┊24┊                        </div>
++┊  ┊25┊                        <button type="submit" class="btn-primary" [disabled]="!joinForm.form.valid">
++┊  ┊26┊                            SIGN IN
++┊  ┊27┊                        </button>
++┊  ┊28┊                    </form>
++┊  ┊29┊                </div>
++┊  ┊30┊            </div>
++┊  ┊31┊        </div>
++┊  ┊32┊    </div>
++┊  ┊33┊</div>🚫↵
+```
+[}]: # 
+
+And the Component:
+
+[{]: <helper> (diff_step 11.10)
+#### Step 11.10: Implemented the signin logic
+
+##### Changed client/imports/components/signin.component.ts
+```diff
+@@ -1,7 +1,41 @@
+-┊ 1┊  ┊import {Component} from "@angular/core";
++┊  ┊ 1┊import {Component, NgZone} from "@angular/core";
++┊  ┊ 2┊import {Router} from "@angular/router";
++┊  ┊ 3┊
++┊  ┊ 4┊class SigninModel {
++┊  ┊ 5┊  constructor(public email : string, public password : string) {
++┊  ┊ 6┊
++┊  ┊ 7┊  }
++┊  ┊ 8┊}
+ ┊ 2┊ 9┊
+ ┊ 3┊10┊@Component({
+-┊ 4┊  ┊  template: 'Signin!'
++┊  ┊11┊  templateUrl: '/client/imports/components/signin.html'
+ ┊ 5┊12┊})
+ ┊ 6┊13┊export class SigninComponent {
++┊  ┊14┊  private model : SigninModel;
++┊  ┊15┊  private errors : Array<string> = [];
++┊  ┊16┊
++┊  ┊17┊  constructor(private router: Router, private ngZone: NgZone) {
++┊  ┊18┊    this.model = new SigninModel('', '');
++┊  ┊19┊  }
++┊  ┊20┊
++┊  ┊21┊
++┊  ┊22┊  resetErrors() {
++┊  ┊23┊    this.errors = [];
++┊  ┊24┊  }
++┊  ┊25┊
++┊  ┊26┊  join() {
++┊  ┊27┊    this.resetErrors();
++┊  ┊28┊
++┊  ┊29┊    Meteor.loginWithPassword(this.model.email, this.model.password, (err) => {
++┊  ┊30┊      if (err) {
++┊  ┊31┊        this.ngZone.run(() => {
++┊  ┊32┊          this.errors.push(err.reason);
++┊  ┊33┊        });
++┊  ┊34┊
++┊  ┊35┊        return;
++┊  ┊36┊      }
++┊  ┊37┊
++┊  ┊38┊      this.router.navigate(['/']);
++┊  ┊39┊    });
++┊  ┊40┊  }
+ ┊ 7┊41┊}🚫↵
+```
+[}]: # 
+
+That's it! we implemented the join/signin forms with Angular 2 !
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step10.md) | [Next Step >](step12.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 9e7087f91faed92efead32fdafb99740a73a6542 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 19:43:11 +0300
Subject: [PATCH 65/89] Step 12.1: Migrate the list_show template

---
 client/imports/components/list-show.ng2.html | 65 ++++++++++++++++++++++++++++
 1 file changed, 65 insertions(+)
 create mode 100644 client/imports/components/list-show.ng2.html

diff --git a/client/imports/components/list-show.ng2.html b/client/imports/components/list-show.ng2.html
new file mode 100644
index 0000000..6b99a25
--- /dev/null
+++ b/client/imports/components/list-show.ng2.html
@@ -0,0 +1,65 @@
+<div class="page lists-show">
+    <nav class="js-title-nav" *ngIf="list">
+        <form *ngIf="editing" class="js-edit-form list-edit-form">
+            <input type="text" name="name" [value]="editModel.name">
+            <div class="nav-group right">
+                <a href="#" class="js-cancel nav-item">
+                    <span class="icon-close js-cancel" title="Cancel"></span>
+                </a>
+            </div>
+        </form>
+        <div *ngIf="!editing">
+            <div class="nav-group">
+                <a href="#" class="js-menu nav-item">
+                    <span class="icon-list-unordered" title="Show Menu"></span>
+                </a>
+            </div>
+
+            <h1 class="js-edit-list title-page">
+                <span class="title-wrapper">{{list.name}}</span>
+                <span class="count-list">{{list.incompleteCount}}</span>
+            </h1>
+
+            <div class="nav-group right">
+                <div class="nav-item options-mobile">
+                    <select class="list-edit">
+                        <option disabled selected>Select an action</option>
+                        <option *ngIf="list.userId" value="public">Make Public</option>
+                        <option *ngIf="!list.userId" value="private">Make Private</option>
+                        <option value="delete">Delete</option>
+                    </select>
+                    <span class="icon-cog"></span>
+                </div>
+                <div class="options-web">
+                    <a class="js-toggle-list-privacy nav-item">
+                        <span *ngIf="list.userId" class="icon-lock" title="Make list public"></span>
+                        <span *ngIf="!list.userId" class="icon-unlock" title="Make list private"></span>
+                    </a>
+                    <a class="js-delete-list nav-item">
+                        <span class="icon-trash" title="Delete list"></span>
+                    </a>
+                </div>
+            </div>
+        </div>
+
+        <form class="js-todo-new todo-new input-symbol">
+            <input type="text" placeholder="Type to add new tasks">
+            <span class="icon-add js-todo-add"></span>
+        </form>
+    </nav>
+
+    <div class="content-scrollable list-items">
+        <div *ngIf="todosReady">
+            <div *ngFor="let todo of todos">
+                <blaze-template name="Todos_item" [context]="getContextForItem(todo)"></blaze-template>
+            </div>
+            <div class="wrapper-message" *ngIf="!todos || todos.length == 0">
+                <div class="title-message">No tasks here</div>
+                <div class="subtitle-message">Add new tasks using the field above</div>
+            </div>
+        </div>
+        <div *ngIf="!todosReady" class="wrapper-message">
+            <div class="title-message">Loading tasks...</div>
+        </div>
+    </div>
+</div>
\ No newline at end of file
-- 
2.10.2


From 38ef70637e601fc4d1d620e13dc309b2aebc366f Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 19:43:26 +0300
Subject: [PATCH 66/89] Step 12.2: Added logic for the list show component

---
 client/imports/components/list-show.component.ts | 28 ++++++++++++++++++++----
 client/imports/components/list-show.ng2.html     |  2 +-
 2 files changed, 25 insertions(+), 5 deletions(-)

diff --git a/client/imports/components/list-show.component.ts b/client/imports/components/list-show.component.ts
index 8aed6d9..f767b31 100644
--- a/client/imports/components/list-show.component.ts
+++ b/client/imports/components/list-show.component.ts
@@ -1,11 +1,16 @@
 import {Component, OnInit} from "@angular/core";
 import {ActivatedRoute, Params} from "@angular/router";
+import {MeteorObservable} from "meteor-rxjs";
+import {Lists} from "../../../imports/api/lists/lists";
 
 @Component({
     template: '<blaze-template *ngIf="templateContext" name="Lists_show_page" [context]="templateContext"></blaze-template>'
 })
 export class ListShowComponent implements OnInit {
-    private templateContext: any;
+    private list : any;
+    private todosReady : boolean = false;
+    private todos : Array<any>;
+    private editing : boolean = false;
 
     constructor(private currentRoute: ActivatedRoute) {
 
@@ -14,10 +19,25 @@ export class ListShowComponent implements OnInit {
     ngOnInit() {
         this.currentRoute.params.subscribe((params: Params) => {
             const listId = params['_id'];
+            MeteorObservable.subscribe('todos.inList', listId).subscribe();
 
-            this.templateContext = {
-                _id: listId
-            };
+            MeteorObservable.autorun().zone().subscribe(() => {
+                if (listId && Lists.findOne(listId)) {
+                    this.list = Lists.findOne(listId);
+                    this.todosReady = true;
+                    this.todos = this.list.todos();
+                }
+            })
         });
     }
+
+    getContextForItem(todo) {
+        return {
+              todo: todo,
+              editing: false,
+              onEditingChange(editing) {
+
+              },
+        }
+    }
 }
\ No newline at end of file
diff --git a/client/imports/components/list-show.ng2.html b/client/imports/components/list-show.ng2.html
index 6b99a25..9aeb969 100644
--- a/client/imports/components/list-show.ng2.html
+++ b/client/imports/components/list-show.ng2.html
@@ -50,7 +50,7 @@
 
     <div class="content-scrollable list-items">
         <div *ngIf="todosReady">
-            <div *ngFor="let todo of todos">
+            <div *ngFor="let todo of todos | async">
                 <blaze-template name="Todos_item" [context]="getContextForItem(todo)"></blaze-template>
             </div>
             <div class="wrapper-message" *ngIf="!todos || todos.length == 0">
-- 
2.10.2


From cb6b46288797a9cc8718dc37f73cfe1efa44892a Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 19:45:10 +0300
Subject: [PATCH 67/89] Step 12.3: Implemented the events in the UI

---
 client/imports/components/list-show.component.ts | 91 +++++++++++++++++++++---
 client/imports/components/list-show.ng2.html     | 16 ++---
 2 files changed, 88 insertions(+), 19 deletions(-)

diff --git a/client/imports/components/list-show.component.ts b/client/imports/components/list-show.component.ts
index f767b31..08b2a84 100644
--- a/client/imports/components/list-show.component.ts
+++ b/client/imports/components/list-show.component.ts
@@ -1,43 +1,112 @@
 import {Component, OnInit} from "@angular/core";
-import {ActivatedRoute, Params} from "@angular/router";
+import {ActivatedRoute, Params, Router} from "@angular/router";
 import {MeteorObservable} from "meteor-rxjs";
 import {Lists} from "../../../imports/api/lists/lists";
+import {
+  updateName,
+  makePublic,
+  makePrivate,
+  remove,
+  insert,
+} from '../../../imports/api/todos/methods';
+import { displayError } from '../../../imports/ui/lib/errors';
+import {Observable} from "rxjs";
 
 @Component({
-    template: '<blaze-template *ngIf="templateContext" name="Lists_show_page" [context]="templateContext"></blaze-template>'
+    templateUrl: '/client/imports/components/list-show.html'
 })
 export class ListShowComponent implements OnInit {
     private list : any;
     private todosReady : boolean = false;
-    private todos : Array<any>;
+    private todos : Observable<any>;
     private editing : boolean = false;
+    private editModel : any;
+    private newItemModel : string = '';
 
-    constructor(private currentRoute: ActivatedRoute) {
-
+    constructor(private currentRoute: ActivatedRoute, private router: Router) {
+        this.editModel = {
+            name: ''
+        }
     }
 
     ngOnInit() {
         this.currentRoute.params.subscribe((params: Params) => {
             const listId = params['_id'];
-            MeteorObservable.subscribe('todos.inList', listId).subscribe();
+            MeteorObservable.subscribe('todos.inList', listId).zone().subscribe();
 
             MeteorObservable.autorun().zone().subscribe(() => {
                 if (listId && Lists.findOne(listId)) {
                     this.list = Lists.findOne(listId);
                     this.todosReady = true;
-                    this.todos = this.list.todos();
+                    this.todos = this.list.todos().zone();
                 }
             })
         });
     }
 
+    deleteList() {
+        const list = this.list;
+        const message = `Are you sure you want to delete the list?`;
+
+        if (confirm(message)) {
+            remove.call({
+                listId: list._id,
+            }, displayError);
+
+            this.router.navigate(['Home']);
+
+            return true;
+        }
+
+        return false;
+    }
+
+    editList(toggle) {
+        this.editModel.name = this.list.name;
+        this.editing = toggle;
+    }
+
+    toggleListPrivacy() {
+        const list = this.list;
+
+        if (list.userId) {
+            makePublic.call({ listId: list._id }, displayError);
+        } else {
+            makePrivate.call({ listId: list._id }, displayError);
+        }
+    }
+
+    addNew() {
+        if (this.newItemModel == '') {
+            return;
+        }
+
+        insert.call({
+            listId: this.list._id,
+            text: this.newItemModel,
+        }, displayError);
+
+        this.newItemModel = '';
+    }
+
+    saveList() {
+        if (this.editing) {
+            updateName.call({
+                listId: this.list._id,
+                newName: this.editModel.name,
+            }, displayError);
+
+            this.editing = false;
+        }
+    }
+
     getContextForItem(todo) {
         return {
-              todo: todo,
-              editing: false,
-              onEditingChange(editing) {
+            todo: todo,
+            editing: false,
+            onEditingChange(editing) {
 
-              },
+            },
         }
     }
 }
\ No newline at end of file
diff --git a/client/imports/components/list-show.ng2.html b/client/imports/components/list-show.ng2.html
index 9aeb969..bf1f200 100644
--- a/client/imports/components/list-show.ng2.html
+++ b/client/imports/components/list-show.ng2.html
@@ -1,9 +1,9 @@
 <div class="page lists-show">
     <nav class="js-title-nav" *ngIf="list">
-        <form *ngIf="editing" class="js-edit-form list-edit-form">
-            <input type="text" name="name" [value]="editModel.name">
+        <form *ngIf="editing" class="js-edit-form list-edit-form" (ngSubmit)="saveList()" #editForm="ngForm">
+            <input type="text" [(ngModel)]="editModel.name" (blur)="saveList()" name="editNameInput">
             <div class="nav-group right">
-                <a href="#" class="js-cancel nav-item">
+                <a href="#" class="js-cancel nav-item" (click)="editList(false)">
                     <span class="icon-close js-cancel" title="Cancel"></span>
                 </a>
             </div>
@@ -15,7 +15,7 @@
                 </a>
             </div>
 
-            <h1 class="js-edit-list title-page">
+            <h1 class="js-edit-list title-page" (click)="editList(true)">
                 <span class="title-wrapper">{{list.name}}</span>
                 <span class="count-list">{{list.incompleteCount}}</span>
             </h1>
@@ -31,19 +31,19 @@
                     <span class="icon-cog"></span>
                 </div>
                 <div class="options-web">
-                    <a class="js-toggle-list-privacy nav-item">
+                    <a class="js-toggle-list-privacy nav-item" (click)="toggleListPrivacy()">
                         <span *ngIf="list.userId" class="icon-lock" title="Make list public"></span>
                         <span *ngIf="!list.userId" class="icon-unlock" title="Make list private"></span>
                     </a>
-                    <a class="js-delete-list nav-item">
+                    <a class="js-delete-list nav-item" (click)="deleteList()">
                         <span class="icon-trash" title="Delete list"></span>
                     </a>
                 </div>
             </div>
         </div>
 
-        <form class="js-todo-new todo-new input-symbol">
-            <input type="text" placeholder="Type to add new tasks">
+        <form class="js-todo-new todo-new input-symbol" (ngSubmit)="addNew()" #newForm="ngForm">
+            <input type="text" placeholder="Type to add new tasks" [(ngModel)]="newItemModel" name="newItemInput">
             <span class="icon-add js-todo-add"></span>
         </form>
     </nav>
-- 
2.10.2


From 191e179c320a22e8eac8e2ff858b596fc94be836 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 19:58:36 +0300
Subject: [PATCH 68/89] Step 12.4: Changes in the Todos collection

---
 imports/api/todos/todos.js | 13 +++++++------
 1 file changed, 7 insertions(+), 6 deletions(-)

diff --git a/imports/api/todos/todos.js b/imports/api/todos/todos.js
index f152b90..3452b4d 100755
--- a/imports/api/todos/todos.js
+++ b/imports/api/todos/todos.js
@@ -1,6 +1,7 @@
 import { Mongo } from 'meteor/mongo';
 import { Factory } from 'meteor/factory';
 import faker from 'faker';
+import {MongoObservable} from "meteor-rxjs";
 
 import incompleteCountDenormalizer from './incompleteCountDenormalizer.js';
 import { SimpleSchema } from 'meteor/aldeed:simple-schema';
@@ -27,16 +28,16 @@ class TodosCollection extends Mongo.Collection {
   }
 }
 
-export const Todos = new TodosCollection('Todos');
+export const Todos = new MongoObservable.fromExisting(new TodosCollection('Todos'));
 
 // Deny all client-side updates since we will be using methods to manage this collection
-Todos.deny({
+Todos.collection.deny({
   insert() { return true; },
   update() { return true; },
   remove() { return true; },
 });
 
-Todos.schema = new SimpleSchema({
+let schema = new SimpleSchema({
   listId: {
     type: String,
     regEx: SimpleSchema.RegEx.Id,
@@ -56,12 +57,12 @@ Todos.schema = new SimpleSchema({
   },
 });
 
-Todos.attachSchema(Todos.schema);
+Todos.collection.attachSchema(schema);
 
 // This represents the keys from Lists objects that should be published
 // to the client. If we add secret properties to List objects, don't list
 // them here to keep them private to the server.
-Todos.publicFields = {
+Todos.collection.publicFields = {
   listId: 1,
   text: 1,
   createdAt: 1,
@@ -77,7 +78,7 @@ Factory.define('todo', Todos, {
   createdAt: () => new Date(),
 });
 
-Todos.helpers({
+Todos.collection.helpers({
   list() {
     return Lists.findOne(this.listId);
   },
-- 
2.10.2


From 4b44f777579c1c6fcae6d33c697a5fcd62acb391 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 20:02:50 +0300
Subject: [PATCH 69/89] Step 12.5: Remove the old template code

---
 imports/startup/client/routes.js      |   2 +-
 imports/ui/components/lists-show.html |  80 ---------------
 imports/ui/components/lists-show.js   | 188 ----------------------------------
 imports/ui/pages/lists-show-page.html |   9 --
 imports/ui/pages/lists-show-page.js   |  57 -----------
 5 files changed, 1 insertion(+), 335 deletions(-)
 delete mode 100755 imports/ui/components/lists-show.html
 delete mode 100755 imports/ui/components/lists-show.js
 delete mode 100755 imports/ui/pages/lists-show-page.html
 delete mode 100755 imports/ui/pages/lists-show-page.js

diff --git a/imports/startup/client/routes.js b/imports/startup/client/routes.js
index e1fd311..3cd6bc1 100755
--- a/imports/startup/client/routes.js
+++ b/imports/startup/client/routes.js
@@ -2,5 +2,5 @@ import { FlowRouter } from 'meteor/kadira:flow-router';
 import { BlazeLayout } from 'meteor/kadira:blaze-layout';
 
 // Import to load these templates
-import '../../ui/pages/lists-show-page.js';
 import '../../ui/pages/app-not-found.js';
+import '../../ui/components/todos-item.js';
\ No newline at end of file
diff --git a/imports/ui/components/lists-show.html b/imports/ui/components/lists-show.html
deleted file mode 100755
index bbc8340..0000000
--- a/imports/ui/components/lists-show.html
+++ /dev/null
@@ -1,80 +0,0 @@
-<template name="Lists_show">
-  <div class="page lists-show">
-    <nav class="js-title-nav">
-      {{#momentum plugin="fade"}}
-        {{#if editing}}
-          <form class="js-edit-form list-edit-form">
-            <input type="text" name="name" value="{{name}}">
-            <div class="nav-group right">
-              <a href="#" class="js-cancel nav-item">
-                <span class="icon-close js-cancel" title={{_ 'Cancel'}}></span>
-              </a>
-            </div>
-          </form>
-        {{else}}
-          <div class="nav-group">
-            <a href="#" class="js-menu nav-item">
-              <span class="icon-list-unordered" title={{_ 'Show Menu'}}></span>
-            </a>
-          </div>
-
-          <h1 class="js-edit-list title-page">
-            <span class="title-wrapper">{{list.name}}</span>
-            <span class="count-list">{{list.incompleteCount}}</span>
-          </h1>
-
-          <div class="nav-group right">
-            <div class="nav-item options-mobile">
-              <select class="list-edit">
-                <option disabled selected>{{_ 'Select an action'}}</option>
-                {{#if list.userId}}
-                  <option value="public">{{_ 'Make Public'}}</option>
-                {{else}}
-                  <option value="private">{{_ 'Make Private'}}</option>
-                {{/if}}
-                <option value="delete">{{_ 'Delete'}}</option>
-              </select>
-              <span class="icon-cog"></span>
-            </div>
-            <div class="options-web">
-              <a class="js-toggle-list-privacy nav-item">
-                {{#if list.userId}}
-                  <span class="icon-lock" title={{_ 'Make list public'}}></span>
-                {{else}}
-                  <span class="icon-unlock" title={{_ 'Make list private'}}></span>
-                {{/if}}
-              </a>
-
-              <a class="js-delete-list nav-item">
-                <span class="icon-trash" title={{_ 'Delete list'}}></span>
-              </a>
-            </div>
-          </div>
-        {{/if}}
-      {{/momentum}}
-
-      <form class="js-todo-new todo-new input-symbol">
-        <input type="text" placeholder={{_ 'Type to add new tasks'}}>
-        <span class="icon-add js-todo-add"></span>
-      </form>
-    </nav>
-
-
-    <div class="content-scrollable list-items">
-      {{#if todosReady}}
-        {{#each todo in todos}}
-          {{> Todos_item (todoArgs todo)}}
-        {{else}}
-          <div class="wrapper-message">
-            <div class="title-message">{{_ 'No tasks here'}}</div>
-            <div class="subtitle-message">{{_ 'Add new tasks using the field above'}}</div>
-          </div>
-        {{/each}}
-      {{else}}
-          <div class="wrapper-message">
-            <div class="title-message">{{_ 'Loading tasks...'}}</div>
-          </div>
-      {{/if}}
-    </div>
-  </div>
-</template>
diff --git a/imports/ui/components/lists-show.js b/imports/ui/components/lists-show.js
deleted file mode 100755
index fde64de..0000000
--- a/imports/ui/components/lists-show.js
+++ /dev/null
@@ -1,188 +0,0 @@
-import { Meteor } from 'meteor/meteor';
-import { Template } from 'meteor/templating';
-import { Mongo } from 'meteor/mongo';
-import { ReactiveDict } from 'meteor/reactive-dict';
-import { Tracker } from 'meteor/tracker';
-import { $ } from 'meteor/jquery';
-
-import './lists-show.html';
-
-// Component used in the template
-import './todos-item.js';
-
-import {
-  updateName,
-  makePublic,
-  makePrivate,
-  remove,
-} from '../../api/lists/methods.js';
-
-import {
-  insert,
-} from '../../api/todos/methods.js';
-
-import { displayError } from '../lib/errors.js';
-
-import { FlowRouter } from 'meteor/kadira:flow-router';
-import { SimpleSchema } from 'meteor/aldeed:simple-schema';
-import { TAPi18n } from 'meteor/tap:i18n';
-
-Template.Lists_show.onCreated(function listShowOnCreated() {
-  this.autorun(() => {
-    new SimpleSchema({
-      list: { type: Function },
-      todosReady: { type: Boolean },
-      todos: { type: Mongo.Cursor },
-    }).validate(Template.currentData());
-  });
-
-  this.state = new ReactiveDict();
-  this.state.setDefault({
-    editing: false,
-    editingTodo: false,
-  });
-
-  this.saveList = () => {
-    this.state.set('editing', false);
-
-    const newName = this.$('[name=name]').val().trim();
-    if (newName) {
-      updateName.call({
-        listId: this.data.list()._id,
-        newName,
-      }, displayError);
-    }
-  };
-
-  this.editList = () => {
-    this.state.set('editing', true);
-
-    // force the template to redraw based on the reactive change
-    Tracker.flush();
-    // We need to wait for the fade in animation to complete to reliably focus the input
-    Meteor.setTimeout(() => {
-      this.$('.js-edit-form input[type=text]').focus();
-    }, 400);
-  };
-
-  this.deleteList = () => {
-    const list = this.data.list();
-    const message = `${TAPi18n.__('Are you sure you want to delete the list')} ${list.name}?`;
-
-    if (confirm(message)) { // eslint-disable-line no-alert
-      remove.call({
-        listId: list._id,
-      }, displayError);
-
-      FlowRouter.go('App.home');
-      return true;
-    }
-
-    return false;
-  };
-
-  this.toggleListPrivacy = () => {
-    const list = this.data.list();
-    if (list.userId) {
-      makePublic.call({ listId: list._id }, displayError);
-    } else {
-      makePrivate.call({ listId: list._id }, displayError);
-    }
-  };
-});
-
-Template.Lists_show.helpers({
-  todoArgs(todo) {
-    const instance = Template.instance();
-    return {
-      todo,
-      editing: instance.state.equals('editingTodo', todo._id),
-      onEditingChange(editing) {
-        instance.state.set('editingTodo', editing ? todo._id : false);
-      },
-    };
-  },
-  editing() {
-    const instance = Template.instance();
-    return instance.state.get('editing');
-  },
-});
-
-Template.Lists_show.events({
-  'click .js-cancel'(event, instance) {
-    instance.state.set('editing', false);
-  },
-
-  'keydown input[type=text]'(event) {
-    // ESC
-    if (event.which === 27) {
-      event.preventDefault();
-      $(event.target).blur();
-    }
-  },
-
-  'blur input[type=text]'(event, instance) {
-    // if we are still editing (we haven't just clicked the cancel button)
-    if (instance.state.get('editing')) {
-      instance.saveList();
-    }
-  },
-
-  'submit .js-edit-form'(event, instance) {
-    event.preventDefault();
-    instance.saveList();
-  },
-
-  // handle mousedown otherwise the blur handler above will swallow the click
-  // on iOS, we still require the click event so handle both
-  'mousedown .js-cancel, click .js-cancel'(event, instance) {
-    event.preventDefault();
-    instance.state.set('editing', false);
-  },
-
-  // This is for the mobile dropdown
-  'change .list-edit'(event, instance) {
-    const target = event.target;
-    if ($(target).val() === 'edit') {
-      instance.editList();
-    } else if ($(target).val() === 'delete') {
-      instance.deleteList();
-    } else {
-      instance.toggleListPrivacy();
-    }
-
-    target.selectedIndex = 0;
-  },
-
-  'click .js-edit-list'(event, instance) {
-    instance.editList();
-  },
-
-  'click .js-toggle-list-privacy'(event, instance) {
-    instance.toggleListPrivacy();
-  },
-
-  'click .js-delete-list'(event, instance) {
-    instance.deleteList();
-  },
-
-  'click .js-todo-add'(event, instance) {
-    instance.$('.js-todo-new input').focus();
-  },
-
-  'submit .js-todo-new'(event) {
-    event.preventDefault();
-
-    const $input = $(event.target).find('[type=text]');
-    if (!$input.val()) {
-      return;
-    }
-
-    insert.call({
-      listId: this.list()._id,
-      text: $input.val(),
-    }, displayError);
-
-    $input.val('');
-  },
-});
diff --git a/imports/ui/pages/lists-show-page.html b/imports/ui/pages/lists-show-page.html
deleted file mode 100755
index 91c8662..0000000
--- a/imports/ui/pages/lists-show-page.html
+++ /dev/null
@@ -1,9 +0,0 @@
-<template name="Lists_show_page">
-  {{#if listIdArray}}
-    {{#each listId in listIdArray}}
-      {{> Lists_show (listArgs listId)}}
-    {{/each}}
-  {{else}}
-    {{> App_notFound}}
-  {{/if}}
-</template>
diff --git a/imports/ui/pages/lists-show-page.js b/imports/ui/pages/lists-show-page.js
deleted file mode 100755
index a174e96..0000000
--- a/imports/ui/pages/lists-show-page.js
+++ /dev/null
@@ -1,57 +0,0 @@
-import { Template } from 'meteor/templating';
-import { FlowRouter } from 'meteor/kadira:flow-router';
-
-import { Lists } from '../../api/lists/lists.js';
-
-import { listRenderHold } from '../launch-screen.js';
-import './lists-show-page.html';
-
-// Components used inside the template
-import './app-not-found.js';
-import '../components/lists-show.js';
-
-Template.Lists_show_page.onCreated(function listsShowPageOnCreated() {
-  this.getListId = () => this.data._id;
-
-  this.autorun(() => {
-    this.subscribe('todos.inList', this.getListId());
-  });
-});
-
-Template.Lists_show_page.onRendered(function listsShowPageOnRendered() {
-  this.autorun(() => {
-    if (this.subscriptionsReady()) {
-      listRenderHold.release();
-    }
-  });
-});
-
-Template.Lists_show_page.helpers({
-  // We use #each on an array of one item so that the "list" template is
-  // removed and a new copy is added when changing lists, which is
-  // important for animation purposes.
-  listIdArray() {
-    const instance = Template.instance();
-    const listId = instance.getListId();
-    return Lists.findOne(listId) ? [listId] : [];
-  },
-  listArgs(listId) {
-    const instance = Template.instance();
-    // By finding the list with only the `_id` field set, we don't create a dependency on the
-    // `list.incompleteCount`, and avoid re-rendering the todos when it changes
-    const list = Lists.findOne(listId, { fields: { _id: true } });
-    const todos = list && list.todos();
-    return {
-      todosReady: instance.subscriptionsReady(),
-      // We pass `list` (which contains the full list, with all fields, as a function
-      // because we want to control reactivity. When you check a todo item, the
-      // `list.incompleteCount` changes. If we didn't do this the entire list would
-      // re-render whenever you checked an item. By isolating the reactiviy on the list
-      // to the area that cares about it, we stop it from happening.
-      list() {
-        return Lists.findOne(listId);
-      },
-      todos,
-    };
-  },
-});
-- 
2.10.2


From 6c2b0c028e9353d7de7f5192e6d20530b55b8f1f Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@Dotans-MacBook-Pro.local>
Date: Tue, 22 Nov 2016 14:07:35 +0200
Subject: [PATCH 70/89] Step 12: Migrate the Todo List

---
 manuals/templates/step12.md |  21 +++
 manuals/views/step12.md     | 421 ++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 442 insertions(+)
 create mode 100644 manuals/templates/step12.md
 create mode 100644 manuals/views/step12.md

diff --git a/manuals/templates/step12.md b/manuals/templates/step12.md
new file mode 100644
index 0000000..15f9c90
--- /dev/null
+++ b/manuals/templates/step12.md
@@ -0,0 +1,21 @@
+So let's continue! now we will migrate the list of todo, so far we use an existing Blaze Template called `Lists_show_page` inside a new Angular 2 Component called `ListShowComponent`.
+
+First, let's modify the template, we use the same techniques we learned in the previous steps - we will use the existing template and just change the events, bindings and directives:
+
+{{{diff_step 12.1}}} 
+
+And because we are using RxJS Observable as a wrapper for our data, we need to add `async` Pipe in our view, and let's migrate the Template code into a Component
+
+{{{diff_step 12.2}}} 
+
+> At the moment, we will use the exiting `Todo_item` template to show the items - we will later migrate it too - so we just pass the required params using `getContextForItem`.
+
+And now let's implement and migrate the code into the Component's class, and let's add the events in the view
+
+{{{diff_step 12.3}}} 
+
+And remember we wrapped the Collection? we need to do the same for Todo Collection:
+
+{{{diff_step 12.4}}} 
+
+That's it! we can now remove the old files of this Template (`imports/ui/components/lists-show.html`, `imports/ui/components/lists-show.js`, `imports/ui/pages/lists-show-page.js`, `imports/ui/pages/lists-show-page.html`), and we can removed the imports for those files from the routes file (`imports/startup/client/routes.js`).
diff --git a/manuals/views/step12.md b/manuals/views/step12.md
new file mode 100644
index 0000000..984e5d5
--- /dev/null
+++ b/manuals/views/step12.md
@@ -0,0 +1,421 @@
+[{]: <region> (header)
+# Step 12: Migrate the Todo List
+[}]: #
+[{]: <region> (body)
+So let's continue! now we will migrate the list of todo, so far we use an existing Blaze Template called `Lists_show_page` inside a new Angular 2 Component called `ListShowComponent`.
+
+First, let's modify the template, we use the same techniques we learned in the previous steps - we will use the existing template and just change the events, bindings and directives:
+
+[{]: <helper> (diff_step 12.1)
+#### Step 12.1: Migrate the list_show template
+
+##### Added client/imports/components/list-show.ng2.html
+```diff
+@@ -0,0 +1,65 @@
++┊  ┊ 1┊<div class="page lists-show">
++┊  ┊ 2┊    <nav class="js-title-nav" *ngIf="list">
++┊  ┊ 3┊        <form *ngIf="editing" class="js-edit-form list-edit-form">
++┊  ┊ 4┊            <input type="text" name="name" [value]="editModel.name">
++┊  ┊ 5┊            <div class="nav-group right">
++┊  ┊ 6┊                <a href="#" class="js-cancel nav-item">
++┊  ┊ 7┊                    <span class="icon-close js-cancel" title="Cancel"></span>
++┊  ┊ 8┊                </a>
++┊  ┊ 9┊            </div>
++┊  ┊10┊        </form>
++┊  ┊11┊        <div *ngIf="!editing">
++┊  ┊12┊            <div class="nav-group">
++┊  ┊13┊                <a href="#" class="js-menu nav-item">
++┊  ┊14┊                    <span class="icon-list-unordered" title="Show Menu"></span>
++┊  ┊15┊                </a>
++┊  ┊16┊            </div>
++┊  ┊17┊
++┊  ┊18┊            <h1 class="js-edit-list title-page">
++┊  ┊19┊                <span class="title-wrapper">{{list.name}}</span>
++┊  ┊20┊                <span class="count-list">{{list.incompleteCount}}</span>
++┊  ┊21┊            </h1>
++┊  ┊22┊
++┊  ┊23┊            <div class="nav-group right">
++┊  ┊24┊                <div class="nav-item options-mobile">
++┊  ┊25┊                    <select class="list-edit">
++┊  ┊26┊                        <option disabled selected>Select an action</option>
++┊  ┊27┊                        <option *ngIf="list.userId" value="public">Make Public</option>
++┊  ┊28┊                        <option *ngIf="!list.userId" value="private">Make Private</option>
++┊  ┊29┊                        <option value="delete">Delete</option>
++┊  ┊30┊                    </select>
++┊  ┊31┊                    <span class="icon-cog"></span>
++┊  ┊32┊                </div>
++┊  ┊33┊                <div class="options-web">
++┊  ┊34┊                    <a class="js-toggle-list-privacy nav-item">
++┊  ┊35┊                        <span *ngIf="list.userId" class="icon-lock" title="Make list public"></span>
++┊  ┊36┊                        <span *ngIf="!list.userId" class="icon-unlock" title="Make list private"></span>
++┊  ┊37┊                    </a>
++┊  ┊38┊                    <a class="js-delete-list nav-item">
++┊  ┊39┊                        <span class="icon-trash" title="Delete list"></span>
++┊  ┊40┊                    </a>
++┊  ┊41┊                </div>
++┊  ┊42┊            </div>
++┊  ┊43┊        </div>
++┊  ┊44┊
++┊  ┊45┊        <form class="js-todo-new todo-new input-symbol">
++┊  ┊46┊            <input type="text" placeholder="Type to add new tasks">
++┊  ┊47┊            <span class="icon-add js-todo-add"></span>
++┊  ┊48┊        </form>
++┊  ┊49┊    </nav>
++┊  ┊50┊
++┊  ┊51┊    <div class="content-scrollable list-items">
++┊  ┊52┊        <div *ngIf="todosReady">
++┊  ┊53┊            <div *ngFor="let todo of todos">
++┊  ┊54┊                <blaze-template name="Todos_item" [context]="getContextForItem(todo)"></blaze-template>
++┊  ┊55┊            </div>
++┊  ┊56┊            <div class="wrapper-message" *ngIf="!todos || todos.length == 0">
++┊  ┊57┊                <div class="title-message">No tasks here</div>
++┊  ┊58┊                <div class="subtitle-message">Add new tasks using the field above</div>
++┊  ┊59┊            </div>
++┊  ┊60┊        </div>
++┊  ┊61┊        <div *ngIf="!todosReady" class="wrapper-message">
++┊  ┊62┊            <div class="title-message">Loading tasks...</div>
++┊  ┊63┊        </div>
++┊  ┊64┊    </div>
++┊  ┊65┊</div>🚫↵
+```
+[}]: # 
+
+And because we are using RxJS Observable as a wrapper for our data, we need to add `async` Pipe in our view, and let's migrate the Template code into a Component
+
+[{]: <helper> (diff_step 12.2)
+#### Step 12.2: Added logic for the list show component
+
+##### Changed client/imports/components/list-show.component.ts
+```diff
+@@ -1,11 +1,16 @@
+ ┊ 1┊ 1┊import {Component, OnInit} from "@angular/core";
+ ┊ 2┊ 2┊import {ActivatedRoute, Params} from "@angular/router";
++┊  ┊ 3┊import {MeteorObservable} from "meteor-rxjs";
++┊  ┊ 4┊import {Lists} from "../../../imports/api/lists/lists";
+ ┊ 3┊ 5┊
+ ┊ 4┊ 6┊@Component({
+ ┊ 5┊ 7┊    template: '<blaze-template *ngIf="templateContext" name="Lists_show_page" [context]="templateContext"></blaze-template>'
+ ┊ 6┊ 8┊})
+ ┊ 7┊ 9┊export class ListShowComponent implements OnInit {
+-┊ 8┊  ┊    private templateContext: any;
++┊  ┊10┊    private list : any;
++┊  ┊11┊    private todosReady : boolean = false;
++┊  ┊12┊    private todos : Array<any>;
++┊  ┊13┊    private editing : boolean = false;
+ ┊ 9┊14┊
+ ┊10┊15┊    constructor(private currentRoute: ActivatedRoute) {
+ ┊11┊16┊
+```
+```diff
+@@ -14,10 +19,25 @@
+ ┊14┊19┊    ngOnInit() {
+ ┊15┊20┊        this.currentRoute.params.subscribe((params: Params) => {
+ ┊16┊21┊            const listId = params['_id'];
++┊  ┊22┊            MeteorObservable.subscribe('todos.inList', listId).subscribe();
+ ┊17┊23┊
+-┊18┊  ┊            this.templateContext = {
+-┊19┊  ┊                _id: listId
+-┊20┊  ┊            };
++┊  ┊24┊            MeteorObservable.autorun().zone().subscribe(() => {
++┊  ┊25┊                if (listId && Lists.findOne(listId)) {
++┊  ┊26┊                    this.list = Lists.findOne(listId);
++┊  ┊27┊                    this.todosReady = true;
++┊  ┊28┊                    this.todos = this.list.todos();
++┊  ┊29┊                }
++┊  ┊30┊            })
+ ┊21┊31┊        });
+ ┊22┊32┊    }
++┊  ┊33┊
++┊  ┊34┊    getContextForItem(todo) {
++┊  ┊35┊        return {
++┊  ┊36┊              todo: todo,
++┊  ┊37┊              editing: false,
++┊  ┊38┊              onEditingChange(editing) {
++┊  ┊39┊
++┊  ┊40┊              },
++┊  ┊41┊        }
++┊  ┊42┊    }
+ ┊23┊43┊}🚫↵
+```
+
+##### Changed client/imports/components/list-show.ng2.html
+```diff
+@@ -50,7 +50,7 @@
+ ┊50┊50┊
+ ┊51┊51┊    <div class="content-scrollable list-items">
+ ┊52┊52┊        <div *ngIf="todosReady">
+-┊53┊  ┊            <div *ngFor="let todo of todos">
++┊  ┊53┊            <div *ngFor="let todo of todos | async">
+ ┊54┊54┊                <blaze-template name="Todos_item" [context]="getContextForItem(todo)"></blaze-template>
+ ┊55┊55┊            </div>
+ ┊56┊56┊            <div class="wrapper-message" *ngIf="!todos || todos.length == 0">
+```
+[}]: # 
+
+> At the moment, we will use the exiting `Todo_item` template to show the items - we will later migrate it too - so we just pass the required params using `getContextForItem`.
+
+And now let's implement and migrate the code into the Component's class, and let's add the events in the view
+
+[{]: <helper> (diff_step 12.3)
+#### Step 12.3: Implemented the events in the UI
+
+##### Changed client/imports/components/list-show.component.ts
+```diff
+@@ -1,43 +1,112 @@
+ ┊  1┊  1┊import {Component, OnInit} from "@angular/core";
+-┊  2┊   ┊import {ActivatedRoute, Params} from "@angular/router";
++┊   ┊  2┊import {ActivatedRoute, Params, Router} from "@angular/router";
+ ┊  3┊  3┊import {MeteorObservable} from "meteor-rxjs";
+ ┊  4┊  4┊import {Lists} from "../../../imports/api/lists/lists";
++┊   ┊  5┊import {
++┊   ┊  6┊  updateName,
++┊   ┊  7┊  makePublic,
++┊   ┊  8┊  makePrivate,
++┊   ┊  9┊  remove,
++┊   ┊ 10┊  insert,
++┊   ┊ 11┊} from '../../../imports/api/todos/methods';
++┊   ┊ 12┊import { displayError } from '../../../imports/ui/lib/errors';
++┊   ┊ 13┊import {Observable} from "rxjs";
+ ┊  5┊ 14┊
+ ┊  6┊ 15┊@Component({
+-┊  7┊   ┊    template: '<blaze-template *ngIf="templateContext" name="Lists_show_page" [context]="templateContext"></blaze-template>'
++┊   ┊ 16┊    templateUrl: '/client/imports/components/list-show.html'
+ ┊  8┊ 17┊})
+ ┊  9┊ 18┊export class ListShowComponent implements OnInit {
+ ┊ 10┊ 19┊    private list : any;
+ ┊ 11┊ 20┊    private todosReady : boolean = false;
+-┊ 12┊   ┊    private todos : Array<any>;
++┊   ┊ 21┊    private todos : Observable<any>;
+ ┊ 13┊ 22┊    private editing : boolean = false;
++┊   ┊ 23┊    private editModel : any;
++┊   ┊ 24┊    private newItemModel : string = '';
+ ┊ 14┊ 25┊
+-┊ 15┊   ┊    constructor(private currentRoute: ActivatedRoute) {
+-┊ 16┊   ┊
++┊   ┊ 26┊    constructor(private currentRoute: ActivatedRoute, private router: Router) {
++┊   ┊ 27┊        this.editModel = {
++┊   ┊ 28┊            name: ''
++┊   ┊ 29┊        }
+ ┊ 17┊ 30┊    }
+ ┊ 18┊ 31┊
+ ┊ 19┊ 32┊    ngOnInit() {
+ ┊ 20┊ 33┊        this.currentRoute.params.subscribe((params: Params) => {
+ ┊ 21┊ 34┊            const listId = params['_id'];
+-┊ 22┊   ┊            MeteorObservable.subscribe('todos.inList', listId).subscribe();
++┊   ┊ 35┊            MeteorObservable.subscribe('todos.inList', listId).zone().subscribe();
+ ┊ 23┊ 36┊
+ ┊ 24┊ 37┊            MeteorObservable.autorun().zone().subscribe(() => {
+ ┊ 25┊ 38┊                if (listId && Lists.findOne(listId)) {
+ ┊ 26┊ 39┊                    this.list = Lists.findOne(listId);
+ ┊ 27┊ 40┊                    this.todosReady = true;
+-┊ 28┊   ┊                    this.todos = this.list.todos();
++┊   ┊ 41┊                    this.todos = this.list.todos().zone();
+ ┊ 29┊ 42┊                }
+ ┊ 30┊ 43┊            })
+ ┊ 31┊ 44┊        });
+ ┊ 32┊ 45┊    }
+ ┊ 33┊ 46┊
++┊   ┊ 47┊    deleteList() {
++┊   ┊ 48┊        const list = this.list;
++┊   ┊ 49┊        const message = `Are you sure you want to delete the list?`;
++┊   ┊ 50┊
++┊   ┊ 51┊        if (confirm(message)) {
++┊   ┊ 52┊            remove.call({
++┊   ┊ 53┊                listId: list._id,
++┊   ┊ 54┊            }, displayError);
++┊   ┊ 55┊
++┊   ┊ 56┊            this.router.navigate(['Home']);
++┊   ┊ 57┊
++┊   ┊ 58┊            return true;
++┊   ┊ 59┊        }
++┊   ┊ 60┊
++┊   ┊ 61┊        return false;
++┊   ┊ 62┊    }
++┊   ┊ 63┊
++┊   ┊ 64┊    editList(toggle) {
++┊   ┊ 65┊        this.editModel.name = this.list.name;
++┊   ┊ 66┊        this.editing = toggle;
++┊   ┊ 67┊    }
++┊   ┊ 68┊
++┊   ┊ 69┊    toggleListPrivacy() {
++┊   ┊ 70┊        const list = this.list;
++┊   ┊ 71┊
++┊   ┊ 72┊        if (list.userId) {
++┊   ┊ 73┊            makePublic.call({ listId: list._id }, displayError);
++┊   ┊ 74┊        } else {
++┊   ┊ 75┊            makePrivate.call({ listId: list._id }, displayError);
++┊   ┊ 76┊        }
++┊   ┊ 77┊    }
++┊   ┊ 78┊
++┊   ┊ 79┊    addNew() {
++┊   ┊ 80┊        if (this.newItemModel == '') {
++┊   ┊ 81┊            return;
++┊   ┊ 82┊        }
++┊   ┊ 83┊
++┊   ┊ 84┊        insert.call({
++┊   ┊ 85┊            listId: this.list._id,
++┊   ┊ 86┊            text: this.newItemModel,
++┊   ┊ 87┊        }, displayError);
++┊   ┊ 88┊
++┊   ┊ 89┊        this.newItemModel = '';
++┊   ┊ 90┊    }
++┊   ┊ 91┊
++┊   ┊ 92┊    saveList() {
++┊   ┊ 93┊        if (this.editing) {
++┊   ┊ 94┊            updateName.call({
++┊   ┊ 95┊                listId: this.list._id,
++┊   ┊ 96┊                newName: this.editModel.name,
++┊   ┊ 97┊            }, displayError);
++┊   ┊ 98┊
++┊   ┊ 99┊            this.editing = false;
++┊   ┊100┊        }
++┊   ┊101┊    }
++┊   ┊102┊
+ ┊ 34┊103┊    getContextForItem(todo) {
+ ┊ 35┊104┊        return {
+-┊ 36┊   ┊              todo: todo,
+-┊ 37┊   ┊              editing: false,
+-┊ 38┊   ┊              onEditingChange(editing) {
++┊   ┊105┊            todo: todo,
++┊   ┊106┊            editing: false,
++┊   ┊107┊            onEditingChange(editing) {
+ ┊ 39┊108┊
+-┊ 40┊   ┊              },
++┊   ┊109┊            },
+ ┊ 41┊110┊        }
+ ┊ 42┊111┊    }
+ ┊ 43┊112┊}🚫↵
+```
+
+##### Changed client/imports/components/list-show.ng2.html
+```diff
+@@ -1,9 +1,9 @@
+ ┊1┊1┊<div class="page lists-show">
+ ┊2┊2┊    <nav class="js-title-nav" *ngIf="list">
+-┊3┊ ┊        <form *ngIf="editing" class="js-edit-form list-edit-form">
+-┊4┊ ┊            <input type="text" name="name" [value]="editModel.name">
++┊ ┊3┊        <form *ngIf="editing" class="js-edit-form list-edit-form" (ngSubmit)="saveList()" #editForm="ngForm">
++┊ ┊4┊            <input type="text" [(ngModel)]="editModel.name" (blur)="saveList()" name="editNameInput">
+ ┊5┊5┊            <div class="nav-group right">
+-┊6┊ ┊                <a href="#" class="js-cancel nav-item">
++┊ ┊6┊                <a href="#" class="js-cancel nav-item" (click)="editList(false)">
+ ┊7┊7┊                    <span class="icon-close js-cancel" title="Cancel"></span>
+ ┊8┊8┊                </a>
+ ┊9┊9┊            </div>
+```
+```diff
+@@ -15,7 +15,7 @@
+ ┊15┊15┊                </a>
+ ┊16┊16┊            </div>
+ ┊17┊17┊
+-┊18┊  ┊            <h1 class="js-edit-list title-page">
++┊  ┊18┊            <h1 class="js-edit-list title-page" (click)="editList(true)">
+ ┊19┊19┊                <span class="title-wrapper">{{list.name}}</span>
+ ┊20┊20┊                <span class="count-list">{{list.incompleteCount}}</span>
+ ┊21┊21┊            </h1>
+```
+```diff
+@@ -31,19 +31,19 @@
+ ┊31┊31┊                    <span class="icon-cog"></span>
+ ┊32┊32┊                </div>
+ ┊33┊33┊                <div class="options-web">
+-┊34┊  ┊                    <a class="js-toggle-list-privacy nav-item">
++┊  ┊34┊                    <a class="js-toggle-list-privacy nav-item" (click)="toggleListPrivacy()">
+ ┊35┊35┊                        <span *ngIf="list.userId" class="icon-lock" title="Make list public"></span>
+ ┊36┊36┊                        <span *ngIf="!list.userId" class="icon-unlock" title="Make list private"></span>
+ ┊37┊37┊                    </a>
+-┊38┊  ┊                    <a class="js-delete-list nav-item">
++┊  ┊38┊                    <a class="js-delete-list nav-item" (click)="deleteList()">
+ ┊39┊39┊                        <span class="icon-trash" title="Delete list"></span>
+ ┊40┊40┊                    </a>
+ ┊41┊41┊                </div>
+ ┊42┊42┊            </div>
+ ┊43┊43┊        </div>
+ ┊44┊44┊
+-┊45┊  ┊        <form class="js-todo-new todo-new input-symbol">
+-┊46┊  ┊            <input type="text" placeholder="Type to add new tasks">
++┊  ┊45┊        <form class="js-todo-new todo-new input-symbol" (ngSubmit)="addNew()" #newForm="ngForm">
++┊  ┊46┊            <input type="text" placeholder="Type to add new tasks" [(ngModel)]="newItemModel" name="newItemInput">
+ ┊47┊47┊            <span class="icon-add js-todo-add"></span>
+ ┊48┊48┊        </form>
+ ┊49┊49┊    </nav>
+```
+[}]: # 
+
+And remember we wrapped the Collection? we need to do the same for Todo Collection:
+
+[{]: <helper> (diff_step 12.4)
+#### Step 12.4: Changes in the Todos collection
+
+##### Changed imports/api/todos/todos.js
+```diff
+@@ -1,6 +1,7 @@
+ ┊1┊1┊import { Mongo } from 'meteor/mongo';
+ ┊2┊2┊import { Factory } from 'meteor/factory';
+ ┊3┊3┊import faker from 'faker';
++┊ ┊4┊import {MongoObservable} from "meteor-rxjs";
+ ┊4┊5┊
+ ┊5┊6┊import incompleteCountDenormalizer from './incompleteCountDenormalizer.js';
+ ┊6┊7┊import { SimpleSchema } from 'meteor/aldeed:simple-schema';
+```
+```diff
+@@ -27,16 +28,16 @@
+ ┊27┊28┊  }
+ ┊28┊29┊}
+ ┊29┊30┊
+-┊30┊  ┊export const Todos = new TodosCollection('Todos');
++┊  ┊31┊export const Todos = new MongoObservable.fromExisting(new TodosCollection('Todos'));
+ ┊31┊32┊
+ ┊32┊33┊// Deny all client-side updates since we will be using methods to manage this collection
+-┊33┊  ┊Todos.deny({
++┊  ┊34┊Todos.collection.deny({
+ ┊34┊35┊  insert() { return true; },
+ ┊35┊36┊  update() { return true; },
+ ┊36┊37┊  remove() { return true; },
+ ┊37┊38┊});
+ ┊38┊39┊
+-┊39┊  ┊Todos.schema = new SimpleSchema({
++┊  ┊40┊let schema = new SimpleSchema({
+ ┊40┊41┊  listId: {
+ ┊41┊42┊    type: String,
+ ┊42┊43┊    regEx: SimpleSchema.RegEx.Id,
+```
+```diff
+@@ -56,12 +57,12 @@
+ ┊56┊57┊  },
+ ┊57┊58┊});
+ ┊58┊59┊
+-┊59┊  ┊Todos.attachSchema(Todos.schema);
++┊  ┊60┊Todos.collection.attachSchema(schema);
+ ┊60┊61┊
+ ┊61┊62┊// This represents the keys from Lists objects that should be published
+ ┊62┊63┊// to the client. If we add secret properties to List objects, don't list
+ ┊63┊64┊// them here to keep them private to the server.
+-┊64┊  ┊Todos.publicFields = {
++┊  ┊65┊Todos.collection.publicFields = {
+ ┊65┊66┊  listId: 1,
+ ┊66┊67┊  text: 1,
+ ┊67┊68┊  createdAt: 1,
+```
+```diff
+@@ -77,7 +78,7 @@
+ ┊77┊78┊  createdAt: () => new Date(),
+ ┊78┊79┊});
+ ┊79┊80┊
+-┊80┊  ┊Todos.helpers({
++┊  ┊81┊Todos.collection.helpers({
+ ┊81┊82┊  list() {
+ ┊82┊83┊    return Lists.findOne(this.listId);
+ ┊83┊84┊  },
+```
+[}]: # 
+
+That's it! we can now remove the old files of this Template (`imports/ui/components/lists-show.html`, `imports/ui/components/lists-show.js`, `imports/ui/pages/lists-show-page.js`, `imports/ui/pages/lists-show-page.html`), and we can removed the imports for those files from the routes file (`imports/startup/client/routes.js`).
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step11.md) | [Next Step >](step13.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 61b60f4885213cbe6250c92a32134400184706df Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 20:08:13 +0300
Subject: [PATCH 71/89] Step 13.1: Added the list item component

---
 client/imports/components/list-item.component.ts | 53 ++++++++++++++++++++++++
 1 file changed, 53 insertions(+)
 create mode 100644 client/imports/components/list-item.component.ts

diff --git a/client/imports/components/list-item.component.ts b/client/imports/components/list-item.component.ts
new file mode 100644
index 0000000..1d3dcf3
--- /dev/null
+++ b/client/imports/components/list-item.component.ts
@@ -0,0 +1,53 @@
+import {Component, Input, Output, EventEmitter} from '@angular/core';
+import {
+  setCheckedStatus,
+  updateText,
+  remove,
+} from '../../../imports/api/todos/methods';
+import {displayError} from '../../../imports/ui/lib/errors';
+
+declare let _;
+
+@Component({
+  selector: 'list-item',
+  templateUrl: '/client/imports/components/list-item.html'
+})
+export class ListItemComponent {
+  @Input("todo") todo: any;
+  @Input("editing") editing: boolean;
+  @Output("editChange") editChange = new EventEmitter();
+
+  constructor() {
+  }
+
+  toggleEdit(isEdit) {
+    if (!isEdit || (isEdit && this.editing)) {
+      this.editChange.emit({
+        editing: isEdit,
+        todoId: this.todo._id
+      });
+    }
+  }
+
+  remove() {
+    remove.call({
+      todoId: this.todo._id,
+    }, displayError);
+  }
+
+  checkedChange(event) {
+    setCheckedStatus.call({
+      todoId: this.todo._id,
+      newCheckedStatus: event.target.checked,
+    });
+  }
+
+  updateText(event) {
+    _.throttle((event) => {
+      updateText.call({
+        todoId: this.todo._id,
+        newText: event.target.value,
+      }, displayError);
+    }, 300)(event);
+  }
+}
\ No newline at end of file
-- 
2.10.2


From 73dd96614e344da5fb0b13a15725294c26a013ea Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 20:08:37 +0300
Subject: [PATCH 72/89] Step 13.2: Added the new component to the module

---
 client/imports/app.module.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/app.module.ts b/client/imports/app.module.ts
index c0c30d5..09988df 100644
--- a/client/imports/app.module.ts
+++ b/client/imports/app.module.ts
@@ -8,6 +8,7 @@ import {Angular2BlazeTemplateModule} from "angular2-blaze-template";
 import {JoinComponent} from "./components/join.component";
 import {SigninComponent} from "./components/signin.component";
 import {FormsModule} from "@angular/forms";
+import {ListItemComponent} from "./components/list-item.component";
 
 @NgModule({
     // Components, Pipes, Directive
@@ -16,7 +17,8 @@ import {FormsModule} from "@angular/forms";
         ListShowComponent,
         ListRedirectorComponent,
         JoinComponent,
-        SigninComponent
+        SigninComponent,
+        ListItemComponent
     ],
     // Entry Components
     entryComponents: [
-- 
2.10.2


From f6c2431bed7c0796b7e13176529992146b15457a Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 20:08:50 +0300
Subject: [PATCH 73/89] Step 13.3: Added the list item view

---
 client/imports/components/list-item.ng2.html | 11 +++++++++++
 1 file changed, 11 insertions(+)
 create mode 100644 client/imports/components/list-item.ng2.html

diff --git a/client/imports/components/list-item.ng2.html b/client/imports/components/list-item.ng2.html
new file mode 100644
index 0000000..fe652b9
--- /dev/null
+++ b/client/imports/components/list-item.ng2.html
@@ -0,0 +1,11 @@
+<div class="list-item" [ngClass]="{'editing': editing, 'checked': todo.checked}">
+    <label class="checkbox">
+        <input type="checkbox" [checked]="todo.checked" (change)="checkedChange($event)" name="checked">
+        <span class="checkbox-custom"></span>
+    </label>
+
+    <input type="text" [value]="todo.text" (blur)="toggleEdit(false)" (focus)="toggleEdit(true)" (keyup)="updateText($event)" placeholder="Task name">
+    <a class="js-delete-item delete-item" (click)="remove()">
+        <span class="icon-trash"></span>
+    </a>
+</div>
\ No newline at end of file
-- 
2.10.2


From d92ba677c5890e8d52dc7b8338d4cc590e46f8a5 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 20:09:06 +0300
Subject: [PATCH 74/89] Step 13.4: Updated the usage in the list show component

---
 client/imports/components/list-show.ng2.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/components/list-show.ng2.html b/client/imports/components/list-show.ng2.html
index bf1f200..04da1c3 100644
--- a/client/imports/components/list-show.ng2.html
+++ b/client/imports/components/list-show.ng2.html
@@ -51,7 +51,7 @@
     <div class="content-scrollable list-items">
         <div *ngIf="todosReady">
             <div *ngFor="let todo of todos | async">
-                <blaze-template name="Todos_item" [context]="getContextForItem(todo)"></blaze-template>
+                <list-item [todo]="todo" [editing]="editingTodo" (editChange)="onTodoItemEditChange($event)"></list-item>
             </div>
             <div class="wrapper-message" *ngIf="!todos || todos.length == 0">
                 <div class="title-message">No tasks here</div>
-- 
2.10.2


From 7a9e15713ed6f031ce43b7244131e91355d4fa44 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 20:10:59 +0300
Subject: [PATCH 75/89] Step 13.5: Added events and usage of the new component

---
 client/imports/components/list-show.component.ts | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/client/imports/components/list-show.component.ts b/client/imports/components/list-show.component.ts
index 08b2a84..43cd1a7 100644
--- a/client/imports/components/list-show.component.ts
+++ b/client/imports/components/list-show.component.ts
@@ -22,6 +22,7 @@ export class ListShowComponent implements OnInit {
     private editing : boolean = false;
     private editModel : any;
     private newItemModel : string = '';
+    private editingTodo : number | boolean;
 
     constructor(private currentRoute: ActivatedRoute, private router: Router) {
         this.editModel = {
@@ -100,13 +101,12 @@ export class ListShowComponent implements OnInit {
         }
     }
 
-    getContextForItem(todo) {
-        return {
-            todo: todo,
-            editing: false,
-            onEditingChange(editing) {
-
-            },
+    onTodoItemEditChange(event) {
+        if (event.editing) {
+            this.editingTodo = event.todoId;
+        }
+        else {
+            this.editingTodo = false;
         }
     }
 }
\ No newline at end of file
-- 
2.10.2


From 4f71e4ba19e65a956fadb6a08bdb5fbfc56f27bd Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 20:11:45 +0300
Subject: [PATCH 76/89] Step 13.6: Removed old todo item template

---
 imports/startup/client/routes.js      |  3 +-
 imports/ui/components/todos-item.html | 13 ------
 imports/ui/components/todos-item.js   | 81 -----------------------------------
 3 files changed, 1 insertion(+), 96 deletions(-)
 delete mode 100755 imports/ui/components/todos-item.html
 delete mode 100755 imports/ui/components/todos-item.js

diff --git a/imports/startup/client/routes.js b/imports/startup/client/routes.js
index 3cd6bc1..e065b9a 100755
--- a/imports/startup/client/routes.js
+++ b/imports/startup/client/routes.js
@@ -2,5 +2,4 @@ import { FlowRouter } from 'meteor/kadira:flow-router';
 import { BlazeLayout } from 'meteor/kadira:blaze-layout';
 
 // Import to load these templates
-import '../../ui/pages/app-not-found.js';
-import '../../ui/components/todos-item.js';
\ No newline at end of file
+import '../../ui/pages/app-not-found.js';
\ No newline at end of file
diff --git a/imports/ui/components/todos-item.html b/imports/ui/components/todos-item.html
deleted file mode 100755
index 0c538e4..0000000
--- a/imports/ui/components/todos-item.html
+++ /dev/null
@@ -1,13 +0,0 @@
-<template name="Todos_item">
-  <div class="list-item {{checkedClass todo}} {{editingClass editing}}">
-    <label class="checkbox">
-      <input type="checkbox" checked="{{todo.checked}}" name="checked">
-      <span class="checkbox-custom"></span>
-    </label>
-
-    <input type="text" value="{{todo.text}}" placeholder={{_ 'Task name'}}>
-    <a class="js-delete-item delete-item" href="#">
-      <span class="icon-trash"></span>
-    </a>
-  </div>
-</template>
diff --git a/imports/ui/components/todos-item.js b/imports/ui/components/todos-item.js
deleted file mode 100755
index 3610aca..0000000
--- a/imports/ui/components/todos-item.js
+++ /dev/null
@@ -1,81 +0,0 @@
-import { Template } from 'meteor/templating';
-import { SimpleSchema } from 'meteor/aldeed:simple-schema';
-import { $ } from 'meteor/jquery';
-import { _ } from 'meteor/underscore';
-
-import './todos-item.html';
-import { Todos } from '../../api/todos/todos.js';
-
-import {
-  setCheckedStatus,
-  updateText,
-  remove,
-} from '../../api/todos/methods.js';
-
-import { displayError } from '../lib/errors.js';
-
-Template.Todos_item.onCreated(function todosItemOnCreated() {
-  this.autorun(() => {
-    new SimpleSchema({
-      todo: { type: Todos._helpers },
-      editing: { type: Boolean, optional: true },
-      onEditingChange: { type: Function },
-    }).validate(Template.currentData());
-  });
-});
-
-Template.Todos_item.helpers({
-  checkedClass(todo) {
-    return todo.checked && 'checked';
-  },
-  editingClass(editing) {
-    return editing && 'editing';
-  },
-});
-
-Template.Todos_item.events({
-  'change [type=checkbox]'(event) {
-    const checked = $(event.target).is(':checked');
-
-    setCheckedStatus.call({
-      todoId: this.todo._id,
-      newCheckedStatus: checked,
-    });
-  },
-
-  'focus input[type=text]'() {
-    this.onEditingChange(true);
-  },
-
-  'blur input[type=text]'() {
-    if (this.editing) {
-      this.onEditingChange(false);
-    }
-  },
-
-  'keydown input[type=text]'(event) {
-    // ESC or ENTER
-    if (event.which === 27 || event.which === 13) {
-      event.preventDefault();
-      event.target.blur();
-    }
-  },
-
-  // update the text of the item on keypress but throttle the event to ensure
-  // we don't flood the server with updates (handles the event at most once
-  // every 300ms)
-  'keyup input[type=text]': _.throttle(function todosItemKeyUpInner(event) {
-    updateText.call({
-      todoId: this.todo._id,
-      newText: event.target.value,
-    }, displayError);
-  }, 300),
-
-  // handle mousedown otherwise the blur handler above will swallow the click
-  // on iOS, we still require the click event so handle both
-  'mousedown .js-delete-item, click .js-delete-item'() {
-    remove.call({
-      todoId: this.todo._id,
-    }, displayError);
-  },
-});
-- 
2.10.2


From d7d9a0465db45fbe2cd14b102de29a49da06368e Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@Dotans-MacBook-Pro.local>
Date: Tue, 22 Nov 2016 14:11:03 +0200
Subject: [PATCH 77/89] Step 13: Migrate the List Item

---
 manuals/templates/step13.md |  29 +++++++
 manuals/views/step13.md     | 196 ++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 225 insertions(+)
 create mode 100644 manuals/templates/step13.md
 create mode 100644 manuals/views/step13.md

diff --git a/manuals/templates/step13.md b/manuals/templates/step13.md
new file mode 100644
index 0000000..e71eb0d
--- /dev/null
+++ b/manuals/templates/step13.md
@@ -0,0 +1,29 @@
+Our last relevant Blaze Template is the list item - this is a little bit tricky because this template need to interact with the parent Component and get the actual Todo item, and also expose events for the parent Component - so we will use a new Angular 2 features called `Input` and `Output` for that.
+
+So let's start with the Component migration this time:
+
+{{{diff_step 13.1}}} 
+
+We copied the code from the old Blaze Template, and added two `Input`s and one `Output` in the Component declaration:
+
+- `todo` which is the actual todo item.
+- `editing` which is an indication for the current item that being edited.
+- `editChange` which is an event we expose to the parent Component that triggered when starting to edit an item in the list.
+
+And add the new Component to the NgModule:
+
+{{{diff_step 13.2}}} 
+
+Now let's migrate the HTML Template of this Component:
+
+{{{diff_step 13.3}}} 
+
+And now we need to use this new Component in the `ListShowComponent`:
+
+{{{diff_step 13.4}}} 
+
+And let's implement the actual event handler and use declare the usage of the new Component:
+
+{{{diff_step 13.5}}} 
+
+And we are done! You can now remove all the files that related to the list item and removed it's import! (we did it in commit #9.6)
diff --git a/manuals/views/step13.md b/manuals/views/step13.md
new file mode 100644
index 0000000..6df2f5e
--- /dev/null
+++ b/manuals/views/step13.md
@@ -0,0 +1,196 @@
+[{]: <region> (header)
+# Step 13: Migrate the List Item
+[}]: #
+[{]: <region> (body)
+Our last relevant Blaze Template is the list item - this is a little bit tricky because this template need to interact with the parent Component and get the actual Todo item, and also expose events for the parent Component - so we will use a new Angular 2 features called `Input` and `Output` for that.
+
+So let's start with the Component migration this time:
+
+[{]: <helper> (diff_step 13.1)
+#### Step 13.1: Added the list item component
+
+##### Added client/imports/components/list-item.component.ts
+```diff
+@@ -0,0 +1,53 @@
++┊  ┊ 1┊import {Component, Input, Output, EventEmitter} from '@angular/core';
++┊  ┊ 2┊import {
++┊  ┊ 3┊  setCheckedStatus,
++┊  ┊ 4┊  updateText,
++┊  ┊ 5┊  remove,
++┊  ┊ 6┊} from '../../../imports/api/todos/methods';
++┊  ┊ 7┊import {displayError} from '../../../imports/ui/lib/errors';
++┊  ┊ 8┊
++┊  ┊ 9┊declare let _;
++┊  ┊10┊
++┊  ┊11┊@Component({
++┊  ┊12┊  selector: 'list-item',
++┊  ┊13┊  templateUrl: '/client/imports/components/list-item.html'
++┊  ┊14┊})
++┊  ┊15┊export class ListItemComponent {
++┊  ┊16┊  @Input("todo") todo: any;
++┊  ┊17┊  @Input("editing") editing: boolean;
++┊  ┊18┊  @Output("editChange") editChange = new EventEmitter();
++┊  ┊19┊
++┊  ┊20┊  constructor() {
++┊  ┊21┊  }
++┊  ┊22┊
++┊  ┊23┊  toggleEdit(isEdit) {
++┊  ┊24┊    if (!isEdit || (isEdit && this.editing)) {
++┊  ┊25┊      this.editChange.emit({
++┊  ┊26┊        editing: isEdit,
++┊  ┊27┊        todoId: this.todo._id
++┊  ┊28┊      });
++┊  ┊29┊    }
++┊  ┊30┊  }
++┊  ┊31┊
++┊  ┊32┊  remove() {
++┊  ┊33┊    remove.call({
++┊  ┊34┊      todoId: this.todo._id,
++┊  ┊35┊    }, displayError);
++┊  ┊36┊  }
++┊  ┊37┊
++┊  ┊38┊  checkedChange(event) {
++┊  ┊39┊    setCheckedStatus.call({
++┊  ┊40┊      todoId: this.todo._id,
++┊  ┊41┊      newCheckedStatus: event.target.checked,
++┊  ┊42┊    });
++┊  ┊43┊  }
++┊  ┊44┊
++┊  ┊45┊  updateText(event) {
++┊  ┊46┊    _.throttle((event) => {
++┊  ┊47┊      updateText.call({
++┊  ┊48┊        todoId: this.todo._id,
++┊  ┊49┊        newText: event.target.value,
++┊  ┊50┊      }, displayError);
++┊  ┊51┊    }, 300)(event);
++┊  ┊52┊  }
++┊  ┊53┊}🚫↵
+```
+[}]: # 
+
+We copied the code from the old Blaze Template, and added two `Input`s and one `Output` in the Component declaration:
+
+- `todo` which is the actual todo item.
+- `editing` which is an indication for the current item that being edited.
+- `editChange` which is an event we expose to the parent Component that triggered when starting to edit an item in the list.
+
+And add the new Component to the NgModule:
+
+[{]: <helper> (diff_step 13.2)
+#### Step 13.2: Added the new component to the module
+
+##### Changed client/imports/app.module.ts
+```diff
+@@ -8,6 +8,7 @@
+ ┊ 8┊ 8┊import {JoinComponent} from "./components/join.component";
+ ┊ 9┊ 9┊import {SigninComponent} from "./components/signin.component";
+ ┊10┊10┊import {FormsModule} from "@angular/forms";
++┊  ┊11┊import {ListItemComponent} from "./components/list-item.component";
+ ┊11┊12┊
+ ┊12┊13┊@NgModule({
+ ┊13┊14┊    // Components, Pipes, Directive
+```
+```diff
+@@ -16,7 +17,8 @@
+ ┊16┊17┊        ListShowComponent,
+ ┊17┊18┊        ListRedirectorComponent,
+ ┊18┊19┊        JoinComponent,
+-┊19┊  ┊        SigninComponent
++┊  ┊20┊        SigninComponent,
++┊  ┊21┊        ListItemComponent
+ ┊20┊22┊    ],
+ ┊21┊23┊    // Entry Components
+ ┊22┊24┊    entryComponents: [
+```
+[}]: # 
+
+Now let's migrate the HTML Template of this Component:
+
+[{]: <helper> (diff_step 13.3)
+#### Step 13.3: Added the list item view
+
+##### Added client/imports/components/list-item.ng2.html
+```diff
+@@ -0,0 +1,11 @@
++┊  ┊ 1┊<div class="list-item" [ngClass]="{'editing': editing, 'checked': todo.checked}">
++┊  ┊ 2┊    <label class="checkbox">
++┊  ┊ 3┊        <input type="checkbox" [checked]="todo.checked" (change)="checkedChange($event)" name="checked">
++┊  ┊ 4┊        <span class="checkbox-custom"></span>
++┊  ┊ 5┊    </label>
++┊  ┊ 6┊
++┊  ┊ 7┊    <input type="text" [value]="todo.text" (blur)="toggleEdit(false)" (focus)="toggleEdit(true)" (keyup)="updateText($event)" placeholder="Task name">
++┊  ┊ 8┊    <a class="js-delete-item delete-item" (click)="remove()">
++┊  ┊ 9┊        <span class="icon-trash"></span>
++┊  ┊10┊    </a>
++┊  ┊11┊</div>🚫↵
+```
+[}]: # 
+
+And now we need to use this new Component in the `ListShowComponent`:
+
+[{]: <helper> (diff_step 13.4)
+#### Step 13.4: Updated the usage in the list show component
+
+##### Changed client/imports/components/list-show.ng2.html
+```diff
+@@ -51,7 +51,7 @@
+ ┊51┊51┊    <div class="content-scrollable list-items">
+ ┊52┊52┊        <div *ngIf="todosReady">
+ ┊53┊53┊            <div *ngFor="let todo of todos | async">
+-┊54┊  ┊                <blaze-template name="Todos_item" [context]="getContextForItem(todo)"></blaze-template>
++┊  ┊54┊                <list-item [todo]="todo" [editing]="editingTodo" (editChange)="onTodoItemEditChange($event)"></list-item>
+ ┊55┊55┊            </div>
+ ┊56┊56┊            <div class="wrapper-message" *ngIf="!todos || todos.length == 0">
+ ┊57┊57┊                <div class="title-message">No tasks here</div>
+```
+[}]: # 
+
+And let's implement the actual event handler and use declare the usage of the new Component:
+
+[{]: <helper> (diff_step 13.5)
+#### Step 13.5: Added events and usage of the new component
+
+##### Changed client/imports/components/list-show.component.ts
+```diff
+@@ -22,6 +22,7 @@
+ ┊22┊22┊    private editing : boolean = false;
+ ┊23┊23┊    private editModel : any;
+ ┊24┊24┊    private newItemModel : string = '';
++┊  ┊25┊    private editingTodo : number | boolean;
+ ┊25┊26┊
+ ┊26┊27┊    constructor(private currentRoute: ActivatedRoute, private router: Router) {
+ ┊27┊28┊        this.editModel = {
+```
+```diff
+@@ -100,13 +101,12 @@
+ ┊100┊101┊        }
+ ┊101┊102┊    }
+ ┊102┊103┊
+-┊103┊   ┊    getContextForItem(todo) {
+-┊104┊   ┊        return {
+-┊105┊   ┊            todo: todo,
+-┊106┊   ┊            editing: false,
+-┊107┊   ┊            onEditingChange(editing) {
+-┊108┊   ┊
+-┊109┊   ┊            },
++┊   ┊104┊    onTodoItemEditChange(event) {
++┊   ┊105┊        if (event.editing) {
++┊   ┊106┊            this.editingTodo = event.todoId;
++┊   ┊107┊        }
++┊   ┊108┊        else {
++┊   ┊109┊            this.editingTodo = false;
+ ┊110┊110┊        }
+ ┊111┊111┊    }
+ ┊112┊112┊}🚫↵
+```
+[}]: # 
+
+And we are done! You can now remove all the files that related to the list item and removed it's import! (we did it in commit #9.6)
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step12.md) | [Next Step >](step14.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From 25eca739169677266f6d24dd499dceb4d78f23a2 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 20:16:36 +0300
Subject: [PATCH 78/89] Step 14.1: Move all the stylesheets to the same folder
 under imports

---
 imports/{ui => }/stylesheets/base.less             |  2 +-
 imports/{ui => }/stylesheets/button.less           |  2 +-
 imports/{ui => }/stylesheets/form.less             |  2 +-
 imports/{ui => }/stylesheets/icon.less             |  2 +-
 imports/{ui => }/stylesheets/layout.less           |  2 +-
 imports/{ui => }/stylesheets/link.less             |  2 +-
 imports/{ui => }/stylesheets/list-items.less       |  2 +-
 .../{ui/components => stylesheets}/lists-show.less |  2 +-
 imports/{ui => }/stylesheets/menu.less             |  2 +-
 imports/{ui => }/stylesheets/message.less          |  2 +-
 imports/{ui => }/stylesheets/nav.less              |  2 +-
 imports/{ui => }/stylesheets/notification.less     |  2 +-
 imports/{ui => }/stylesheets/reset.less            |  0
 imports/{ui => }/stylesheets/util/fontface.less    |  0
 imports/{ui => }/stylesheets/util/helpers.less     |  0
 imports/{ui => }/stylesheets/util/text.less        |  0
 imports/{ui => }/stylesheets/util/typography.less  |  0
 imports/{ui => }/stylesheets/util/variables.less   |  0
 imports/{ui => }/stylesheets/utils.less            |  0
 imports/ui/accounts/accounts-templates.less        | 95 ----------------------
 imports/ui/components/loading.less                 |  8 --
 imports/ui/pages/app-not-found.less                |  5 --
 22 files changed, 12 insertions(+), 120 deletions(-)
 rename imports/{ui => }/stylesheets/base.less (97%)
 rename imports/{ui => }/stylesheets/button.less (97%)
 rename imports/{ui => }/stylesheets/form.less (98%)
 rename imports/{ui => }/stylesheets/icon.less (98%)
 rename imports/{ui => }/stylesheets/layout.less (98%)
 rename imports/{ui => }/stylesheets/link.less (91%)
 rename imports/{ui => }/stylesheets/list-items.less (97%)
 rename imports/{ui/components => stylesheets}/lists-show.less (98%)
 rename imports/{ui => }/stylesheets/menu.less (98%)
 rename imports/{ui => }/stylesheets/message.less (93%)
 rename imports/{ui => }/stylesheets/nav.less (96%)
 rename imports/{ui => }/stylesheets/notification.less (97%)
 rename imports/{ui => }/stylesheets/reset.less (100%)
 rename imports/{ui => }/stylesheets/util/fontface.less (100%)
 rename imports/{ui => }/stylesheets/util/helpers.less (100%)
 rename imports/{ui => }/stylesheets/util/text.less (100%)
 rename imports/{ui => }/stylesheets/util/typography.less (100%)
 rename imports/{ui => }/stylesheets/util/variables.less (100%)
 rename imports/{ui => }/stylesheets/utils.less (100%)
 delete mode 100755 imports/ui/accounts/accounts-templates.less
 delete mode 100755 imports/ui/components/loading.less
 delete mode 100755 imports/ui/pages/app-not-found.less

diff --git a/imports/ui/stylesheets/base.less b/imports/stylesheets/base.less
similarity index 97%
rename from imports/ui/stylesheets/base.less
rename to imports/stylesheets/base.less
index 5ed4eac..6dc956d 100755
--- a/imports/ui/stylesheets/base.less
+++ b/imports/stylesheets/base.less
@@ -1,4 +1,4 @@
-@import './utils.less';
+@import 'utils.less';
 
 * {
   box-sizing: border-box;
diff --git a/imports/ui/stylesheets/button.less b/imports/stylesheets/button.less
similarity index 97%
rename from imports/ui/stylesheets/button.less
rename to imports/stylesheets/button.less
index 9449a5b..0b64a22 100755
--- a/imports/ui/stylesheets/button.less
+++ b/imports/stylesheets/button.less
@@ -1,4 +1,4 @@
-@import './utils.less';
+@import 'utils.less';
 
 [class^="btn-"],
 [class*=" btn-"] {
diff --git a/imports/ui/stylesheets/form.less b/imports/stylesheets/form.less
similarity index 98%
rename from imports/ui/stylesheets/form.less
rename to imports/stylesheets/form.less
index 8a76781..5a9e091 100755
--- a/imports/ui/stylesheets/form.less
+++ b/imports/stylesheets/form.less
@@ -1,4 +1,4 @@
-@import './utils.less';
+@import 'utils.less';
 
 // Standard text input
 input[type="text"],
diff --git a/imports/ui/stylesheets/icon.less b/imports/stylesheets/icon.less
similarity index 98%
rename from imports/ui/stylesheets/icon.less
rename to imports/stylesheets/icon.less
index 4c93b1f..a893296 100755
--- a/imports/ui/stylesheets/icon.less
+++ b/imports/stylesheets/icon.less
@@ -1,4 +1,4 @@
-@import './utils.less';
+@import 'utils.less';
 
 @font-face {
 	font-family: 'todos';
diff --git a/imports/ui/stylesheets/layout.less b/imports/stylesheets/layout.less
similarity index 98%
rename from imports/ui/stylesheets/layout.less
rename to imports/stylesheets/layout.less
index d3a3090..ab653d0 100755
--- a/imports/ui/stylesheets/layout.less
+++ b/imports/stylesheets/layout.less
@@ -1,4 +1,4 @@
-@import './utils.less';
+@import 'utils.less';
 
 @menu-width: 270px;
 @column: 5.55555%;
diff --git a/imports/ui/stylesheets/link.less b/imports/stylesheets/link.less
similarity index 91%
rename from imports/ui/stylesheets/link.less
rename to imports/stylesheets/link.less
index c626beb..8d5be97 100755
--- a/imports/ui/stylesheets/link.less
+++ b/imports/stylesheets/link.less
@@ -1,4 +1,4 @@
-@import './utils.less';
+@import 'utils.less';
 
 a {
   transition: all 200ms ease-in;
diff --git a/imports/ui/stylesheets/list-items.less b/imports/stylesheets/list-items.less
similarity index 97%
rename from imports/ui/stylesheets/list-items.less
rename to imports/stylesheets/list-items.less
index 7d10350..01694c6 100755
--- a/imports/ui/stylesheets/list-items.less
+++ b/imports/stylesheets/list-items.less
@@ -1,4 +1,4 @@
-@import './utils.less';
+@import 'utils.less';
 
 .list-items .list-item {
   .font-s2;
diff --git a/imports/ui/components/lists-show.less b/imports/stylesheets/lists-show.less
similarity index 98%
rename from imports/ui/components/lists-show.less
rename to imports/stylesheets/lists-show.less
index b705cde..098948d 100755
--- a/imports/ui/components/lists-show.less
+++ b/imports/stylesheets/lists-show.less
@@ -1,4 +1,4 @@
-@import '../stylesheets/utils.less';
+@import 'utils.less';
 
 .page.lists-show {
   .content-scrollable {
diff --git a/imports/ui/stylesheets/menu.less b/imports/stylesheets/menu.less
similarity index 98%
rename from imports/ui/stylesheets/menu.less
rename to imports/stylesheets/menu.less
index f4a7967..6f1c62d 100755
--- a/imports/ui/stylesheets/menu.less
+++ b/imports/stylesheets/menu.less
@@ -1,4 +1,4 @@
-@import './utils.less';
+@import 'utils.less';
 
 #menu {
   overflow-y: auto;
diff --git a/imports/ui/stylesheets/message.less b/imports/stylesheets/message.less
similarity index 93%
rename from imports/ui/stylesheets/message.less
rename to imports/stylesheets/message.less
index 2651c25..54528c3 100755
--- a/imports/ui/stylesheets/message.less
+++ b/imports/stylesheets/message.less
@@ -1,4 +1,4 @@
-@import './utils.less';
+@import 'utils.less';
 
 // Empty states and 404 messages
 .wrapper-message {
diff --git a/imports/ui/stylesheets/nav.less b/imports/stylesheets/nav.less
similarity index 96%
rename from imports/ui/stylesheets/nav.less
rename to imports/stylesheets/nav.less
index d56864b..846ec1e 100755
--- a/imports/ui/stylesheets/nav.less
+++ b/imports/stylesheets/nav.less
@@ -1,4 +1,4 @@
-@import './utils.less';
+@import 'utils.less';
 
 // Generic nav positioning and styles
 nav {
diff --git a/imports/ui/stylesheets/notification.less b/imports/stylesheets/notification.less
similarity index 97%
rename from imports/ui/stylesheets/notification.less
rename to imports/stylesheets/notification.less
index 1690c86..32203db 100755
--- a/imports/ui/stylesheets/notification.less
+++ b/imports/stylesheets/notification.less
@@ -1,4 +1,4 @@
-@import './utils.less';
+@import 'utils.less';
 
 @-webkit-keyframes spin {
   0% { transform: rotate(0deg); }
diff --git a/imports/ui/stylesheets/reset.less b/imports/stylesheets/reset.less
similarity index 100%
rename from imports/ui/stylesheets/reset.less
rename to imports/stylesheets/reset.less
diff --git a/imports/ui/stylesheets/util/fontface.less b/imports/stylesheets/util/fontface.less
similarity index 100%
rename from imports/ui/stylesheets/util/fontface.less
rename to imports/stylesheets/util/fontface.less
diff --git a/imports/ui/stylesheets/util/helpers.less b/imports/stylesheets/util/helpers.less
similarity index 100%
rename from imports/ui/stylesheets/util/helpers.less
rename to imports/stylesheets/util/helpers.less
diff --git a/imports/ui/stylesheets/util/text.less b/imports/stylesheets/util/text.less
similarity index 100%
rename from imports/ui/stylesheets/util/text.less
rename to imports/stylesheets/util/text.less
diff --git a/imports/ui/stylesheets/util/typography.less b/imports/stylesheets/util/typography.less
similarity index 100%
rename from imports/ui/stylesheets/util/typography.less
rename to imports/stylesheets/util/typography.less
diff --git a/imports/ui/stylesheets/util/variables.less b/imports/stylesheets/util/variables.less
similarity index 100%
rename from imports/ui/stylesheets/util/variables.less
rename to imports/stylesheets/util/variables.less
diff --git a/imports/ui/stylesheets/utils.less b/imports/stylesheets/utils.less
similarity index 100%
rename from imports/ui/stylesheets/utils.less
rename to imports/stylesheets/utils.less
diff --git a/imports/ui/accounts/accounts-templates.less b/imports/ui/accounts/accounts-templates.less
deleted file mode 100755
index 9b222c4..0000000
--- a/imports/ui/accounts/accounts-templates.less
+++ /dev/null
@@ -1,95 +0,0 @@
-@import '../stylesheets/utils.less';
-
-.page.auth {
-  text-align: center;
-
-  .content-scrollable { background: @color-tertiary; }
-
-  .wrapper-auth {
-    padding-top: 4em;
-
-    @media screen and (min-width: 40em) {
-      margin: 0 auto;
-      max-width: 480px;
-      width: 80%;
-    }
-
-    .title-auth {
-      .font-l1;
-      .type-light;
-      color: @color-ancillary;
-      margin-bottom: .75rem;
-    }
-
-    .subtitle-auth {
-      color: @color-medium-well;
-      margin: 0 15% 3rem;
-    }
-
-    form {
-      .input {
-        margin-bottom: 1px;
-        width: 100%;
-        display: block;
-
-        input {
-          width: 100%;
-          padding: .75rem;
-        }
-      }
-
-      label {
-        display: none;
-      }
-
-      .btn-primary {
-        margin: 1em 5% 0;
-        width: 90%;
-
-        @media screen and (min-width: 40em) {
-          margin-left: 0;
-          margin-right: 0;
-          width: 100%;
-        }
-      }
-
-      .at-pwd-link {
-        margin-top: 1em;
-      }
-    }
-    .list-errors {
-      margin-top: -2rem;
-      .list-item {
-        .title-caps;
-        background: @color-note;
-        color: @color-negative;
-        font-size: .625em; // 10px
-        margin-bottom: 1px;
-        padding: .7rem 0;
-      }
-    }
-
-    .at-message, .at-result {
-      margin-top: -2rem;
-      .title-caps;
-      background: @color-note;
-      color: @color-ancillary;
-      font-size: .625em; // 10px
-      margin-bottom: 1px;
-      padding: .7rem 0;
-    }
-  }
-
-  .at-signup-link, .at-signin-link {
-    .font-s1;
-    .position(absolute, auto, 0, 1em, 0);
-    color: @color-medium;
-    display: inline-block;
-
-    @media screen and (min-width: 40em) {
-      bottom: 0;
-      margin-top: 1rem;
-      position: relative;
-    }
-  }
-}
diff --git a/imports/ui/components/loading.less b/imports/ui/components/loading.less
deleted file mode 100755
index 0fbd34d..0000000
--- a/imports/ui/components/loading.less
+++ /dev/null
@@ -1,8 +0,0 @@
-@import '../stylesheets/utils.less';
-
-.loading-app {
-  .position(absolute, 50%, 50%, auto, auto, 50%);
-  transform: translate3d(50%, -50%, 0);
-  min-width: 160px;
-  max-width: 320px;
-}
diff --git a/imports/ui/pages/app-not-found.less b/imports/ui/pages/app-not-found.less
deleted file mode 100755
index 83c6e72..0000000
--- a/imports/ui/pages/app-not-found.less
+++ /dev/null
@@ -1,5 +0,0 @@
-@import '../stylesheets/utils.less';
-
-.page.not-found {
-  .content-scrollable { background: @color-tertiary; }
-}
-- 
2.10.2


From 490790d0d53256eb8e0d46673283a24b721edc87 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 20:16:46 +0300
Subject: [PATCH 79/89] Step 14.2: Update the imports path

---
 client/main.less | 31 ++++++++++++++-----------------
 1 file changed, 14 insertions(+), 17 deletions(-)

diff --git a/client/main.less b/client/main.less
index e893614..10749a3 100755
--- a/client/main.less
+++ b/client/main.less
@@ -1,22 +1,19 @@
-@import "{}/imports/ui/stylesheets/reset.less";
+@import "{}/imports/stylesheets/reset.less";
 
 // Global namespace
-@import "{}/imports/ui/stylesheets/base.less";
-@import '{}/imports/ui/stylesheets/button.less';
-@import '{}/imports/ui/stylesheets/form.less';
-@import '{}/imports/ui/stylesheets/icon.less';
-@import '{}/imports/ui/stylesheets/layout.less';
-@import '{}/imports/ui/stylesheets/link.less';
-@import '{}/imports/ui/stylesheets/menu.less';
-@import '{}/imports/ui/stylesheets/nav.less';
+@import "{}/imports/stylesheets/base.less";
+@import '{}/imports/stylesheets/button.less';
+@import '{}/imports/stylesheets/form.less';
+@import '{}/imports/stylesheets/icon.less';
+@import '{}/imports/stylesheets/layout.less';
+@import '{}/imports/stylesheets/link.less';
+@import '{}/imports/stylesheets/menu.less';
+@import '{}/imports/stylesheets/nav.less';
 
 // Global components
-@import '{}/imports/ui/stylesheets/list-items.less';
-@import '{}/imports/ui/stylesheets/message.less';
-@import '{}/imports/ui/stylesheets/notification.less';
+@import '{}/imports/stylesheets/list-items.less';
+@import '{}/imports/stylesheets/message.less';
+@import '{}/imports/stylesheets/notification.less';
 
-// Individual components
-@import "{}/imports/ui/components/lists-show.less";
-@import "{}/imports/ui/components/loading.less";
-@import "{}/imports/ui/pages/app-not-found.less";
-@import "{}/imports/ui/accounts/accounts-templates.less";
+// Individual compons
+@import "{}/imports/stylesheets/lists-show.less";
-- 
2.10.2


From 2d190539058d35697cfd7f8de5f49ba81c84dc1c Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 20:18:11 +0300
Subject: [PATCH 80/89] Step 14.3: Remove old UI files

---
 imports/startup/client/index.js                  |  1 -
 imports/startup/client/routes.app-test.js        | 56 --------------------
 imports/startup/client/routes.js                 |  5 --
 imports/ui/accounts/accounts-templates.html      | 65 ------------------------
 imports/ui/accounts/accounts-templates.js        | 11 ----
 imports/ui/components/client/lists-show.tests.js | 55 --------------------
 imports/ui/components/client/todos-item.tests.js | 62 ----------------------
 imports/ui/components/loading.html               |  3 --
 imports/ui/components/loading.js                 |  1 -
 imports/ui/launch-screen.js                      |  3 --
 imports/ui/pages/app-not-found.html              | 15 ------
 imports/ui/pages/app-not-found.js                |  1 -
 imports/ui/pages/client/lists-show-page.tests.js | 58 ---------------------
 imports/ui/test-helpers.js                       | 25 ---------
 14 files changed, 361 deletions(-)
 delete mode 100755 imports/startup/client/index.js
 delete mode 100755 imports/startup/client/routes.app-test.js
 delete mode 100755 imports/startup/client/routes.js
 delete mode 100755 imports/ui/accounts/accounts-templates.html
 delete mode 100755 imports/ui/accounts/accounts-templates.js
 delete mode 100755 imports/ui/components/client/lists-show.tests.js
 delete mode 100755 imports/ui/components/client/todos-item.tests.js
 delete mode 100755 imports/ui/components/loading.html
 delete mode 100755 imports/ui/components/loading.js
 delete mode 100755 imports/ui/launch-screen.js
 delete mode 100755 imports/ui/pages/app-not-found.html
 delete mode 100755 imports/ui/pages/app-not-found.js
 delete mode 100755 imports/ui/pages/client/lists-show-page.tests.js
 delete mode 100755 imports/ui/test-helpers.js

diff --git a/imports/startup/client/index.js b/imports/startup/client/index.js
deleted file mode 100755
index b0b0f47..0000000
--- a/imports/startup/client/index.js
+++ /dev/null
@@ -1 +0,0 @@
-import './routes.js';
diff --git a/imports/startup/client/routes.app-test.js b/imports/startup/client/routes.app-test.js
deleted file mode 100755
index ecbffe8..0000000
--- a/imports/startup/client/routes.app-test.js
+++ /dev/null
@@ -1,56 +0,0 @@
-/* eslint-env mocha */
-
-import { Meteor } from 'meteor/meteor';
-import { Tracker } from 'meteor/tracker';
-import { DDP } from 'meteor/ddp-client';
-import { FlowRouter } from 'meteor/kadira:flow-router';
-import { assert } from 'meteor/practicalmeteor:chai';
-import { Promise } from 'meteor/promise';
-import { $ } from 'meteor/jquery';
-
-import { generateData } from './../../api/generate-data.app-tests.js';
-import { Lists } from '../../api/lists/lists.js';
-import { Todos } from '../../api/todos/todos.js';
-
-
-// Utility -- returns a promise which resolves when all subscriptions are done
-const waitForSubscriptions = () => new Promise(resolve => {
-  const poll = Meteor.setInterval(() => {
-    if (DDP._allSubscriptionsReady()) {
-      clearInterval(poll);
-      resolve();
-    }
-  }, 200);
-});
-
-// Tracker.afterFlush runs code when all consequent of a tracker based change
-//   (such as a route change) have occured. This makes it a promise.
-const afterFlushPromise = Promise.denodeify(Tracker.afterFlush);
-
-if (Meteor.isClient) {
-  describe('data available when routed', () => {
-    // First, ensure the data that we expect is loaded on the server
-    //   Then, route the app to the homepage
-    beforeEach(() => generateData().then(() => FlowRouter.go('/')));
-
-    describe('when logged out', () => {
-      it('has all public lists at homepage', () => {
-        assert.equal(Lists.find().count(), 3);
-      });
-
-      it('renders the correct list when routed to', () => {
-        const list = Lists.findOne();
-        FlowRouter.go('Lists.show', { _id: list._id });
-
-        return afterFlushPromise()
-          .then(() => {
-            assert.equal($('.title-wrapper').html(), list.name);
-          })
-          .then(() => waitForSubscriptions())
-          .then(() => {
-            assert.equal(Todos.find({ listId: list._id }).count(), 3);
-          });
-      });
-    });
-  });
-}
diff --git a/imports/startup/client/routes.js b/imports/startup/client/routes.js
deleted file mode 100755
index e065b9a..0000000
--- a/imports/startup/client/routes.js
+++ /dev/null
@@ -1,5 +0,0 @@
-import { FlowRouter } from 'meteor/kadira:flow-router';
-import { BlazeLayout } from 'meteor/kadira:blaze-layout';
-
-// Import to load these templates
-import '../../ui/pages/app-not-found.js';
\ No newline at end of file
diff --git a/imports/ui/accounts/accounts-templates.html b/imports/ui/accounts/accounts-templates.html
deleted file mode 100755
index 2dbe64d..0000000
--- a/imports/ui/accounts/accounts-templates.html
+++ /dev/null
@@ -1,65 +0,0 @@
-<template name="Auth_page">
-  <div class="page auth">
-    <nav>
-      <div class="nav-group">
-        <a href="#" class="js-menu nav-item">
-          <span class="icon-list-unordered"></span>
-        </a>
-      </div>
-    </nav>
-
-    <div class="content-scrollable">
-      <div class="wrapper-auth">
-        {{> atForm}}
-      </div>
-    </div>
-  </div>
-</template>
-
-<template name="override-atPwdFormBtn">
-  <button type="submit" class="btn-primary">
-    {{buttonText}}
-  </button>
-</template>
-
-<template name="override-atTextInput">
-  <div class="input {{#if isValidating}}validating{{/if}} {{#if hasError}}error{{/if}} {{#if hasSuccess}}has-success{{/if}} {{#if feedback}}has-feedback{{/if}}">
-    <input type="{{type}}" id="at-field-{{_id}}" name="at-field-{{_id}}" placeholder="{{placeholder}}" autocapitalize="none" autocorrect="off">
-    {{#if hasIcon}}
-        <span class="{{iconClass}}"></span>
-    {{/if}}
-    {{#if hasError}}
-      <span>{{errorText}}</span>
-    {{/if}}
-  </div>
-</template>
-
-<template name="override-atTitle">
-  <h1 class="title-auth">{{title}}</h1>
-  <p class="subtitle-auth">{{_ 'Signing in allows you to have private lists'}}</p>
-</template>
-
-<template name="override-atError">
-  <div class="list-errors">
-    {{#each error}}
-      <div class="list-item">{{errorText}}</div>
-    {{/each}}
-  </div>
-</template>
-
-<template name="override-atPwdForm">
-  <div class="at-pwd-form">
-    <form role="form" id="at-pwd-form" class="{{disabled}}" novalidate action="#" method="POST">
-      {{#each fields}}
-        {{> atInput}}
-      {{/each}}
-      {{#if showReCaptcha}}
-        {{> atReCaptcha}}
-      {{/if}}
-      {{> atPwdFormBtn}}
-      {{#if showForgotPasswordLink}}
-        {{> atPwdLink}}
-      {{/if}}
-    </form>
-  </div>
-</template>
diff --git a/imports/ui/accounts/accounts-templates.js b/imports/ui/accounts/accounts-templates.js
deleted file mode 100755
index 8bc25ef..0000000
--- a/imports/ui/accounts/accounts-templates.js
+++ /dev/null
@@ -1,11 +0,0 @@
-import { Template } from 'meteor/templating';
-
-import './accounts-templates.html';
-
-// We identified the templates that need to be overridden by looking at the available templates
-// here: https://github.com/meteor-useraccounts/unstyled/tree/master/lib
-Template['override-atPwdFormBtn'].replaces('atPwdFormBtn');
-Template['override-atPwdForm'].replaces('atPwdForm');
-Template['override-atTextInput'].replaces('atTextInput');
-Template['override-atTitle'].replaces('atTitle');
-Template['override-atError'].replaces('atError');
diff --git a/imports/ui/components/client/lists-show.tests.js b/imports/ui/components/client/lists-show.tests.js
deleted file mode 100755
index 73e998e..0000000
--- a/imports/ui/components/client/lists-show.tests.js
+++ /dev/null
@@ -1,55 +0,0 @@
-/* eslint-env mocha */
-/* eslint-disable func-names, prefer-arrow-callback */
-
-import { Mongo } from 'meteor/mongo';
-import { Factory } from 'meteor/factory';
-import { chai } from 'meteor/practicalmeteor:chai';
-import { Template } from 'meteor/templating';
-import { _ } from 'meteor/underscore';
-import { $ } from 'meteor/jquery';
-
-import { withRenderedTemplate } from '../../test-helpers.js';
-import '../lists-show.js';
-import { Todos } from '../../../api/todos/todos.js';
-
-
-describe('Lists_show', function () {
-  beforeEach(function () {
-    Template.registerHelper('_', key => key);
-  });
-
-  afterEach(function () {
-    Template.deregisterHelper('_');
-  });
-
-  it('renders correctly with simple data', function () {
-    const list = Factory.build('list');
-    const timestamp = new Date();
-
-    // Create a local collection in order to get a cursor
-    // Note that we need to pass the transform in so the documents look right when they come out.
-    const todosCollection = new Mongo.Collection(null, { transform: Todos._transform });
-    _.times(3, i => {
-      const todo = Factory.build('todo', {
-        listId: list._id,
-        createdAt: new Date(timestamp - (3 - i)),
-      });
-      todosCollection.insert(todo);
-    });
-    const todosCursor = todosCollection.find({}, { sort: { createdAt: -1 } });
-
-    const data = {
-      list: () => list,
-      todosReady: true,
-      todos: todosCursor,
-    };
-
-    withRenderedTemplate('Lists_show', data, el => {
-      const todosText = todosCursor.map(t => t.text);
-      const renderedText = $(el).find('.list-items input[type=text]')
-        .map((i, e) => $(e).val())
-        .toArray();
-      chai.assert.deepEqual(renderedText, todosText);
-    });
-  });
-});
diff --git a/imports/ui/components/client/todos-item.tests.js b/imports/ui/components/client/todos-item.tests.js
deleted file mode 100755
index 464e990..0000000
--- a/imports/ui/components/client/todos-item.tests.js
+++ /dev/null
@@ -1,62 +0,0 @@
-/* eslint-env mocha */
-/* eslint-disable func-names, prefer-arrow-callback */
-
-import { Factory } from 'meteor/factory';
-import { chai } from 'meteor/practicalmeteor:chai';
-import { Template } from 'meteor/templating';
-import { $ } from 'meteor/jquery';
-
-
-import { withRenderedTemplate } from '../../test-helpers.js';
-import '../todos-item.js';
-
-describe('Todos_item', function () {
-  beforeEach(function () {
-    Template.registerHelper('_', key => key);
-  });
-
-  afterEach(function () {
-    Template.deregisterHelper('_');
-  });
-
-  it('renders correctly with simple data', function () {
-    const todo = Factory.build('todo', { checked: false });
-    const data = {
-      todo,
-      onEditingChange: () => 0,
-    };
-
-    withRenderedTemplate('Todos_item', data, el => {
-      chai.assert.equal($(el).find('input[type=text]').val(), todo.text);
-      chai.assert.equal($(el).find('.list-item.checked').length, 0);
-      chai.assert.equal($(el).find('.list-item.editing').length, 0);
-    });
-  });
-
-  it('renders correctly when checked', function () {
-    const todo = Factory.build('todo', { checked: true });
-    const data = {
-      todo,
-      onEditingChange: () => 0,
-    };
-
-    withRenderedTemplate('Todos_item', data, el => {
-      chai.assert.equal($(el).find('input[type=text]').val(), todo.text);
-      chai.assert.equal($(el).find('.list-item.checked').length, 1);
-    });
-  });
-
-  it('renders correctly when editing', function () {
-    const todo = Factory.build('todo');
-    const data = {
-      todo,
-      editing: true,
-      onEditingChange: () => 0,
-    };
-
-    withRenderedTemplate('Todos_item', data, el => {
-      chai.assert.equal($(el).find('input[type=text]').val(), todo.text);
-      chai.assert.equal($(el).find('.list-item.editing').length, 1);
-    });
-  });
-});
diff --git a/imports/ui/components/loading.html b/imports/ui/components/loading.html
deleted file mode 100755
index e6ad0fc..0000000
--- a/imports/ui/components/loading.html
+++ /dev/null
@@ -1,3 +0,0 @@
-<template name="App_loading">
-  <img src="/logo-todos.svg" class="loading-app" />
-</template>
diff --git a/imports/ui/components/loading.js b/imports/ui/components/loading.js
deleted file mode 100755
index 3b9f326..0000000
--- a/imports/ui/components/loading.js
+++ /dev/null
@@ -1 +0,0 @@
-import './loading.html';
diff --git a/imports/ui/launch-screen.js b/imports/ui/launch-screen.js
deleted file mode 100755
index 0d8ce42..0000000
--- a/imports/ui/launch-screen.js
+++ /dev/null
@@ -1,3 +0,0 @@
-import { LaunchScreen } from 'meteor/launch-screen';
-
-export const listRenderHold = LaunchScreen.hold();
diff --git a/imports/ui/pages/app-not-found.html b/imports/ui/pages/app-not-found.html
deleted file mode 100755
index 6630c65..0000000
--- a/imports/ui/pages/app-not-found.html
+++ /dev/null
@@ -1,15 +0,0 @@
-<template name="App_notFound">
-  <div class="page not-found">
-    <nav>
-      <div class="nav-group">
-        <a href="#" class="js-menu nav-item"><span class="icon-list-unordered"></span></a>
-      </div>
-    </nav>
-
-    <div class="content-scrollable">
-      <div class="wrapper-message">
-        <div class="title-message">{{_ 'Page not found'}}</div>
-      </div>
-    </div>
-  </div>
-</template>
\ No newline at end of file
diff --git a/imports/ui/pages/app-not-found.js b/imports/ui/pages/app-not-found.js
deleted file mode 100755
index fec0084..0000000
--- a/imports/ui/pages/app-not-found.js
+++ /dev/null
@@ -1 +0,0 @@
-import './app-not-found.html';
diff --git a/imports/ui/pages/client/lists-show-page.tests.js b/imports/ui/pages/client/lists-show-page.tests.js
deleted file mode 100755
index e4ffc50..0000000
--- a/imports/ui/pages/client/lists-show-page.tests.js
+++ /dev/null
@@ -1,58 +0,0 @@
-/* eslint-env mocha */
-/* eslint-disable func-names, prefer-arrow-callback */
-
-import { Meteor } from 'meteor/meteor';
-import { Factory } from 'meteor/factory';
-import { Random } from 'meteor/random';
-import { chai } from 'meteor/practicalmeteor:chai';
-import StubCollections from 'meteor/hwillson:stub-collections';
-import { Template } from 'meteor/templating';
-import { _ } from 'meteor/underscore';
-import { $ } from 'meteor/jquery';
-import { FlowRouter } from 'meteor/kadira:flow-router';
-import { sinon } from 'meteor/practicalmeteor:sinon';
-
-
-import { withRenderedTemplate } from '../../test-helpers.js';
-import '../lists-show-page.js';
-
-import { Todos } from '../../../api/todos/todos.js';
-import { Lists } from '../../../api/lists/lists.js';
-
-describe('Lists_show_page', function () {
-  const listId = Random.id();
-
-  beforeEach(function () {
-    StubCollections.stub([Todos, Lists]);
-    Template.registerHelper('_', key => key);
-    sinon.stub(FlowRouter, 'getParam', () => listId);
-    sinon.stub(Meteor, 'subscribe', () => ({
-      subscriptionId: 0,
-      ready: () => true,
-    }));
-  });
-
-  afterEach(function () {
-    StubCollections.restore();
-    Template.deregisterHelper('_');
-    FlowRouter.getParam.restore();
-    Meteor.subscribe.restore();
-  });
-
-  it('renders correctly with simple data', function () {
-    Factory.create('list', { _id: listId });
-    const timestamp = new Date();
-    const todos = _.times(3, i => Factory.create('todo', {
-      listId,
-      createdAt: new Date(timestamp - (3 - i)),
-    }));
-
-    withRenderedTemplate('Lists_show_page', {}, el => {
-      const todosText = todos.map(t => t.text).reverse();
-      const renderedText = $(el).find('.list-items input[type=text]')
-        .map((i, e) => $(e).val())
-        .toArray();
-      chai.assert.deepEqual(renderedText, todosText);
-    });
-  });
-});
diff --git a/imports/ui/test-helpers.js b/imports/ui/test-helpers.js
deleted file mode 100755
index b79a2bc..0000000
--- a/imports/ui/test-helpers.js
+++ /dev/null
@@ -1,25 +0,0 @@
-// TODO -- this should probably be some kind of test package that people use
-
-import { _ } from 'meteor/underscore';
-import { Template } from 'meteor/templating';
-import { Blaze } from 'meteor/blaze';
-import { Tracker } from 'meteor/tracker';
-
-const withDiv = function withDiv(callback) {
-  const el = document.createElement('div');
-  document.body.appendChild(el);
-  try {
-    callback(el);
-  } finally {
-    document.body.removeChild(el);
-  }
-};
-
-export const withRenderedTemplate = function withRenderedTemplate(template, data, callback) {
-  withDiv((el) => {
-    const ourTemplate = _.isString(template) ? Template[template] : template;
-    Blaze.renderWithData(ourTemplate, data, el);
-    Tracker.flush();
-    callback(el);
-  });
-};
-- 
2.10.2


From 14aaae4c023e3621a46e1368028d6c31749d50f8 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 20:18:42 +0300
Subject: [PATCH 81/89] Step 14.4: Moved error handler file

---
 imports/{ui/lib => }/errors.js | 0
 1 file changed, 0 insertions(+), 0 deletions(-)
 rename imports/{ui/lib => }/errors.js (100%)

diff --git a/imports/ui/lib/errors.js b/imports/errors.js
similarity index 100%
rename from imports/ui/lib/errors.js
rename to imports/errors.js
-- 
2.10.2


From d5fd2b598abfe2ddb8c3ffc46eac05954ba9cda8 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 20:19:21 +0300
Subject: [PATCH 82/89] Step 14.5: Updated imports path for errors helpers

---
 client/imports/components/list-item.component.ts | 2 +-
 client/imports/components/list-show.component.ts | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/client/imports/components/list-item.component.ts b/client/imports/components/list-item.component.ts
index 1d3dcf3..2af858e 100644
--- a/client/imports/components/list-item.component.ts
+++ b/client/imports/components/list-item.component.ts
@@ -4,7 +4,7 @@ import {
   updateText,
   remove,
 } from '../../../imports/api/todos/methods';
-import {displayError} from '../../../imports/ui/lib/errors';
+import {displayError} from '../../../imports/errors';
 
 declare let _;
 
diff --git a/client/imports/components/list-show.component.ts b/client/imports/components/list-show.component.ts
index 43cd1a7..32cbff7 100644
--- a/client/imports/components/list-show.component.ts
+++ b/client/imports/components/list-show.component.ts
@@ -9,7 +9,7 @@ import {
   remove,
   insert,
 } from '../../../imports/api/todos/methods';
-import { displayError } from '../../../imports/ui/lib/errors';
+import { displayError } from '../../../imports/errors';
 import {Observable} from "rxjs";
 
 @Component({
-- 
2.10.2


From 76a0b68ca056e4fcd8f5200a9cd6759aaf599679 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 20:20:02 +0300
Subject: [PATCH 83/89] Step 14.6: Removed old blaze import

---
 client/imports/main.component.ts | 1 -
 1 file changed, 1 deletion(-)

diff --git a/client/imports/main.component.ts b/client/imports/main.component.ts
index a2c4b27..7134948 100755
--- a/client/imports/main.component.ts
+++ b/client/imports/main.component.ts
@@ -1,4 +1,3 @@
-import '/imports/startup/client';
 import {Component, OnInit} from "@angular/core";
 import {Meteor} from "meteor/meteor";
 import {MeteorObservable} from "meteor-rxjs";
-- 
2.10.2


From 0f7cef96e328556ac90aae516f0dd2aab525a251 Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 20:21:15 +0300
Subject: [PATCH 84/89] Step 14.7: Remove old Meteor packages

---
 .meteor/packages |  8 --------
 .meteor/versions | 14 +++-----------
 2 files changed, 3 insertions(+), 19 deletions(-)

diff --git a/.meteor/packages b/.meteor/packages
index ce34cd3..63405fa 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -16,10 +16,8 @@ jquery
 underscore
 
 # ui
-blaze-html-templates
 reactive-dict
 reactive-var
-aldeed:template-extension
 percolate:momentum
 
 # data
@@ -31,12 +29,6 @@ reywood:publish-composite
 mdg:validated-method
 mdg:validation-error
 
-# routing
-kadira:flow-router@2.11.0
-kadira:blaze-layout
-arillo:flow-router-helpers
-zimme:active-route
-
 # i18n
 tap:i18n
 
diff --git a/.meteor/versions b/.meteor/versions
index e114c88..a72173f 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -5,13 +5,11 @@ aldeed:collection2-core@1.2.0
 aldeed:schema-deny@1.1.0
 aldeed:schema-index@1.1.0
 aldeed:simple-schema@1.5.3
-aldeed:template-extension@4.0.0
 allow-deny@1.0.5
 angular2-css@0.1.0
 angular2-html-templates@0.5.4
 angular2-with-blaze-compilers@0.5.8
 app-prod-security@0.0.0
-arillo:flow-router-helpers@0.5.2
 autoupdate@1.2.11
 babel-compiler@6.13.0
 babel-runtime@0.1.12
@@ -21,15 +19,14 @@ barbatus:typescript-runtime@0.1.2
 base64@1.0.10
 binary-heap@1.0.10
 blaze@2.1.9
-blaze-html-templates@1.0.5
 blaze-tools@1.0.10
 boilerplate-generator@1.0.11
 browser-policy@1.0.9
 browser-policy-common@1.0.11
 browser-policy-content@1.0.12
 browser-policy-framing@1.0.12
-caching-compiler@1.1.8
-caching-html-compiler@1.0.7
+caching-compiler@1.0.6
+caching-html-compiler@1.0.6
 callback-hook@1.0.10
 cfs:http-methods@0.0.32
 check@1.2.4
@@ -64,8 +61,6 @@ id-map@1.0.9
 johanbrook:publication-collector@1.0.3
 jquery@1.11.10
 juliancwirko:postcss@1.1.1
-kadira:blaze-layout@2.3.0
-kadira:flow-router@2.12.1
 launch-screen@1.0.12
 livedata@1.0.18
 localstorage@1.0.12
@@ -119,9 +114,7 @@ spacebars-compiler@1.0.13
 srp@1.0.10
 standard-minifier-js@1.2.1
 tap:i18n@1.8.2
-templating@1.2.15
-templating-compiler@1.2.15
-templating-runtime@1.2.15
+templating@1.1.14
 templating-tools@1.0.5
 tmeasday:test-reporter-helpers@0.2.1
 tracker@1.1.1
@@ -131,4 +124,3 @@ url@1.0.11
 webapp@1.3.12
 webapp-hashing@1.0.9
 xolvio:cleaner@0.3.1
-zimme:active-route@2.3.2
-- 
2.10.2


From e6804d697b24d9de12e3c6788e871bd4a54680be Mon Sep 17 00:00:00 2001
From: dotansimha <dotansimha@gmail.com>
Date: Thu, 22 Sep 2016 20:25:24 +0300
Subject: [PATCH 85/89] Step 14.8: Updated compilers package

---
 .meteor/packages |  2 +-
 .meteor/versions | 11 ++++++-----
 2 files changed, 7 insertions(+), 6 deletions(-)

diff --git a/.meteor/packages b/.meteor/packages
index 63405fa..493b893 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -57,4 +57,4 @@ dispatch:mocha-phantomjs
 practicalmeteor:mocha@2.1.1-rc.1
 hwillson:stub-collections
 johanbrook:publication-collector
-angular2-with-blaze-compilers
+angular2-compilers
diff --git a/.meteor/versions b/.meteor/versions
index a72173f..7305daa 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -6,15 +6,15 @@ aldeed:schema-deny@1.1.0
 aldeed:schema-index@1.1.0
 aldeed:simple-schema@1.5.3
 allow-deny@1.0.5
-angular2-css@0.1.0
-angular2-html-templates@0.5.4
-angular2-with-blaze-compilers@0.5.8
+angular2-compilers@0.6.4
 app-prod-security@0.0.0
 autoupdate@1.2.11
 babel-compiler@6.13.0
 babel-runtime@0.1.12
-barbatus:typescript@0.3.4_1
-barbatus:typescript-compiler@0.6.11
+barbatus:css-compiler@0.3.3
+barbatus:scss-compiler@3.8.2
+barbatus:typescript@0.5.2
+barbatus:typescript-compiler@0.8.4
 barbatus:typescript-runtime@0.1.2
 base64@1.0.10
 binary-heap@1.0.10
@@ -120,6 +120,7 @@ tmeasday:test-reporter-helpers@0.2.1
 tracker@1.1.1
 ui@1.0.12
 underscore@1.0.10
+urigo:static-html-compiler@0.1.8
 url@1.0.11
 webapp@1.3.12
 webapp-hashing@1.0.9
-- 
2.10.2


From b25637f35952be0e7cc4b59371f86666b38e4887 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Fri, 28 Oct 2016 16:46:08 +0300
Subject: [PATCH 86/89] Step 14.9: Updated template loading and templates file
 extension

---
 client/imports/components/join.component.ts                      | 3 ++-
 client/imports/components/{join.ng2.html => join.html}           | 0
 client/imports/components/list-item.component.ts                 | 3 ++-
 client/imports/components/{list-item.ng2.html => list-item.html} | 0
 client/imports/components/list-show.component.ts                 | 3 ++-
 client/imports/components/{list-show.ng2.html => list-show.html} | 0
 client/imports/components/signin.component.ts                    | 3 ++-
 client/imports/components/{signin.ng2.html => signin.html}       | 0
 client/imports/{main-component.ng2.html => main-component.html}  | 0
 client/imports/main.component.ts                                 | 3 ++-
 client/{index.ng2.html => index.html}                            | 0
 11 files changed, 10 insertions(+), 5 deletions(-)
 rename client/imports/components/{join.ng2.html => join.html} (100%)
 rename client/imports/components/{list-item.ng2.html => list-item.html} (100%)
 rename client/imports/components/{list-show.ng2.html => list-show.html} (100%)
 rename client/imports/components/{signin.ng2.html => signin.html} (100%)
 rename client/imports/{main-component.ng2.html => main-component.html} (100%)
 rename client/{index.ng2.html => index.html} (100%)

diff --git a/client/imports/components/join.component.ts b/client/imports/components/join.component.ts
index 3595671..1dcd002 100644
--- a/client/imports/components/join.component.ts
+++ b/client/imports/components/join.component.ts
@@ -1,5 +1,6 @@
 import {Component, NgZone} from "@angular/core";
 import {Router} from "@angular/router";
+import template from "./join.html";
 
 class JoinModel {
   constructor(public email : string, public password : string, public passwordVerify : string) {
@@ -8,7 +9,7 @@ class JoinModel {
 }
 
 @Component({
-  templateUrl: '/client/imports/components/join.html'
+  template
 })
 export class JoinComponent {
   private model : JoinModel;
diff --git a/client/imports/components/join.ng2.html b/client/imports/components/join.html
similarity index 100%
rename from client/imports/components/join.ng2.html
rename to client/imports/components/join.html
diff --git a/client/imports/components/list-item.component.ts b/client/imports/components/list-item.component.ts
index 2af858e..0ff11a8 100644
--- a/client/imports/components/list-item.component.ts
+++ b/client/imports/components/list-item.component.ts
@@ -5,12 +5,13 @@ import {
   remove,
 } from '../../../imports/api/todos/methods';
 import {displayError} from '../../../imports/errors';
+import template from "./list-item.html";
 
 declare let _;
 
 @Component({
   selector: 'list-item',
-  templateUrl: '/client/imports/components/list-item.html'
+  template
 })
 export class ListItemComponent {
   @Input("todo") todo: any;
diff --git a/client/imports/components/list-item.ng2.html b/client/imports/components/list-item.html
similarity index 100%
rename from client/imports/components/list-item.ng2.html
rename to client/imports/components/list-item.html
diff --git a/client/imports/components/list-show.component.ts b/client/imports/components/list-show.component.ts
index 32cbff7..0500c35 100644
--- a/client/imports/components/list-show.component.ts
+++ b/client/imports/components/list-show.component.ts
@@ -11,9 +11,10 @@ import {
 } from '../../../imports/api/todos/methods';
 import { displayError } from '../../../imports/errors';
 import {Observable} from "rxjs";
+import template from "./list-show.html";
 
 @Component({
-    templateUrl: '/client/imports/components/list-show.html'
+    template
 })
 export class ListShowComponent implements OnInit {
     private list : any;
diff --git a/client/imports/components/list-show.ng2.html b/client/imports/components/list-show.html
similarity index 100%
rename from client/imports/components/list-show.ng2.html
rename to client/imports/components/list-show.html
diff --git a/client/imports/components/signin.component.ts b/client/imports/components/signin.component.ts
index d006dc4..94f8d82 100644
--- a/client/imports/components/signin.component.ts
+++ b/client/imports/components/signin.component.ts
@@ -1,5 +1,6 @@
 import {Component, NgZone} from "@angular/core";
 import {Router} from "@angular/router";
+import template from "./signin.html";
 
 class SigninModel {
   constructor(public email : string, public password : string) {
@@ -8,7 +9,7 @@ class SigninModel {
 }
 
 @Component({
-  templateUrl: '/client/imports/components/signin.html'
+  template
 })
 export class SigninComponent {
   private model : SigninModel;
diff --git a/client/imports/components/signin.ng2.html b/client/imports/components/signin.html
similarity index 100%
rename from client/imports/components/signin.ng2.html
rename to client/imports/components/signin.html
diff --git a/client/imports/main-component.ng2.html b/client/imports/main-component.html
similarity index 100%
rename from client/imports/main-component.ng2.html
rename to client/imports/main-component.html
diff --git a/client/imports/main.component.ts b/client/imports/main.component.ts
index 7134948..fc611b0 100755
--- a/client/imports/main.component.ts
+++ b/client/imports/main.component.ts
@@ -5,10 +5,11 @@ import {Observable} from "rxjs";
 import {Lists} from "../../imports/api/lists/lists";
 import {insert} from "../../imports/api/lists/methods";
 import {Router} from "@angular/router";
+import template from "./main-component.html";
 
 @Component({
   selector: 'app',
-  templateUrl: '/client/imports/main-component.html'
+  template
 })
 export class MainComponent implements OnInit {
   private isCordova : boolean;
diff --git a/client/index.ng2.html b/client/index.html
similarity index 100%
rename from client/index.ng2.html
rename to client/index.html
-- 
2.10.2


From c26b25694d3bda7bdf53dfe9bc7c0c3a0d336017 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Fri, 28 Oct 2016 16:46:46 +0300
Subject: [PATCH 87/89] Step 14.10: Removed blaze-template import

---
 client/imports/app.module.ts | 2 --
 1 file changed, 2 deletions(-)

diff --git a/client/imports/app.module.ts b/client/imports/app.module.ts
index 09988df..c665eaa 100644
--- a/client/imports/app.module.ts
+++ b/client/imports/app.module.ts
@@ -4,7 +4,6 @@ import {MainComponent} from "./main.component";
 import {routing} from "./app.routes";
 import {ListShowComponent} from "./components/list-show.component";
 import {ListRedirectorComponent} from "./components/list-redirector.component";
-import {Angular2BlazeTemplateModule} from "angular2-blaze-template";
 import {JoinComponent} from "./components/join.component";
 import {SigninComponent} from "./components/signin.component";
 import {FormsModule} from "@angular/forms";
@@ -30,7 +29,6 @@ import {ListItemComponent} from "./components/list-item.component";
     imports: [
         BrowserModule,
         routing,
-        Angular2BlazeTemplateModule,
         FormsModule
     ],
     // Main Component
-- 
2.10.2


From 637bdc79f6562ab92cbc223b08112d956dff280a Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@Dotans-MacBook-Pro.local>
Date: Tue, 22 Nov 2016 14:14:05 +0200
Subject: [PATCH 88/89] Step 14: Cleanup

---
 manuals/templates/step14.md |  36 ++++++++++++
 manuals/views/step14.md     | 130 ++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 166 insertions(+)
 create mode 100644 manuals/templates/step14.md
 create mode 100644 manuals/views/step14.md

diff --git a/manuals/templates/step14.md b/manuals/templates/step14.md
new file mode 100644
index 0000000..959cce3
--- /dev/null
+++ b/manuals/templates/step14.md
@@ -0,0 +1,36 @@
+So now that we are done with the migration, we need to perform some clean-ups and make sure that we remove all the old files.
+
+Let's join all the stylesheets we need under the same directory - `imports/styelsheets/`, now they are in `imports/ui/stylesheets/` (commit #10.1).
+
+> Make sure to also take `imports/ui/components/lists-show.less` !
+
+And we also need to update the imports in the main less file:
+
+{{{diff_step 14.2}}} 
+
+Now we can remove all the files we no longer use from `imports/ui/` directory - which are ALL of the files, except `errors.js` which we use, so let's move it to `/imports/` directory first, and them remove `imports/ui/` directory (commit #10.4).
+
+We can also removed all client startup files (`imports/startup/client`), since we no longer use them (in commit #10.3).
+
+And let's update the imports of `errors.js` file:
+
+{{{diff_step 14.5}}} 
+
+We can also now remove Meteor packages we no longer use that related to Blaze or Router!
+
+So let's do it by running:
+
+    meteor remove blaze-html-templates aldeed:template-extension kadira:flow-router kadira:blaze-layout arillo:flow-router-helpers zimme:active-route
+
+And now we can also use the regular Angular 2 compilers package, so let's remove the old one and use the regular one:
+
+    meteor remove angular2-with-blaze-compilers
+    meteor add angular2-compilers less
+
+And the last step, is to remove `.ng2` from the HTML files extension and update it to be `.html`, remember also to update it in the Component `templateUrl` !
+
+We can also remove the import of Blaze Template from the MainComponent:
+
+{{{diff_step 14.6}}} 
+
+That's it! In the next chapter we will take about the next step of migration from Blaze to Angular 2.
diff --git a/manuals/views/step14.md b/manuals/views/step14.md
new file mode 100644
index 0000000..47404a2
--- /dev/null
+++ b/manuals/views/step14.md
@@ -0,0 +1,130 @@
+[{]: <region> (header)
+# Step 14: Cleanup
+[}]: #
+[{]: <region> (body)
+So now that we are done with the migration, we need to perform some clean-ups and make sure that we remove all the old files.
+
+Let's join all the stylesheets we need under the same directory - `imports/styelsheets/`, now they are in `imports/ui/stylesheets/` (commit #10.1).
+
+> Make sure to also take `imports/ui/components/lists-show.less` !
+
+And we also need to update the imports in the main less file:
+
+[{]: <helper> (diff_step 14.2)
+#### Step 14.2: Update the imports path
+
+##### Changed client/main.less
+```diff
+@@ -1,22 +1,19 @@
+-┊ 1┊  ┊@import "{}/imports/ui/stylesheets/reset.less";
++┊  ┊ 1┊@import "{}/imports/stylesheets/reset.less";
+ ┊ 2┊ 2┊
+ ┊ 3┊ 3┊// Global namespace
+-┊ 4┊  ┊@import "{}/imports/ui/stylesheets/base.less";
+-┊ 5┊  ┊@import '{}/imports/ui/stylesheets/button.less';
+-┊ 6┊  ┊@import '{}/imports/ui/stylesheets/form.less';
+-┊ 7┊  ┊@import '{}/imports/ui/stylesheets/icon.less';
+-┊ 8┊  ┊@import '{}/imports/ui/stylesheets/layout.less';
+-┊ 9┊  ┊@import '{}/imports/ui/stylesheets/link.less';
+-┊10┊  ┊@import '{}/imports/ui/stylesheets/menu.less';
+-┊11┊  ┊@import '{}/imports/ui/stylesheets/nav.less';
++┊  ┊ 4┊@import "{}/imports/stylesheets/base.less";
++┊  ┊ 5┊@import '{}/imports/stylesheets/button.less';
++┊  ┊ 6┊@import '{}/imports/stylesheets/form.less';
++┊  ┊ 7┊@import '{}/imports/stylesheets/icon.less';
++┊  ┊ 8┊@import '{}/imports/stylesheets/layout.less';
++┊  ┊ 9┊@import '{}/imports/stylesheets/link.less';
++┊  ┊10┊@import '{}/imports/stylesheets/menu.less';
++┊  ┊11┊@import '{}/imports/stylesheets/nav.less';
+ ┊12┊12┊
+ ┊13┊13┊// Global components
+-┊14┊  ┊@import '{}/imports/ui/stylesheets/list-items.less';
+-┊15┊  ┊@import '{}/imports/ui/stylesheets/message.less';
+-┊16┊  ┊@import '{}/imports/ui/stylesheets/notification.less';
++┊  ┊14┊@import '{}/imports/stylesheets/list-items.less';
++┊  ┊15┊@import '{}/imports/stylesheets/message.less';
++┊  ┊16┊@import '{}/imports/stylesheets/notification.less';
+ ┊17┊17┊
+-┊18┊  ┊// Individual components
+-┊19┊  ┊@import "{}/imports/ui/components/lists-show.less";
+-┊20┊  ┊@import "{}/imports/ui/components/loading.less";
+-┊21┊  ┊@import "{}/imports/ui/pages/app-not-found.less";
+-┊22┊  ┊@import "{}/imports/ui/accounts/accounts-templates.less";
++┊  ┊18┊// Individual compons
++┊  ┊19┊@import "{}/imports/stylesheets/lists-show.less";
+```
+[}]: # 
+
+Now we can remove all the files we no longer use from `imports/ui/` directory - which are ALL of the files, except `errors.js` which we use, so let's move it to `/imports/` directory first, and them remove `imports/ui/` directory (commit #10.4).
+
+We can also removed all client startup files (`imports/startup/client`), since we no longer use them (in commit #10.3).
+
+And let's update the imports of `errors.js` file:
+
+[{]: <helper> (diff_step 14.5)
+#### Step 14.5: Updated imports path for errors helpers
+
+##### Changed client/imports/components/list-item.component.ts
+```diff
+@@ -4,7 +4,7 @@
+ ┊ 4┊ 4┊  updateText,
+ ┊ 5┊ 5┊  remove,
+ ┊ 6┊ 6┊} from '../../../imports/api/todos/methods';
+-┊ 7┊  ┊import {displayError} from '../../../imports/ui/lib/errors';
++┊  ┊ 7┊import {displayError} from '../../../imports/errors';
+ ┊ 8┊ 8┊
+ ┊ 9┊ 9┊declare let _;
+ ┊10┊10┊
+```
+
+##### Changed client/imports/components/list-show.component.ts
+```diff
+@@ -9,7 +9,7 @@
+ ┊ 9┊ 9┊  remove,
+ ┊10┊10┊  insert,
+ ┊11┊11┊} from '../../../imports/api/todos/methods';
+-┊12┊  ┊import { displayError } from '../../../imports/ui/lib/errors';
++┊  ┊12┊import { displayError } from '../../../imports/errors';
+ ┊13┊13┊import {Observable} from "rxjs";
+ ┊14┊14┊
+ ┊15┊15┊@Component({
+```
+[}]: # 
+
+We can also now remove Meteor packages we no longer use that related to Blaze or Router!
+
+So let's do it by running:
+
+    meteor remove blaze-html-templates aldeed:template-extension kadira:flow-router kadira:blaze-layout arillo:flow-router-helpers zimme:active-route
+
+And now we can also use the regular Angular 2 compilers package, so let's remove the old one and use the regular one:
+
+    meteor remove angular2-with-blaze-compilers
+    meteor add angular2-compilers less
+
+And the last step, is to remove `.ng2` from the HTML files extension and update it to be `.html`, remember also to update it in the Component `templateUrl` !
+
+We can also remove the import of Blaze Template from the MainComponent:
+
+[{]: <helper> (diff_step 14.6)
+#### Step 14.6: Removed old blaze import
+
+##### Changed client/imports/main.component.ts
+```diff
+@@ -1,4 +1,3 @@
+-┊1┊ ┊import '/imports/startup/client';
+ ┊2┊1┊import {Component, OnInit} from "@angular/core";
+ ┊3┊2┊import {Meteor} from "meteor/meteor";
+ ┊4┊3┊import {MeteorObservable} from "meteor-rxjs";
+```
+[}]: # 
+
+That's it! In the next chapter we will take about the next step of migration from Blaze to Angular 2.
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step13.md) | [Next Step >](step15.md) |
+|:--------------------------------|--------------------------------:|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2


From d33d4a91429070dfdc872c5efe09c8f5f8d0c20b Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@Dotans-MacBook-Pro.local>
Date: Tue, 22 Nov 2016 14:16:02 +0200
Subject: [PATCH 89/89] Step 15: Next Steps

---
 manuals/templates/step15.md | 19 +++++++++++++++++++
 manuals/views/step15.md     | 31 +++++++++++++++++++++++++++++++
 2 files changed, 50 insertions(+)
 create mode 100644 manuals/templates/step15.md
 create mode 100644 manuals/views/step15.md

diff --git a/manuals/templates/step15.md b/manuals/templates/step15.md
new file mode 100644
index 0000000..23ce7b7
--- /dev/null
+++ b/manuals/templates/step15.md
@@ -0,0 +1,19 @@
+So what's next? there are several this we removed or did not migrate at this tutorial - because we want to keep in simple and focus on the important difference between Angular 2 and Blaze.
+
+### i18n
+
+In the Todos, there is support for i18n using Meteor package that provides helpers for Blaze Templates so we was not able to use it
+
+Angular 2 still does not provide builtin solution for i18n, but you can use external packages such as [ng2-translate](https://github.com/ocombe/ng2-translate).
+
+### Unit Tests
+
+If you wish to test you Components as standalone - you can use the recommendation of Angular 2 for unit tests, which [can be found here](https://angular.io/docs/ts/latest/guide/testing.html).
+
+If you with to test you Angular 2 code with your Meteor code, you can use any testing framework for Meteor, we recommend Mocha using `practicalmeteor:mocha` package, if you wish to see an example for Angular 2 Component tests, you can look at [Angular2-Meteor tests files](https://github.com/Urigo/angular2-meteor/tree/master/tests/client/unit).
+
+### Animations
+
+In the Todos app, they used `momentum` package to create Animations such as fade when loading the main page.
+
+The solution for Angular 2 animations is built-in support for animations, you can [read about it here](https://angular.io/docs/ts/latest/guide/animations.html).
diff --git a/manuals/views/step15.md b/manuals/views/step15.md
new file mode 100644
index 0000000..81b2adf
--- /dev/null
+++ b/manuals/views/step15.md
@@ -0,0 +1,31 @@
+[{]: <region> (header)
+# Step 15: Next Steps
+[}]: #
+[{]: <region> (body)
+So what's next? there are several this we removed or did not migrate at this tutorial - because we want to keep in simple and focus on the important difference between Angular 2 and Blaze.
+
+### i18n
+
+In the Todos, there is support for i18n using Meteor package that provides helpers for Blaze Templates so we was not able to use it
+
+Angular 2 still does not provide builtin solution for i18n, but you can use external packages such as [ng2-translate](https://github.com/ocombe/ng2-translate).
+
+### Unit Tests
+
+If you wish to test you Components as standalone - you can use the recommendation of Angular 2 for unit tests, which [can be found here](https://angular.io/docs/ts/latest/guide/testing.html).
+
+If you with to test you Angular 2 code with your Meteor code, you can use any testing framework for Meteor, we recommend Mocha using `practicalmeteor:mocha` package, if you wish to see an example for Angular 2 Component tests, you can look at [Angular2-Meteor tests files](https://github.com/Urigo/angular2-meteor/tree/master/tests/client/unit).
+
+### Animations
+
+In the Todos app, they used `momentum` package to create Animations such as fade when loading the main page.
+
+The solution for Angular 2 animations is built-in support for animations, you can [read about it here](https://angular.io/docs/ts/latest/guide/animations.html).
+
+[}]: #
+[{]: <region> (footer)
+[{]: <helper> (nav_step)
+| [< Previous Step](step14.md) |
+|:----------------------|
+[}]: #
+[}]: #
\ No newline at end of file
-- 
2.10.2

